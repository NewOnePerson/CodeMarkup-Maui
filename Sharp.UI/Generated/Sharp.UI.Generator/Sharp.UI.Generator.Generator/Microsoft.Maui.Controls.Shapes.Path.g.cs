//
// <auto-generated>
//

#pragma warning disable CS8669


namespace Sharp.UI
{
    public static class PathGeneratedExtension
    {
        public static T Data<T>(this T obj,
            Microsoft.Maui.Controls.Shapes.Geometry? data)
            where T : Sharp.UI.IPath
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Shapes.Path>(obj);
            if (data != null) mauiObject.Data = (Microsoft.Maui.Controls.Shapes.Geometry)data;
            return obj;
        }
        
        public static T Data<T>(this T obj,
            Microsoft.Maui.Controls.Shapes.Geometry? data,
            System.Func<BindableDef<Microsoft.Maui.Controls.Shapes.Geometry>, BindableDef<Microsoft.Maui.Controls.Shapes.Geometry>> definition)
            where T : Sharp.UI.IPath
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Shapes.Path>(obj);
            if (data != null) mauiObject.Data = (Microsoft.Maui.Controls.Shapes.Geometry)data;
            var def = definition(new BindableDef<Microsoft.Maui.Controls.Shapes.Geometry>(mauiObject, Microsoft.Maui.Controls.Shapes.Path.DataProperty));
            if (def.ValueIsSet()) mauiObject.Data = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Data<T>(this T obj,
            System.Func<BindableDef<Microsoft.Maui.Controls.Shapes.Geometry>, BindableDef<Microsoft.Maui.Controls.Shapes.Geometry>> definition)
            where T : Sharp.UI.IPath
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Shapes.Path>(obj);
            var def = definition(new BindableDef<Microsoft.Maui.Controls.Shapes.Geometry>(mauiObject, Microsoft.Maui.Controls.Shapes.Path.DataProperty));
            if (def.ValueIsSet()) mauiObject.Data = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T RenderTransform<T>(this T obj,
            Microsoft.Maui.Controls.Shapes.Transform? renderTransform)
            where T : Sharp.UI.IPath
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Shapes.Path>(obj);
            if (renderTransform != null) mauiObject.RenderTransform = (Microsoft.Maui.Controls.Shapes.Transform)renderTransform;
            return obj;
        }
        
        public static T RenderTransform<T>(this T obj,
            Microsoft.Maui.Controls.Shapes.Transform? renderTransform,
            System.Func<BindableDef<Microsoft.Maui.Controls.Shapes.Transform>, BindableDef<Microsoft.Maui.Controls.Shapes.Transform>> definition)
            where T : Sharp.UI.IPath
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Shapes.Path>(obj);
            if (renderTransform != null) mauiObject.RenderTransform = (Microsoft.Maui.Controls.Shapes.Transform)renderTransform;
            var def = definition(new BindableDef<Microsoft.Maui.Controls.Shapes.Transform>(mauiObject, Microsoft.Maui.Controls.Shapes.Path.RenderTransformProperty));
            if (def.ValueIsSet()) mauiObject.RenderTransform = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T RenderTransform<T>(this T obj,
            System.Func<BindableDef<Microsoft.Maui.Controls.Shapes.Transform>, BindableDef<Microsoft.Maui.Controls.Shapes.Transform>> definition)
            where T : Sharp.UI.IPath
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Shapes.Path>(obj);
            var def = definition(new BindableDef<Microsoft.Maui.Controls.Shapes.Transform>(mauiObject, Microsoft.Maui.Controls.Shapes.Path.RenderTransformProperty));
            if (def.ValueIsSet()) mauiObject.RenderTransform = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T @class<T>(this T obj,
            System.Collections.Generic.IList<string>? @class)
            where T : Sharp.UI.IPath
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Shapes.Path>(obj);
            if (@class != null) mauiObject.@class = (System.Collections.Generic.IList<string>)@class;
            return obj;
        }
        
        public static T @class<T>(this T obj,
            System.Collections.Generic.IList<string>? @class,
            System.Func<ValueDef<System.Collections.Generic.IList<string>>, ValueDef<System.Collections.Generic.IList<string>>> definition)
            where T : Sharp.UI.IPath
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Shapes.Path>(obj);
            if (@class != null) mauiObject.@class = (System.Collections.Generic.IList<string>)@class;
            var def = definition(new ValueDef<System.Collections.Generic.IList<string>>());
            if (def.ValueIsSet()) mauiObject.@class = def.GetValue();
            return obj;
        }
        
        public static T @class<T>(this T obj,
            System.Func<ValueDef<System.Collections.Generic.IList<string>>, ValueDef<System.Collections.Generic.IList<string>>> definition)
            where T : Sharp.UI.IPath
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Shapes.Path>(obj);
            var def = definition(new ValueDef<System.Collections.Generic.IList<string>>());
            if (def.ValueIsSet()) mauiObject.@class = def.GetValue();
            return obj;
        }
        
    }
}


#pragma warning restore CS8669
