//
// <auto-generated>
//

#pragma warning disable CS8669


namespace Sharp.UI
{
    public static class BorderGeneratedExtension
    {
        public static T Content<T>(this T obj,
            Microsoft.Maui.Controls.View? content)
            where T : Sharp.UI.IBorder
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Border>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.Controls.View?>(content);
            if (content != null) mauiObject.Content = mauiValue;
            return obj;
        }
        
        public static T Content<T>(this T obj,
            Microsoft.Maui.Controls.View? content,
            System.Func<BindableDef<Microsoft.Maui.Controls.View?>, BindableDef<Microsoft.Maui.Controls.View?>> definition)
            where T : Sharp.UI.IBorder
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Border>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.Controls.View?>(content);
            if (content != null) mauiObject.Content = mauiValue;
            var def = definition(new BindableDef<Microsoft.Maui.Controls.View?>(mauiObject, Microsoft.Maui.Controls.Border.ContentProperty));
            if (def.ValueIsSet()) mauiObject.Content = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Content<T>(this T obj,
            System.Func<BindableDef<Microsoft.Maui.Controls.View?>, BindableDef<Microsoft.Maui.Controls.View?>> definition)
            where T : Sharp.UI.IBorder
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Border>(obj);
            var def = definition(new BindableDef<Microsoft.Maui.Controls.View?>(mauiObject, Microsoft.Maui.Controls.Border.ContentProperty));
            if (def.ValueIsSet()) mauiObject.Content = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Padding<T>(this T obj,
            Microsoft.Maui.Thickness? padding)
            where T : Sharp.UI.IBorder
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Border>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.Thickness>(padding);
            if (padding != null) mauiObject.Padding = mauiValue;
            return obj;
        }
        
        public static T Padding<T>(this T obj,
            Microsoft.Maui.Thickness? padding,
            System.Func<BindableDef<Microsoft.Maui.Thickness>, BindableDef<Microsoft.Maui.Thickness>> definition)
            where T : Sharp.UI.IBorder
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Border>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.Thickness>(padding);
            if (padding != null) mauiObject.Padding = mauiValue;
            var def = definition(new BindableDef<Microsoft.Maui.Thickness>(mauiObject, Microsoft.Maui.Controls.Border.PaddingProperty));
            if (def.ValueIsSet()) mauiObject.Padding = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Padding<T>(this T obj,
            System.Func<BindableDef<Microsoft.Maui.Thickness>, BindableDef<Microsoft.Maui.Thickness>> definition)
            where T : Sharp.UI.IBorder
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Border>(obj);
            var def = definition(new BindableDef<Microsoft.Maui.Thickness>(mauiObject, Microsoft.Maui.Controls.Border.PaddingProperty));
            if (def.ValueIsSet()) mauiObject.Padding = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T StrokeShape<T>(this T obj,
            Microsoft.Maui.Graphics.IShape? strokeShape)
            where T : Sharp.UI.IBorder
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Border>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.Graphics.IShape?>(strokeShape);
            if (strokeShape != null) mauiObject.StrokeShape = mauiValue;
            return obj;
        }
        
        public static T StrokeShape<T>(this T obj,
            Microsoft.Maui.Graphics.IShape? strokeShape,
            System.Func<BindableDef<Microsoft.Maui.Graphics.IShape?>, BindableDef<Microsoft.Maui.Graphics.IShape?>> definition)
            where T : Sharp.UI.IBorder
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Border>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.Graphics.IShape?>(strokeShape);
            if (strokeShape != null) mauiObject.StrokeShape = mauiValue;
            var def = definition(new BindableDef<Microsoft.Maui.Graphics.IShape?>(mauiObject, Microsoft.Maui.Controls.Border.StrokeShapeProperty));
            if (def.ValueIsSet()) mauiObject.StrokeShape = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T StrokeShape<T>(this T obj,
            System.Func<BindableDef<Microsoft.Maui.Graphics.IShape?>, BindableDef<Microsoft.Maui.Graphics.IShape?>> definition)
            where T : Sharp.UI.IBorder
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Border>(obj);
            var def = definition(new BindableDef<Microsoft.Maui.Graphics.IShape?>(mauiObject, Microsoft.Maui.Controls.Border.StrokeShapeProperty));
            if (def.ValueIsSet()) mauiObject.StrokeShape = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Stroke<T>(this T obj,
            Microsoft.Maui.Controls.Brush? stroke)
            where T : Sharp.UI.IBorder
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Border>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.Controls.Brush?>(stroke);
            if (stroke != null) mauiObject.Stroke = mauiValue;
            return obj;
        }
        
        public static T Stroke<T>(this T obj,
            Microsoft.Maui.Controls.Brush? stroke,
            System.Func<BindableDef<Microsoft.Maui.Controls.Brush?>, BindableDef<Microsoft.Maui.Controls.Brush?>> definition)
            where T : Sharp.UI.IBorder
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Border>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.Controls.Brush?>(stroke);
            if (stroke != null) mauiObject.Stroke = mauiValue;
            var def = definition(new BindableDef<Microsoft.Maui.Controls.Brush?>(mauiObject, Microsoft.Maui.Controls.Border.StrokeProperty));
            if (def.ValueIsSet()) mauiObject.Stroke = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Stroke<T>(this T obj,
            System.Func<BindableDef<Microsoft.Maui.Controls.Brush?>, BindableDef<Microsoft.Maui.Controls.Brush?>> definition)
            where T : Sharp.UI.IBorder
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Border>(obj);
            var def = definition(new BindableDef<Microsoft.Maui.Controls.Brush?>(mauiObject, Microsoft.Maui.Controls.Border.StrokeProperty));
            if (def.ValueIsSet()) mauiObject.Stroke = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T StrokeThickness<T>(this T obj,
            double? strokeThickness)
            where T : Sharp.UI.IBorder
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Border>(obj);
            var mauiValue = MauiWrapper.Value<double>(strokeThickness);
            if (strokeThickness != null) mauiObject.StrokeThickness = mauiValue;
            return obj;
        }
        
        public static T StrokeThickness<T>(this T obj,
            double? strokeThickness,
            System.Func<BindableDef<double>, BindableDef<double>> definition)
            where T : Sharp.UI.IBorder
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Border>(obj);
            var mauiValue = MauiWrapper.Value<double>(strokeThickness);
            if (strokeThickness != null) mauiObject.StrokeThickness = mauiValue;
            var def = definition(new BindableDef<double>(mauiObject, Microsoft.Maui.Controls.Border.StrokeThicknessProperty));
            if (def.ValueIsSet()) mauiObject.StrokeThickness = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T StrokeThickness<T>(this T obj,
            System.Func<BindableDef<double>, BindableDef<double>> definition)
            where T : Sharp.UI.IBorder
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Border>(obj);
            var def = definition(new BindableDef<double>(mauiObject, Microsoft.Maui.Controls.Border.StrokeThicknessProperty));
            if (def.ValueIsSet()) mauiObject.StrokeThickness = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T StrokeDashArray<T>(this T obj,
            Microsoft.Maui.Controls.DoubleCollection? strokeDashArray)
            where T : Sharp.UI.IBorder
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Border>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.Controls.DoubleCollection?>(strokeDashArray);
            if (strokeDashArray != null) mauiObject.StrokeDashArray = mauiValue;
            return obj;
        }
        
        public static T StrokeDashArray<T>(this T obj,
            Microsoft.Maui.Controls.DoubleCollection? strokeDashArray,
            System.Func<BindableDef<Microsoft.Maui.Controls.DoubleCollection?>, BindableDef<Microsoft.Maui.Controls.DoubleCollection?>> definition)
            where T : Sharp.UI.IBorder
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Border>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.Controls.DoubleCollection?>(strokeDashArray);
            if (strokeDashArray != null) mauiObject.StrokeDashArray = mauiValue;
            var def = definition(new BindableDef<Microsoft.Maui.Controls.DoubleCollection?>(mauiObject, Microsoft.Maui.Controls.Border.StrokeDashArrayProperty));
            if (def.ValueIsSet()) mauiObject.StrokeDashArray = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T StrokeDashArray<T>(this T obj,
            System.Func<BindableDef<Microsoft.Maui.Controls.DoubleCollection?>, BindableDef<Microsoft.Maui.Controls.DoubleCollection?>> definition)
            where T : Sharp.UI.IBorder
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Border>(obj);
            var def = definition(new BindableDef<Microsoft.Maui.Controls.DoubleCollection?>(mauiObject, Microsoft.Maui.Controls.Border.StrokeDashArrayProperty));
            if (def.ValueIsSet()) mauiObject.StrokeDashArray = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T StrokeDashOffset<T>(this T obj,
            double? strokeDashOffset)
            where T : Sharp.UI.IBorder
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Border>(obj);
            var mauiValue = MauiWrapper.Value<double>(strokeDashOffset);
            if (strokeDashOffset != null) mauiObject.StrokeDashOffset = mauiValue;
            return obj;
        }
        
        public static T StrokeDashOffset<T>(this T obj,
            double? strokeDashOffset,
            System.Func<BindableDef<double>, BindableDef<double>> definition)
            where T : Sharp.UI.IBorder
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Border>(obj);
            var mauiValue = MauiWrapper.Value<double>(strokeDashOffset);
            if (strokeDashOffset != null) mauiObject.StrokeDashOffset = mauiValue;
            var def = definition(new BindableDef<double>(mauiObject, Microsoft.Maui.Controls.Border.StrokeDashOffsetProperty));
            if (def.ValueIsSet()) mauiObject.StrokeDashOffset = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T StrokeDashOffset<T>(this T obj,
            System.Func<BindableDef<double>, BindableDef<double>> definition)
            where T : Sharp.UI.IBorder
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Border>(obj);
            var def = definition(new BindableDef<double>(mauiObject, Microsoft.Maui.Controls.Border.StrokeDashOffsetProperty));
            if (def.ValueIsSet()) mauiObject.StrokeDashOffset = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T StrokeLineCap<T>(this T obj,
            Microsoft.Maui.Controls.Shapes.PenLineCap? strokeLineCap)
            where T : Sharp.UI.IBorder
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Border>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.Controls.Shapes.PenLineCap>(strokeLineCap);
            if (strokeLineCap != null) mauiObject.StrokeLineCap = mauiValue;
            return obj;
        }
        
        public static T StrokeLineCap<T>(this T obj,
            Microsoft.Maui.Controls.Shapes.PenLineCap? strokeLineCap,
            System.Func<BindableDef<Microsoft.Maui.Controls.Shapes.PenLineCap>, BindableDef<Microsoft.Maui.Controls.Shapes.PenLineCap>> definition)
            where T : Sharp.UI.IBorder
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Border>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.Controls.Shapes.PenLineCap>(strokeLineCap);
            if (strokeLineCap != null) mauiObject.StrokeLineCap = mauiValue;
            var def = definition(new BindableDef<Microsoft.Maui.Controls.Shapes.PenLineCap>(mauiObject, Microsoft.Maui.Controls.Border.StrokeLineCapProperty));
            if (def.ValueIsSet()) mauiObject.StrokeLineCap = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T StrokeLineCap<T>(this T obj,
            System.Func<BindableDef<Microsoft.Maui.Controls.Shapes.PenLineCap>, BindableDef<Microsoft.Maui.Controls.Shapes.PenLineCap>> definition)
            where T : Sharp.UI.IBorder
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Border>(obj);
            var def = definition(new BindableDef<Microsoft.Maui.Controls.Shapes.PenLineCap>(mauiObject, Microsoft.Maui.Controls.Border.StrokeLineCapProperty));
            if (def.ValueIsSet()) mauiObject.StrokeLineCap = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T StrokeLineJoin<T>(this T obj,
            Microsoft.Maui.Controls.Shapes.PenLineJoin? strokeLineJoin)
            where T : Sharp.UI.IBorder
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Border>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.Controls.Shapes.PenLineJoin>(strokeLineJoin);
            if (strokeLineJoin != null) mauiObject.StrokeLineJoin = mauiValue;
            return obj;
        }
        
        public static T StrokeLineJoin<T>(this T obj,
            Microsoft.Maui.Controls.Shapes.PenLineJoin? strokeLineJoin,
            System.Func<BindableDef<Microsoft.Maui.Controls.Shapes.PenLineJoin>, BindableDef<Microsoft.Maui.Controls.Shapes.PenLineJoin>> definition)
            where T : Sharp.UI.IBorder
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Border>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.Controls.Shapes.PenLineJoin>(strokeLineJoin);
            if (strokeLineJoin != null) mauiObject.StrokeLineJoin = mauiValue;
            var def = definition(new BindableDef<Microsoft.Maui.Controls.Shapes.PenLineJoin>(mauiObject, Microsoft.Maui.Controls.Border.StrokeLineJoinProperty));
            if (def.ValueIsSet()) mauiObject.StrokeLineJoin = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T StrokeLineJoin<T>(this T obj,
            System.Func<BindableDef<Microsoft.Maui.Controls.Shapes.PenLineJoin>, BindableDef<Microsoft.Maui.Controls.Shapes.PenLineJoin>> definition)
            where T : Sharp.UI.IBorder
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Border>(obj);
            var def = definition(new BindableDef<Microsoft.Maui.Controls.Shapes.PenLineJoin>(mauiObject, Microsoft.Maui.Controls.Border.StrokeLineJoinProperty));
            if (def.ValueIsSet()) mauiObject.StrokeLineJoin = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T StrokeMiterLimit<T>(this T obj,
            double? strokeMiterLimit)
            where T : Sharp.UI.IBorder
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Border>(obj);
            var mauiValue = MauiWrapper.Value<double>(strokeMiterLimit);
            if (strokeMiterLimit != null) mauiObject.StrokeMiterLimit = mauiValue;
            return obj;
        }
        
        public static T StrokeMiterLimit<T>(this T obj,
            double? strokeMiterLimit,
            System.Func<BindableDef<double>, BindableDef<double>> definition)
            where T : Sharp.UI.IBorder
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Border>(obj);
            var mauiValue = MauiWrapper.Value<double>(strokeMiterLimit);
            if (strokeMiterLimit != null) mauiObject.StrokeMiterLimit = mauiValue;
            var def = definition(new BindableDef<double>(mauiObject, Microsoft.Maui.Controls.Border.StrokeMiterLimitProperty));
            if (def.ValueIsSet()) mauiObject.StrokeMiterLimit = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T StrokeMiterLimit<T>(this T obj,
            System.Func<BindableDef<double>, BindableDef<double>> definition)
            where T : Sharp.UI.IBorder
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Border>(obj);
            var def = definition(new BindableDef<double>(mauiObject, Microsoft.Maui.Controls.Border.StrokeMiterLimitProperty));
            if (def.ValueIsSet()) mauiObject.StrokeMiterLimit = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
    }
}


#pragma warning restore CS8669
