//
// <auto-generated>
//

#pragma warning disable CS8669


namespace Sharp.UI
{
    public static class BindingBaseGeneratedExtension
    {
        public static T Mode<T>(this T obj,
            Microsoft.Maui.Controls.BindingMode? mode)
            where T : Sharp.UI.IBindingBase
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.BindingBase>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.Controls.BindingMode>(mode);
            if (mode != null) mauiObject.Mode = mauiValue;
            return obj;
        }
        
        public static T Mode<T>(this T obj,
            Microsoft.Maui.Controls.BindingMode? mode,
            System.Func<ValueDef<Microsoft.Maui.Controls.BindingMode>, ValueDef<Microsoft.Maui.Controls.BindingMode>> definition)
            where T : Sharp.UI.IBindingBase
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.BindingBase>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.Controls.BindingMode>(mode);
            if (mode != null) mauiObject.Mode = mauiValue;
            var def = definition(new ValueDef<Microsoft.Maui.Controls.BindingMode>());
            if (def.ValueIsSet()) mauiObject.Mode = def.GetValue();
            return obj;
        }
        
        public static T Mode<T>(this T obj,
            System.Func<ValueDef<Microsoft.Maui.Controls.BindingMode>, ValueDef<Microsoft.Maui.Controls.BindingMode>> definition)
            where T : Sharp.UI.IBindingBase
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.BindingBase>(obj);
            var def = definition(new ValueDef<Microsoft.Maui.Controls.BindingMode>());
            if (def.ValueIsSet()) mauiObject.Mode = def.GetValue();
            return obj;
        }
        
        public static T StringFormat<T>(this T obj,
            string? stringFormat)
            where T : Sharp.UI.IBindingBase
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.BindingBase>(obj);
            var mauiValue = MauiWrapper.Value<string>(stringFormat);
            if (stringFormat != null) mauiObject.StringFormat = mauiValue;
            return obj;
        }
        
        public static T StringFormat<T>(this T obj,
            string? stringFormat,
            System.Func<ValueDef<string>, ValueDef<string>> definition)
            where T : Sharp.UI.IBindingBase
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.BindingBase>(obj);
            var mauiValue = MauiWrapper.Value<string>(stringFormat);
            if (stringFormat != null) mauiObject.StringFormat = mauiValue;
            var def = definition(new ValueDef<string>());
            if (def.ValueIsSet()) mauiObject.StringFormat = def.GetValue();
            return obj;
        }
        
        public static T StringFormat<T>(this T obj,
            System.Func<ValueDef<string>, ValueDef<string>> definition)
            where T : Sharp.UI.IBindingBase
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.BindingBase>(obj);
            var def = definition(new ValueDef<string>());
            if (def.ValueIsSet()) mauiObject.StringFormat = def.GetValue();
            return obj;
        }
        
        public static T TargetNullValue<T>(this T obj,
            object? targetNullValue)
            where T : Sharp.UI.IBindingBase
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.BindingBase>(obj);
            var mauiValue = MauiWrapper.Value<object>(targetNullValue);
            if (targetNullValue != null) mauiObject.TargetNullValue = mauiValue;
            return obj;
        }
        
        public static T TargetNullValue<T>(this T obj,
            object? targetNullValue,
            System.Func<ValueDef<object>, ValueDef<object>> definition)
            where T : Sharp.UI.IBindingBase
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.BindingBase>(obj);
            var mauiValue = MauiWrapper.Value<object>(targetNullValue);
            if (targetNullValue != null) mauiObject.TargetNullValue = mauiValue;
            var def = definition(new ValueDef<object>());
            if (def.ValueIsSet()) mauiObject.TargetNullValue = def.GetValue();
            return obj;
        }
        
        public static T TargetNullValue<T>(this T obj,
            System.Func<ValueDef<object>, ValueDef<object>> definition)
            where T : Sharp.UI.IBindingBase
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.BindingBase>(obj);
            var def = definition(new ValueDef<object>());
            if (def.ValueIsSet()) mauiObject.TargetNullValue = def.GetValue();
            return obj;
        }
        
        public static T FallbackValue<T>(this T obj,
            object? fallbackValue)
            where T : Sharp.UI.IBindingBase
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.BindingBase>(obj);
            var mauiValue = MauiWrapper.Value<object>(fallbackValue);
            if (fallbackValue != null) mauiObject.FallbackValue = mauiValue;
            return obj;
        }
        
        public static T FallbackValue<T>(this T obj,
            object? fallbackValue,
            System.Func<ValueDef<object>, ValueDef<object>> definition)
            where T : Sharp.UI.IBindingBase
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.BindingBase>(obj);
            var mauiValue = MauiWrapper.Value<object>(fallbackValue);
            if (fallbackValue != null) mauiObject.FallbackValue = mauiValue;
            var def = definition(new ValueDef<object>());
            if (def.ValueIsSet()) mauiObject.FallbackValue = def.GetValue();
            return obj;
        }
        
        public static T FallbackValue<T>(this T obj,
            System.Func<ValueDef<object>, ValueDef<object>> definition)
            where T : Sharp.UI.IBindingBase
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.BindingBase>(obj);
            var def = definition(new ValueDef<object>());
            if (def.ValueIsSet()) mauiObject.FallbackValue = def.GetValue();
            return obj;
        }
        
    }
}


#pragma warning restore CS8669
