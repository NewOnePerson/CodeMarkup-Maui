//
// <auto-generated>
//

#pragma warning disable CS8669


namespace Sharp.UI
{
    public static class VisualStateGroupGeneratedExtension
    {
        public static T TargetType<T>(this T obj,
            System.Type? targetType)
            where T : Sharp.UI.IVisualStateGroup
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.VisualStateGroup>(obj);
            if (targetType != null) mauiObject.TargetType = (System.Type)targetType;
            return obj;
        }
        
        public static T TargetType<T>(this T obj,
            System.Type? targetType,
            System.Func<ValueDef<System.Type>, ValueDef<System.Type>> definition)
            where T : Sharp.UI.IVisualStateGroup
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.VisualStateGroup>(obj);
            if (targetType != null) mauiObject.TargetType = (System.Type)targetType;
            var def = definition(new ValueDef<System.Type>());
            if (def.ValueIsSet()) mauiObject.TargetType = def.GetValue();
            return obj;
        }
        
        public static T TargetType<T>(this T obj,
            System.Func<ValueDef<System.Type>, ValueDef<System.Type>> definition)
            where T : Sharp.UI.IVisualStateGroup
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.VisualStateGroup>(obj);
            var def = definition(new ValueDef<System.Type>());
            if (def.ValueIsSet()) mauiObject.TargetType = def.GetValue();
            return obj;
        }
        
        public static T Name<T>(this T obj,
            string? name)
            where T : Sharp.UI.IVisualStateGroup
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.VisualStateGroup>(obj);
            if (name != null) mauiObject.Name = (string)name;
            return obj;
        }
        
        public static T Name<T>(this T obj,
            string? name,
            System.Func<ValueDef<string>, ValueDef<string>> definition)
            where T : Sharp.UI.IVisualStateGroup
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.VisualStateGroup>(obj);
            if (name != null) mauiObject.Name = (string)name;
            var def = definition(new ValueDef<string>());
            if (def.ValueIsSet()) mauiObject.Name = def.GetValue();
            return obj;
        }
        
        public static T Name<T>(this T obj,
            System.Func<ValueDef<string>, ValueDef<string>> definition)
            where T : Sharp.UI.IVisualStateGroup
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.VisualStateGroup>(obj);
            var def = definition(new ValueDef<string>());
            if (def.ValueIsSet()) mauiObject.Name = def.GetValue();
            return obj;
        }
        
        public static T States<T>(this T obj,
            System.Collections.Generic.IList<Microsoft.Maui.Controls.VisualState> states)
            where T : Sharp.UI.IVisualStateGroup
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.VisualStateGroup>(obj);
            foreach (var item in states) mauiObject.States.Add(item);
            return obj;
        }

        public static T States<T>(this T obj,
            params Microsoft.Maui.Controls.VisualState[] states)
            where T : Sharp.UI.IVisualStateGroup
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.VisualStateGroup>(obj);
            foreach (var item in states) mauiObject.States.Add(item);
            return obj;
        }

        public static T States<T>(this T obj,
            System.Func<Def<System.Collections.Generic.IList<Microsoft.Maui.Controls.VisualState>>, Def<System.Collections.Generic.IList<Microsoft.Maui.Controls.VisualState>>> definition)
            where T : Sharp.UI.IVisualStateGroup
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.VisualStateGroup>(obj);
            var def = definition(new Def<System.Collections.Generic.IList<Microsoft.Maui.Controls.VisualState>>());
            if (def.ValueIsSet())
            {
                var items = def.GetValue();
                foreach (var item in items) mauiObject.States.Add(item);
            }
            return obj;
        }
        
    }
}


#pragma warning restore CS8669
