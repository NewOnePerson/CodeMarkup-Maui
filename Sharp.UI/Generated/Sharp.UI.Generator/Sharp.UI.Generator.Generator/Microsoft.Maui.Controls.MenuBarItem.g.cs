//
// <auto-generated>
//

#pragma warning disable CS8669


namespace Sharp.UI
{
    public static class MenuBarItemGeneratedExtension
    {
        public static T Priority<T>(this T obj,
            int? priority)
            where T : Sharp.UI.IMenuBarItem
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.MenuBarItem>(obj);
            if (priority != null) mauiObject.Priority = (int)priority;
            return obj;
        }
        
        public static T Priority<T>(this T obj,
            int? priority,
            Func<ValueDef<int>, ValueDef<int>> definition)
            where T : Sharp.UI.IMenuBarItem
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.MenuBarItem>(obj);
            if (priority != null) mauiObject.Priority = (int)priority;
            var def = definition(new ValueDef<int>());
            if (def.ValueIsSet()) mauiObject.Priority = def.GetValue();
            return obj;
        }
        
        public static T Priority<T>(this T obj,
            Func<ValueDef<int>, ValueDef<int>> definition)
            where T : Sharp.UI.IMenuBarItem
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.MenuBarItem>(obj);
            var def = definition(new ValueDef<int>());
            if (def.ValueIsSet()) mauiObject.Priority = def.GetValue();
            return obj;
        }
        
        public static T IsEnabled<T>(this T obj,
            bool? isEnabled)
            where T : Sharp.UI.IMenuBarItem
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.MenuBarItem>(obj);
            if (isEnabled != null) mauiObject.IsEnabled = (bool)isEnabled;
            return obj;
        }
        
        public static T IsEnabled<T>(this T obj,
            bool? isEnabled,
            Func<BindableDef<bool>, BindableDef<bool>> definition)
            where T : Sharp.UI.IMenuBarItem
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.MenuBarItem>(obj);
            if (isEnabled != null) mauiObject.IsEnabled = (bool)isEnabled;
            var def = definition(new BindableDef<bool>(mauiObject, Microsoft.Maui.Controls.MenuBarItem.IsEnabledProperty));
            if (def.ValueIsSet()) mauiObject.IsEnabled = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T IsEnabled<T>(this T obj,
            Func<BindableDef<bool>, BindableDef<bool>> definition)
            where T : Sharp.UI.IMenuBarItem
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.MenuBarItem>(obj);
            var def = definition(new BindableDef<bool>(mauiObject, Microsoft.Maui.Controls.MenuBarItem.IsEnabledProperty));
            if (def.ValueIsSet()) mauiObject.IsEnabled = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Text<T>(this T obj,
            string? text)
            where T : Sharp.UI.IMenuBarItem
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.MenuBarItem>(obj);
            if (text != null) mauiObject.Text = (string)text;
            return obj;
        }
        
        public static T Text<T>(this T obj,
            string? text,
            Func<BindableDef<string>, BindableDef<string>> definition)
            where T : Sharp.UI.IMenuBarItem
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.MenuBarItem>(obj);
            if (text != null) mauiObject.Text = (string)text;
            var def = definition(new BindableDef<string>(mauiObject, Microsoft.Maui.Controls.MenuBarItem.TextProperty));
            if (def.ValueIsSet()) mauiObject.Text = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Text<T>(this T obj,
            Func<BindableDef<string>, BindableDef<string>> definition)
            where T : Sharp.UI.IMenuBarItem
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.MenuBarItem>(obj);
            var def = definition(new BindableDef<string>(mauiObject, Microsoft.Maui.Controls.MenuBarItem.TextProperty));
            if (def.ValueIsSet()) mauiObject.Text = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
    }
}


#pragma warning restore CS8669
