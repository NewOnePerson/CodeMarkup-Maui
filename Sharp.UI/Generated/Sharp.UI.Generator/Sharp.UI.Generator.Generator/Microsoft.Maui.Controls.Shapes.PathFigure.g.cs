//
// <auto-generated>
//

#pragma warning disable CS8669


namespace Sharp.UI
{
    public static class PathFigureGeneratedExtension
    {
        public static T Segments<T>(this T obj,
            Microsoft.Maui.Controls.Shapes.PathSegmentCollection? segments)
            where T : Sharp.UI.IPathFigure
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Shapes.PathFigure>(obj);
            if (segments != null) mauiObject.Segments = (Microsoft.Maui.Controls.Shapes.PathSegmentCollection)segments;
            return obj;
        }
        
        public static T Segments<T>(this T obj,
            Microsoft.Maui.Controls.Shapes.PathSegmentCollection? segments,
            System.Func<BindableDef<Microsoft.Maui.Controls.Shapes.PathSegmentCollection>, BindableDef<Microsoft.Maui.Controls.Shapes.PathSegmentCollection>> definition)
            where T : Sharp.UI.IPathFigure
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Shapes.PathFigure>(obj);
            if (segments != null) mauiObject.Segments = (Microsoft.Maui.Controls.Shapes.PathSegmentCollection)segments;
            var def = definition(new BindableDef<Microsoft.Maui.Controls.Shapes.PathSegmentCollection>(mauiObject, Microsoft.Maui.Controls.Shapes.PathFigure.SegmentsProperty));
            if (def.ValueIsSet()) mauiObject.Segments = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Segments<T>(this T obj,
            System.Func<BindableDef<Microsoft.Maui.Controls.Shapes.PathSegmentCollection>, BindableDef<Microsoft.Maui.Controls.Shapes.PathSegmentCollection>> definition)
            where T : Sharp.UI.IPathFigure
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Shapes.PathFigure>(obj);
            var def = definition(new BindableDef<Microsoft.Maui.Controls.Shapes.PathSegmentCollection>(mauiObject, Microsoft.Maui.Controls.Shapes.PathFigure.SegmentsProperty));
            if (def.ValueIsSet()) mauiObject.Segments = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T StartPoint<T>(this T obj,
            Microsoft.Maui.Graphics.Point? startPoint)
            where T : Sharp.UI.IPathFigure
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Shapes.PathFigure>(obj);
            if (startPoint != null) mauiObject.StartPoint = (Microsoft.Maui.Graphics.Point)startPoint;
            return obj;
        }
        
        public static T StartPoint<T>(this T obj,
            Microsoft.Maui.Graphics.Point? startPoint,
            System.Func<BindableDef<Microsoft.Maui.Graphics.Point>, BindableDef<Microsoft.Maui.Graphics.Point>> definition)
            where T : Sharp.UI.IPathFigure
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Shapes.PathFigure>(obj);
            if (startPoint != null) mauiObject.StartPoint = (Microsoft.Maui.Graphics.Point)startPoint;
            var def = definition(new BindableDef<Microsoft.Maui.Graphics.Point>(mauiObject, Microsoft.Maui.Controls.Shapes.PathFigure.StartPointProperty));
            if (def.ValueIsSet()) mauiObject.StartPoint = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T StartPoint<T>(this T obj,
            System.Func<BindableDef<Microsoft.Maui.Graphics.Point>, BindableDef<Microsoft.Maui.Graphics.Point>> definition)
            where T : Sharp.UI.IPathFigure
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Shapes.PathFigure>(obj);
            var def = definition(new BindableDef<Microsoft.Maui.Graphics.Point>(mauiObject, Microsoft.Maui.Controls.Shapes.PathFigure.StartPointProperty));
            if (def.ValueIsSet()) mauiObject.StartPoint = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T IsClosed<T>(this T obj,
            bool? isClosed)
            where T : Sharp.UI.IPathFigure
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Shapes.PathFigure>(obj);
            if (isClosed != null) mauiObject.IsClosed = (bool)isClosed;
            return obj;
        }
        
        public static T IsClosed<T>(this T obj,
            bool? isClosed,
            System.Func<BindableDef<bool>, BindableDef<bool>> definition)
            where T : Sharp.UI.IPathFigure
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Shapes.PathFigure>(obj);
            if (isClosed != null) mauiObject.IsClosed = (bool)isClosed;
            var def = definition(new BindableDef<bool>(mauiObject, Microsoft.Maui.Controls.Shapes.PathFigure.IsClosedProperty));
            if (def.ValueIsSet()) mauiObject.IsClosed = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T IsClosed<T>(this T obj,
            System.Func<BindableDef<bool>, BindableDef<bool>> definition)
            where T : Sharp.UI.IPathFigure
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Shapes.PathFigure>(obj);
            var def = definition(new BindableDef<bool>(mauiObject, Microsoft.Maui.Controls.Shapes.PathFigure.IsClosedProperty));
            if (def.ValueIsSet()) mauiObject.IsClosed = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T IsFilled<T>(this T obj,
            bool? isFilled)
            where T : Sharp.UI.IPathFigure
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Shapes.PathFigure>(obj);
            if (isFilled != null) mauiObject.IsFilled = (bool)isFilled;
            return obj;
        }
        
        public static T IsFilled<T>(this T obj,
            bool? isFilled,
            System.Func<BindableDef<bool>, BindableDef<bool>> definition)
            where T : Sharp.UI.IPathFigure
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Shapes.PathFigure>(obj);
            if (isFilled != null) mauiObject.IsFilled = (bool)isFilled;
            var def = definition(new BindableDef<bool>(mauiObject, Microsoft.Maui.Controls.Shapes.PathFigure.IsFilledProperty));
            if (def.ValueIsSet()) mauiObject.IsFilled = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T IsFilled<T>(this T obj,
            System.Func<BindableDef<bool>, BindableDef<bool>> definition)
            where T : Sharp.UI.IPathFigure
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Shapes.PathFigure>(obj);
            var def = definition(new BindableDef<bool>(mauiObject, Microsoft.Maui.Controls.Shapes.PathFigure.IsFilledProperty));
            if (def.ValueIsSet()) mauiObject.IsFilled = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
    }
}


#pragma warning restore CS8669
