//
// <auto-generated>
//

#pragma warning disable CS8669


namespace Sharp.UI
{
    public static class StepperGeneratedExtension
    {
        public static T Increment<T>(this T obj,
            double increment)
            where T : Sharp.UI.IStepper
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Stepper>(obj);
            mauiObject.Increment = (double)increment;
            return obj;
        }
        
        public static T Increment<T>(this T obj,
            double increment,
            System.Func<BindableDef<double>, BindableDef<double>> definition)
            where T : Sharp.UI.IStepper
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Stepper>(obj);         
            mauiObject.Increment = (double)increment;
            var def = definition(new BindableDef<double>(mauiObject, Microsoft.Maui.Controls.Stepper.IncrementProperty));
            if (def.ValueIsSet()) mauiObject.Increment = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Increment<T>(this T obj,
            System.Func<BindableDef<double>, BindableDef<double>> definition)
            where T : Sharp.UI.IStepper
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Stepper>(obj);
            var def = definition(new BindableDef<double>(mauiObject, Microsoft.Maui.Controls.Stepper.IncrementProperty));
            if (def.ValueIsSet()) mauiObject.Increment = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Maximum<T>(this T obj,
            double maximum)
            where T : Sharp.UI.IStepper
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Stepper>(obj);
            mauiObject.Maximum = (double)maximum;
            return obj;
        }
        
        public static T Maximum<T>(this T obj,
            double maximum,
            System.Func<BindableDef<double>, BindableDef<double>> definition)
            where T : Sharp.UI.IStepper
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Stepper>(obj);         
            mauiObject.Maximum = (double)maximum;
            var def = definition(new BindableDef<double>(mauiObject, Microsoft.Maui.Controls.Stepper.MaximumProperty));
            if (def.ValueIsSet()) mauiObject.Maximum = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Maximum<T>(this T obj,
            System.Func<BindableDef<double>, BindableDef<double>> definition)
            where T : Sharp.UI.IStepper
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Stepper>(obj);
            var def = definition(new BindableDef<double>(mauiObject, Microsoft.Maui.Controls.Stepper.MaximumProperty));
            if (def.ValueIsSet()) mauiObject.Maximum = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Minimum<T>(this T obj,
            double minimum)
            where T : Sharp.UI.IStepper
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Stepper>(obj);
            mauiObject.Minimum = (double)minimum;
            return obj;
        }
        
        public static T Minimum<T>(this T obj,
            double minimum,
            System.Func<BindableDef<double>, BindableDef<double>> definition)
            where T : Sharp.UI.IStepper
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Stepper>(obj);         
            mauiObject.Minimum = (double)minimum;
            var def = definition(new BindableDef<double>(mauiObject, Microsoft.Maui.Controls.Stepper.MinimumProperty));
            if (def.ValueIsSet()) mauiObject.Minimum = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Minimum<T>(this T obj,
            System.Func<BindableDef<double>, BindableDef<double>> definition)
            where T : Sharp.UI.IStepper
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Stepper>(obj);
            var def = definition(new BindableDef<double>(mauiObject, Microsoft.Maui.Controls.Stepper.MinimumProperty));
            if (def.ValueIsSet()) mauiObject.Minimum = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Value<T>(this T obj,
            double value)
            where T : Sharp.UI.IStepper
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Stepper>(obj);
            mauiObject.Value = (double)value;
            return obj;
        }
        
        public static T Value<T>(this T obj,
            double value,
            System.Func<BindableDef<double>, BindableDef<double>> definition)
            where T : Sharp.UI.IStepper
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Stepper>(obj);         
            mauiObject.Value = (double)value;
            var def = definition(new BindableDef<double>(mauiObject, Microsoft.Maui.Controls.Stepper.ValueProperty));
            if (def.ValueIsSet()) mauiObject.Value = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Value<T>(this T obj,
            System.Func<BindableDef<double>, BindableDef<double>> definition)
            where T : Sharp.UI.IStepper
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Stepper>(obj);
            var def = definition(new BindableDef<double>(mauiObject, Microsoft.Maui.Controls.Stepper.ValueProperty));
            if (def.ValueIsSet()) mauiObject.Value = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T OnValueChanged<T>(this T obj, System.EventHandler<Microsoft.Maui.Controls.ValueChangedEventArgs> handler)
            where T : Sharp.UI.IStepper
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Stepper>(obj);
            mauiObject.ValueChanged += handler;
            return obj;
        }
        
        public static T OnValueChanged<T>(this T obj, OnEventAction<T> action)
            where T : Sharp.UI.IStepper
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Stepper>(obj);
            mauiObject.ValueChanged += (o, arg) => action(obj);
            return obj;
        }
        
    }
}


#pragma warning restore CS8669
