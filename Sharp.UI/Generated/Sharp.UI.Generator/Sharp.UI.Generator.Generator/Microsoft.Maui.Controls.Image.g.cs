//
// <auto-generated>
//

#pragma warning disable CS8669


namespace Sharp.UI
{
    public static class IImageGeneratedExtension
    {
        public static T Aspect<T>(this T obj,
            Microsoft.Maui.Aspect? aspect)
            where T : Sharp.UI.IImage
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Image>(obj);
            if (aspect != null) mauiObject.Aspect = (Microsoft.Maui.Aspect)aspect;
            return obj;
        }
        
        public static T Aspect<T>(this T obj,
            Microsoft.Maui.Aspect? aspect,
            Func<BindableDef<Microsoft.Maui.Aspect>, BindableDef<Microsoft.Maui.Aspect>> definition)
            where T : Sharp.UI.IImage
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Image>(obj);
            if (aspect != null) mauiObject.Aspect = (Microsoft.Maui.Aspect)aspect;
            var def = definition(new BindableDef<Microsoft.Maui.Aspect>(mauiObject, Microsoft.Maui.Controls.Image.AspectProperty));
            if (def.ValueIsSet()) mauiObject.Aspect = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Aspect<T>(this T obj,
            Func<BindableDef<Microsoft.Maui.Aspect>, BindableDef<Microsoft.Maui.Aspect>> definition)
            where T : Sharp.UI.IImage
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Image>(obj);
            var def = definition(new BindableDef<Microsoft.Maui.Aspect>(mauiObject, Microsoft.Maui.Controls.Image.AspectProperty));
            if (def.ValueIsSet()) mauiObject.Aspect = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T IsOpaque<T>(this T obj,
            bool? isOpaque)
            where T : Sharp.UI.IImage
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Image>(obj);
            if (isOpaque != null) mauiObject.IsOpaque = (bool)isOpaque;
            return obj;
        }
        
        public static T IsOpaque<T>(this T obj,
            bool? isOpaque,
            Func<BindableDef<bool>, BindableDef<bool>> definition)
            where T : Sharp.UI.IImage
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Image>(obj);
            if (isOpaque != null) mauiObject.IsOpaque = (bool)isOpaque;
            var def = definition(new BindableDef<bool>(mauiObject, Microsoft.Maui.Controls.Image.IsOpaqueProperty));
            if (def.ValueIsSet()) mauiObject.IsOpaque = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T IsOpaque<T>(this T obj,
            Func<BindableDef<bool>, BindableDef<bool>> definition)
            where T : Sharp.UI.IImage
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Image>(obj);
            var def = definition(new BindableDef<bool>(mauiObject, Microsoft.Maui.Controls.Image.IsOpaqueProperty));
            if (def.ValueIsSet()) mauiObject.IsOpaque = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T IsAnimationPlaying<T>(this T obj,
            bool? isAnimationPlaying)
            where T : Sharp.UI.IImage
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Image>(obj);
            if (isAnimationPlaying != null) mauiObject.IsAnimationPlaying = (bool)isAnimationPlaying;
            return obj;
        }
        
        public static T IsAnimationPlaying<T>(this T obj,
            bool? isAnimationPlaying,
            Func<BindableDef<bool>, BindableDef<bool>> definition)
            where T : Sharp.UI.IImage
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Image>(obj);
            if (isAnimationPlaying != null) mauiObject.IsAnimationPlaying = (bool)isAnimationPlaying;
            var def = definition(new BindableDef<bool>(mauiObject, Microsoft.Maui.Controls.Image.IsAnimationPlayingProperty));
            if (def.ValueIsSet()) mauiObject.IsAnimationPlaying = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T IsAnimationPlaying<T>(this T obj,
            Func<BindableDef<bool>, BindableDef<bool>> definition)
            where T : Sharp.UI.IImage
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Image>(obj);
            var def = definition(new BindableDef<bool>(mauiObject, Microsoft.Maui.Controls.Image.IsAnimationPlayingProperty));
            if (def.ValueIsSet()) mauiObject.IsAnimationPlaying = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Source<T>(this T obj,
            Microsoft.Maui.Controls.ImageSource? source)
            where T : Sharp.UI.IImage
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Image>(obj);
            if (source != null) mauiObject.Source = (Microsoft.Maui.Controls.ImageSource)source;
            return obj;
        }
        
        public static T Source<T>(this T obj,
            Microsoft.Maui.Controls.ImageSource? source,
            Func<BindableDef<Microsoft.Maui.Controls.ImageSource>, BindableDef<Microsoft.Maui.Controls.ImageSource>> definition)
            where T : Sharp.UI.IImage
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Image>(obj);
            if (source != null) mauiObject.Source = (Microsoft.Maui.Controls.ImageSource)source;
            var def = definition(new BindableDef<Microsoft.Maui.Controls.ImageSource>(mauiObject, Microsoft.Maui.Controls.Image.SourceProperty));
            if (def.ValueIsSet()) mauiObject.Source = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Source<T>(this T obj,
            Func<BindableDef<Microsoft.Maui.Controls.ImageSource>, BindableDef<Microsoft.Maui.Controls.ImageSource>> definition)
            where T : Sharp.UI.IImage
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Image>(obj);
            var def = definition(new BindableDef<Microsoft.Maui.Controls.ImageSource>(mauiObject, Microsoft.Maui.Controls.Image.SourceProperty));
            if (def.ValueIsSet()) mauiObject.Source = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
    }
}


#pragma warning restore CS8669
