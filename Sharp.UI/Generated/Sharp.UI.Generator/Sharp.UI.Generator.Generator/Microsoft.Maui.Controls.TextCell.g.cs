//
// <auto-generated>
//

#pragma warning disable CS8669


namespace Sharp.UI
{
    public static class TextCellGeneratedExtension
    {
        public static T Command<T>(this T obj,
            System.Windows.Input.ICommand? command)
            where T : Sharp.UI.ITextCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.TextCell>(obj);
            var mauiValue = MauiWrapper.Value<System.Windows.Input.ICommand>(command);
            if (command != null) mauiObject.Command = mauiValue;
            return obj;
        }
        
        public static T Command<T>(this T obj,
            System.Windows.Input.ICommand? command,
            System.Func<BindableDef<System.Windows.Input.ICommand>, BindableDef<System.Windows.Input.ICommand>> definition)
            where T : Sharp.UI.ITextCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.TextCell>(obj);
            var mauiValue = MauiWrapper.Value<System.Windows.Input.ICommand>(command);
            if (command != null) mauiObject.Command = mauiValue;
            var def = definition(new BindableDef<System.Windows.Input.ICommand>(mauiObject, Microsoft.Maui.Controls.TextCell.CommandProperty));
            if (def.ValueIsSet()) mauiObject.Command = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Command<T>(this T obj,
            System.Func<BindableDef<System.Windows.Input.ICommand>, BindableDef<System.Windows.Input.ICommand>> definition)
            where T : Sharp.UI.ITextCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.TextCell>(obj);
            var def = definition(new BindableDef<System.Windows.Input.ICommand>(mauiObject, Microsoft.Maui.Controls.TextCell.CommandProperty));
            if (def.ValueIsSet()) mauiObject.Command = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T CommandParameter<T>(this T obj,
            object? commandParameter)
            where T : Sharp.UI.ITextCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.TextCell>(obj);
            var mauiValue = MauiWrapper.Value<object>(commandParameter);
            if (commandParameter != null) mauiObject.CommandParameter = mauiValue;
            return obj;
        }
        
        public static T CommandParameter<T>(this T obj,
            object? commandParameter,
            System.Func<BindableDef<object>, BindableDef<object>> definition)
            where T : Sharp.UI.ITextCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.TextCell>(obj);
            var mauiValue = MauiWrapper.Value<object>(commandParameter);
            if (commandParameter != null) mauiObject.CommandParameter = mauiValue;
            var def = definition(new BindableDef<object>(mauiObject, Microsoft.Maui.Controls.TextCell.CommandParameterProperty));
            if (def.ValueIsSet()) mauiObject.CommandParameter = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T CommandParameter<T>(this T obj,
            System.Func<BindableDef<object>, BindableDef<object>> definition)
            where T : Sharp.UI.ITextCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.TextCell>(obj);
            var def = definition(new BindableDef<object>(mauiObject, Microsoft.Maui.Controls.TextCell.CommandParameterProperty));
            if (def.ValueIsSet()) mauiObject.CommandParameter = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Detail<T>(this T obj,
            string? detail)
            where T : Sharp.UI.ITextCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.TextCell>(obj);
            var mauiValue = MauiWrapper.Value<string>(detail);
            if (detail != null) mauiObject.Detail = mauiValue;
            return obj;
        }
        
        public static T Detail<T>(this T obj,
            string? detail,
            System.Func<BindableDef<string>, BindableDef<string>> definition)
            where T : Sharp.UI.ITextCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.TextCell>(obj);
            var mauiValue = MauiWrapper.Value<string>(detail);
            if (detail != null) mauiObject.Detail = mauiValue;
            var def = definition(new BindableDef<string>(mauiObject, Microsoft.Maui.Controls.TextCell.DetailProperty));
            if (def.ValueIsSet()) mauiObject.Detail = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Detail<T>(this T obj,
            System.Func<BindableDef<string>, BindableDef<string>> definition)
            where T : Sharp.UI.ITextCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.TextCell>(obj);
            var def = definition(new BindableDef<string>(mauiObject, Microsoft.Maui.Controls.TextCell.DetailProperty));
            if (def.ValueIsSet()) mauiObject.Detail = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T DetailColor<T>(this T obj,
            Microsoft.Maui.Graphics.Color? detailColor)
            where T : Sharp.UI.ITextCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.TextCell>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.Graphics.Color>(detailColor);
            if (detailColor != null) mauiObject.DetailColor = mauiValue;
            return obj;
        }
        
        public static T DetailColor<T>(this T obj,
            Microsoft.Maui.Graphics.Color? detailColor,
            System.Func<BindableDef<Microsoft.Maui.Graphics.Color>, BindableDef<Microsoft.Maui.Graphics.Color>> definition)
            where T : Sharp.UI.ITextCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.TextCell>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.Graphics.Color>(detailColor);
            if (detailColor != null) mauiObject.DetailColor = mauiValue;
            var def = definition(new BindableDef<Microsoft.Maui.Graphics.Color>(mauiObject, Microsoft.Maui.Controls.TextCell.DetailColorProperty));
            if (def.ValueIsSet()) mauiObject.DetailColor = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T DetailColor<T>(this T obj,
            System.Func<BindableDef<Microsoft.Maui.Graphics.Color>, BindableDef<Microsoft.Maui.Graphics.Color>> definition)
            where T : Sharp.UI.ITextCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.TextCell>(obj);
            var def = definition(new BindableDef<Microsoft.Maui.Graphics.Color>(mauiObject, Microsoft.Maui.Controls.TextCell.DetailColorProperty));
            if (def.ValueIsSet()) mauiObject.DetailColor = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Text<T>(this T obj,
            string? text)
            where T : Sharp.UI.ITextCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.TextCell>(obj);
            var mauiValue = MauiWrapper.Value<string>(text);
            if (text != null) mauiObject.Text = mauiValue;
            return obj;
        }
        
        public static T Text<T>(this T obj,
            string? text,
            System.Func<BindableDef<string>, BindableDef<string>> definition)
            where T : Sharp.UI.ITextCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.TextCell>(obj);
            var mauiValue = MauiWrapper.Value<string>(text);
            if (text != null) mauiObject.Text = mauiValue;
            var def = definition(new BindableDef<string>(mauiObject, Microsoft.Maui.Controls.TextCell.TextProperty));
            if (def.ValueIsSet()) mauiObject.Text = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Text<T>(this T obj,
            System.Func<BindableDef<string>, BindableDef<string>> definition)
            where T : Sharp.UI.ITextCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.TextCell>(obj);
            var def = definition(new BindableDef<string>(mauiObject, Microsoft.Maui.Controls.TextCell.TextProperty));
            if (def.ValueIsSet()) mauiObject.Text = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T TextColor<T>(this T obj,
            Microsoft.Maui.Graphics.Color? textColor)
            where T : Sharp.UI.ITextCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.TextCell>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.Graphics.Color>(textColor);
            if (textColor != null) mauiObject.TextColor = mauiValue;
            return obj;
        }
        
        public static T TextColor<T>(this T obj,
            Microsoft.Maui.Graphics.Color? textColor,
            System.Func<BindableDef<Microsoft.Maui.Graphics.Color>, BindableDef<Microsoft.Maui.Graphics.Color>> definition)
            where T : Sharp.UI.ITextCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.TextCell>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.Graphics.Color>(textColor);
            if (textColor != null) mauiObject.TextColor = mauiValue;
            var def = definition(new BindableDef<Microsoft.Maui.Graphics.Color>(mauiObject, Microsoft.Maui.Controls.TextCell.TextColorProperty));
            if (def.ValueIsSet()) mauiObject.TextColor = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T TextColor<T>(this T obj,
            System.Func<BindableDef<Microsoft.Maui.Graphics.Color>, BindableDef<Microsoft.Maui.Graphics.Color>> definition)
            where T : Sharp.UI.ITextCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.TextCell>(obj);
            var def = definition(new BindableDef<Microsoft.Maui.Graphics.Color>(mauiObject, Microsoft.Maui.Controls.TextCell.TextColorProperty));
            if (def.ValueIsSet()) mauiObject.TextColor = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
    }
}


#pragma warning restore CS8669
