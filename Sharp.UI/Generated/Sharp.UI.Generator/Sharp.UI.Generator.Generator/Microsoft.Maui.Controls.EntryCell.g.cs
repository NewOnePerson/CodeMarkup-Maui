//
// <auto-generated>
//

#pragma warning disable CS8669


namespace Sharp.UI
{
    public static class EntryCellGeneratedExtension
    {
        public static T HorizontalTextAlignment<T>(this T obj,
            Microsoft.Maui.TextAlignment? horizontalTextAlignment)
            where T : Sharp.UI.IEntryCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.EntryCell>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.TextAlignment>(horizontalTextAlignment);
            if (horizontalTextAlignment != null) mauiObject.HorizontalTextAlignment = mauiValue;
            return obj;
        }
        
        public static T HorizontalTextAlignment<T>(this T obj,
            Microsoft.Maui.TextAlignment? horizontalTextAlignment,
            System.Func<BindableDef<Microsoft.Maui.TextAlignment>, BindableDef<Microsoft.Maui.TextAlignment>> definition)
            where T : Sharp.UI.IEntryCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.EntryCell>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.TextAlignment>(horizontalTextAlignment);
            if (horizontalTextAlignment != null) mauiObject.HorizontalTextAlignment = mauiValue;
            var def = definition(new BindableDef<Microsoft.Maui.TextAlignment>(mauiObject, Microsoft.Maui.Controls.EntryCell.HorizontalTextAlignmentProperty));
            if (def.ValueIsSet()) mauiObject.HorizontalTextAlignment = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T HorizontalTextAlignment<T>(this T obj,
            System.Func<BindableDef<Microsoft.Maui.TextAlignment>, BindableDef<Microsoft.Maui.TextAlignment>> definition)
            where T : Sharp.UI.IEntryCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.EntryCell>(obj);
            var def = definition(new BindableDef<Microsoft.Maui.TextAlignment>(mauiObject, Microsoft.Maui.Controls.EntryCell.HorizontalTextAlignmentProperty));
            if (def.ValueIsSet()) mauiObject.HorizontalTextAlignment = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T VerticalTextAlignment<T>(this T obj,
            Microsoft.Maui.TextAlignment? verticalTextAlignment)
            where T : Sharp.UI.IEntryCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.EntryCell>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.TextAlignment>(verticalTextAlignment);
            if (verticalTextAlignment != null) mauiObject.VerticalTextAlignment = mauiValue;
            return obj;
        }
        
        public static T VerticalTextAlignment<T>(this T obj,
            Microsoft.Maui.TextAlignment? verticalTextAlignment,
            System.Func<BindableDef<Microsoft.Maui.TextAlignment>, BindableDef<Microsoft.Maui.TextAlignment>> definition)
            where T : Sharp.UI.IEntryCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.EntryCell>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.TextAlignment>(verticalTextAlignment);
            if (verticalTextAlignment != null) mauiObject.VerticalTextAlignment = mauiValue;
            var def = definition(new BindableDef<Microsoft.Maui.TextAlignment>(mauiObject, Microsoft.Maui.Controls.EntryCell.VerticalTextAlignmentProperty));
            if (def.ValueIsSet()) mauiObject.VerticalTextAlignment = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T VerticalTextAlignment<T>(this T obj,
            System.Func<BindableDef<Microsoft.Maui.TextAlignment>, BindableDef<Microsoft.Maui.TextAlignment>> definition)
            where T : Sharp.UI.IEntryCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.EntryCell>(obj);
            var def = definition(new BindableDef<Microsoft.Maui.TextAlignment>(mauiObject, Microsoft.Maui.Controls.EntryCell.VerticalTextAlignmentProperty));
            if (def.ValueIsSet()) mauiObject.VerticalTextAlignment = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Keyboard<T>(this T obj,
            Microsoft.Maui.Keyboard? keyboard)
            where T : Sharp.UI.IEntryCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.EntryCell>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.Keyboard>(keyboard);
            if (keyboard != null) mauiObject.Keyboard = mauiValue;
            return obj;
        }
        
        public static T Keyboard<T>(this T obj,
            Microsoft.Maui.Keyboard? keyboard,
            System.Func<BindableDef<Microsoft.Maui.Keyboard>, BindableDef<Microsoft.Maui.Keyboard>> definition)
            where T : Sharp.UI.IEntryCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.EntryCell>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.Keyboard>(keyboard);
            if (keyboard != null) mauiObject.Keyboard = mauiValue;
            var def = definition(new BindableDef<Microsoft.Maui.Keyboard>(mauiObject, Microsoft.Maui.Controls.EntryCell.KeyboardProperty));
            if (def.ValueIsSet()) mauiObject.Keyboard = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Keyboard<T>(this T obj,
            System.Func<BindableDef<Microsoft.Maui.Keyboard>, BindableDef<Microsoft.Maui.Keyboard>> definition)
            where T : Sharp.UI.IEntryCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.EntryCell>(obj);
            var def = definition(new BindableDef<Microsoft.Maui.Keyboard>(mauiObject, Microsoft.Maui.Controls.EntryCell.KeyboardProperty));
            if (def.ValueIsSet()) mauiObject.Keyboard = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Label<T>(this T obj,
            string? label)
            where T : Sharp.UI.IEntryCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.EntryCell>(obj);
            var mauiValue = MauiWrapper.Value<string>(label);
            if (label != null) mauiObject.Label = mauiValue;
            return obj;
        }
        
        public static T Label<T>(this T obj,
            string? label,
            System.Func<BindableDef<string>, BindableDef<string>> definition)
            where T : Sharp.UI.IEntryCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.EntryCell>(obj);
            var mauiValue = MauiWrapper.Value<string>(label);
            if (label != null) mauiObject.Label = mauiValue;
            var def = definition(new BindableDef<string>(mauiObject, Microsoft.Maui.Controls.EntryCell.LabelProperty));
            if (def.ValueIsSet()) mauiObject.Label = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Label<T>(this T obj,
            System.Func<BindableDef<string>, BindableDef<string>> definition)
            where T : Sharp.UI.IEntryCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.EntryCell>(obj);
            var def = definition(new BindableDef<string>(mauiObject, Microsoft.Maui.Controls.EntryCell.LabelProperty));
            if (def.ValueIsSet()) mauiObject.Label = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T LabelColor<T>(this T obj,
            Microsoft.Maui.Graphics.Color? labelColor)
            where T : Sharp.UI.IEntryCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.EntryCell>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.Graphics.Color>(labelColor);
            if (labelColor != null) mauiObject.LabelColor = mauiValue;
            return obj;
        }
        
        public static T LabelColor<T>(this T obj,
            Microsoft.Maui.Graphics.Color? labelColor,
            System.Func<BindableDef<Microsoft.Maui.Graphics.Color>, BindableDef<Microsoft.Maui.Graphics.Color>> definition)
            where T : Sharp.UI.IEntryCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.EntryCell>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.Graphics.Color>(labelColor);
            if (labelColor != null) mauiObject.LabelColor = mauiValue;
            var def = definition(new BindableDef<Microsoft.Maui.Graphics.Color>(mauiObject, Microsoft.Maui.Controls.EntryCell.LabelColorProperty));
            if (def.ValueIsSet()) mauiObject.LabelColor = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T LabelColor<T>(this T obj,
            System.Func<BindableDef<Microsoft.Maui.Graphics.Color>, BindableDef<Microsoft.Maui.Graphics.Color>> definition)
            where T : Sharp.UI.IEntryCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.EntryCell>(obj);
            var def = definition(new BindableDef<Microsoft.Maui.Graphics.Color>(mauiObject, Microsoft.Maui.Controls.EntryCell.LabelColorProperty));
            if (def.ValueIsSet()) mauiObject.LabelColor = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Placeholder<T>(this T obj,
            string? placeholder)
            where T : Sharp.UI.IEntryCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.EntryCell>(obj);
            var mauiValue = MauiWrapper.Value<string>(placeholder);
            if (placeholder != null) mauiObject.Placeholder = mauiValue;
            return obj;
        }
        
        public static T Placeholder<T>(this T obj,
            string? placeholder,
            System.Func<BindableDef<string>, BindableDef<string>> definition)
            where T : Sharp.UI.IEntryCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.EntryCell>(obj);
            var mauiValue = MauiWrapper.Value<string>(placeholder);
            if (placeholder != null) mauiObject.Placeholder = mauiValue;
            var def = definition(new BindableDef<string>(mauiObject, Microsoft.Maui.Controls.EntryCell.PlaceholderProperty));
            if (def.ValueIsSet()) mauiObject.Placeholder = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Placeholder<T>(this T obj,
            System.Func<BindableDef<string>, BindableDef<string>> definition)
            where T : Sharp.UI.IEntryCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.EntryCell>(obj);
            var def = definition(new BindableDef<string>(mauiObject, Microsoft.Maui.Controls.EntryCell.PlaceholderProperty));
            if (def.ValueIsSet()) mauiObject.Placeholder = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Text<T>(this T obj,
            string? text)
            where T : Sharp.UI.IEntryCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.EntryCell>(obj);
            var mauiValue = MauiWrapper.Value<string>(text);
            if (text != null) mauiObject.Text = mauiValue;
            return obj;
        }
        
        public static T Text<T>(this T obj,
            string? text,
            System.Func<BindableDef<string>, BindableDef<string>> definition)
            where T : Sharp.UI.IEntryCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.EntryCell>(obj);
            var mauiValue = MauiWrapper.Value<string>(text);
            if (text != null) mauiObject.Text = mauiValue;
            var def = definition(new BindableDef<string>(mauiObject, Microsoft.Maui.Controls.EntryCell.TextProperty));
            if (def.ValueIsSet()) mauiObject.Text = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Text<T>(this T obj,
            System.Func<BindableDef<string>, BindableDef<string>> definition)
            where T : Sharp.UI.IEntryCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.EntryCell>(obj);
            var def = definition(new BindableDef<string>(mauiObject, Microsoft.Maui.Controls.EntryCell.TextProperty));
            if (def.ValueIsSet()) mauiObject.Text = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T OnCompleted<T>(this T obj, OnEventAction<T> action)
            where T : Sharp.UI.IEntryCell
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.EntryCell>(obj);
            mauiObject.Completed += (o, arg) => action(obj);
            return obj;
        }
        
    }
}


#pragma warning restore CS8669
