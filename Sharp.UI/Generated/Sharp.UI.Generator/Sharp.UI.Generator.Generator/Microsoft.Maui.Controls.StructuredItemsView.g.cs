//
// <auto-generated>
//

#pragma warning disable CS8669


namespace Sharp.UI
{
    public static class StructuredItemsViewGeneratedExtension
    {
        public static T Header<T>(this T obj,
            object? header)
            where T : Sharp.UI.IStructuredItemsView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.StructuredItemsView>(obj);
            var mauiValue = MauiWrapper.Value<object>(header);
            if (header != null) mauiObject.Header = mauiValue;
            return obj;
        }
        
        public static T Header<T>(this T obj,
            object? header,
            System.Func<BindableDef<object>, BindableDef<object>> definition)
            where T : Sharp.UI.IStructuredItemsView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.StructuredItemsView>(obj);
            var mauiValue = MauiWrapper.Value<object>(header);
            if (header != null) mauiObject.Header = mauiValue;
            var def = definition(new BindableDef<object>(mauiObject, Microsoft.Maui.Controls.StructuredItemsView.HeaderProperty));
            if (def.ValueIsSet()) mauiObject.Header = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Header<T>(this T obj,
            System.Func<BindableDef<object>, BindableDef<object>> definition)
            where T : Sharp.UI.IStructuredItemsView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.StructuredItemsView>(obj);
            var def = definition(new BindableDef<object>(mauiObject, Microsoft.Maui.Controls.StructuredItemsView.HeaderProperty));
            if (def.ValueIsSet()) mauiObject.Header = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T HeaderTemplate<T>(this T obj,
            Microsoft.Maui.Controls.DataTemplate? headerTemplate)
            where T : Sharp.UI.IStructuredItemsView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.StructuredItemsView>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.Controls.DataTemplate>(headerTemplate);
            if (headerTemplate != null) mauiObject.HeaderTemplate = mauiValue;
            return obj;
        }
        
        public static T HeaderTemplate<T>(this T obj,
            Microsoft.Maui.Controls.DataTemplate? headerTemplate,
            System.Func<BindableDef<Microsoft.Maui.Controls.DataTemplate>, BindableDef<Microsoft.Maui.Controls.DataTemplate>> definition)
            where T : Sharp.UI.IStructuredItemsView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.StructuredItemsView>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.Controls.DataTemplate>(headerTemplate);
            if (headerTemplate != null) mauiObject.HeaderTemplate = mauiValue;
            var def = definition(new BindableDef<Microsoft.Maui.Controls.DataTemplate>(mauiObject, Microsoft.Maui.Controls.StructuredItemsView.HeaderTemplateProperty));
            if (def.ValueIsSet()) mauiObject.HeaderTemplate = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T HeaderTemplate<T>(this T obj,
            System.Func<BindableDef<Microsoft.Maui.Controls.DataTemplate>, BindableDef<Microsoft.Maui.Controls.DataTemplate>> definition)
            where T : Sharp.UI.IStructuredItemsView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.StructuredItemsView>(obj);
            var def = definition(new BindableDef<Microsoft.Maui.Controls.DataTemplate>(mauiObject, Microsoft.Maui.Controls.StructuredItemsView.HeaderTemplateProperty));
            if (def.ValueIsSet()) mauiObject.HeaderTemplate = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T HeaderTemplate<T>(this T obj, System.Func<object> loadTemplate) where T : Sharp.UI.IStructuredItemsView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.StructuredItemsView>(obj);
            mauiObject.HeaderTemplate = new Microsoft.Maui.Controls.DataTemplate(loadTemplate);
            return obj;
        }
        
        public static T Footer<T>(this T obj,
            object? footer)
            where T : Sharp.UI.IStructuredItemsView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.StructuredItemsView>(obj);
            var mauiValue = MauiWrapper.Value<object>(footer);
            if (footer != null) mauiObject.Footer = mauiValue;
            return obj;
        }
        
        public static T Footer<T>(this T obj,
            object? footer,
            System.Func<BindableDef<object>, BindableDef<object>> definition)
            where T : Sharp.UI.IStructuredItemsView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.StructuredItemsView>(obj);
            var mauiValue = MauiWrapper.Value<object>(footer);
            if (footer != null) mauiObject.Footer = mauiValue;
            var def = definition(new BindableDef<object>(mauiObject, Microsoft.Maui.Controls.StructuredItemsView.FooterProperty));
            if (def.ValueIsSet()) mauiObject.Footer = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Footer<T>(this T obj,
            System.Func<BindableDef<object>, BindableDef<object>> definition)
            where T : Sharp.UI.IStructuredItemsView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.StructuredItemsView>(obj);
            var def = definition(new BindableDef<object>(mauiObject, Microsoft.Maui.Controls.StructuredItemsView.FooterProperty));
            if (def.ValueIsSet()) mauiObject.Footer = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T FooterTemplate<T>(this T obj,
            Microsoft.Maui.Controls.DataTemplate? footerTemplate)
            where T : Sharp.UI.IStructuredItemsView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.StructuredItemsView>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.Controls.DataTemplate>(footerTemplate);
            if (footerTemplate != null) mauiObject.FooterTemplate = mauiValue;
            return obj;
        }
        
        public static T FooterTemplate<T>(this T obj,
            Microsoft.Maui.Controls.DataTemplate? footerTemplate,
            System.Func<BindableDef<Microsoft.Maui.Controls.DataTemplate>, BindableDef<Microsoft.Maui.Controls.DataTemplate>> definition)
            where T : Sharp.UI.IStructuredItemsView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.StructuredItemsView>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.Controls.DataTemplate>(footerTemplate);
            if (footerTemplate != null) mauiObject.FooterTemplate = mauiValue;
            var def = definition(new BindableDef<Microsoft.Maui.Controls.DataTemplate>(mauiObject, Microsoft.Maui.Controls.StructuredItemsView.FooterTemplateProperty));
            if (def.ValueIsSet()) mauiObject.FooterTemplate = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T FooterTemplate<T>(this T obj,
            System.Func<BindableDef<Microsoft.Maui.Controls.DataTemplate>, BindableDef<Microsoft.Maui.Controls.DataTemplate>> definition)
            where T : Sharp.UI.IStructuredItemsView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.StructuredItemsView>(obj);
            var def = definition(new BindableDef<Microsoft.Maui.Controls.DataTemplate>(mauiObject, Microsoft.Maui.Controls.StructuredItemsView.FooterTemplateProperty));
            if (def.ValueIsSet()) mauiObject.FooterTemplate = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T FooterTemplate<T>(this T obj, System.Func<object> loadTemplate) where T : Sharp.UI.IStructuredItemsView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.StructuredItemsView>(obj);
            mauiObject.FooterTemplate = new Microsoft.Maui.Controls.DataTemplate(loadTemplate);
            return obj;
        }
        
        public static T ItemsLayout<T>(this T obj,
            Microsoft.Maui.Controls.IItemsLayout? itemsLayout)
            where T : Sharp.UI.IStructuredItemsView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.StructuredItemsView>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.Controls.IItemsLayout>(itemsLayout);
            if (itemsLayout != null) mauiObject.ItemsLayout = mauiValue;
            return obj;
        }
        
        public static T ItemsLayout<T>(this T obj,
            Microsoft.Maui.Controls.IItemsLayout? itemsLayout,
            System.Func<BindableDef<Microsoft.Maui.Controls.IItemsLayout>, BindableDef<Microsoft.Maui.Controls.IItemsLayout>> definition)
            where T : Sharp.UI.IStructuredItemsView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.StructuredItemsView>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.Controls.IItemsLayout>(itemsLayout);
            if (itemsLayout != null) mauiObject.ItemsLayout = mauiValue;
            var def = definition(new BindableDef<Microsoft.Maui.Controls.IItemsLayout>(mauiObject, Microsoft.Maui.Controls.StructuredItemsView.ItemsLayoutProperty));
            if (def.ValueIsSet()) mauiObject.ItemsLayout = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T ItemsLayout<T>(this T obj,
            System.Func<BindableDef<Microsoft.Maui.Controls.IItemsLayout>, BindableDef<Microsoft.Maui.Controls.IItemsLayout>> definition)
            where T : Sharp.UI.IStructuredItemsView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.StructuredItemsView>(obj);
            var def = definition(new BindableDef<Microsoft.Maui.Controls.IItemsLayout>(mauiObject, Microsoft.Maui.Controls.StructuredItemsView.ItemsLayoutProperty));
            if (def.ValueIsSet()) mauiObject.ItemsLayout = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T ItemSizingStrategy<T>(this T obj,
            Microsoft.Maui.Controls.ItemSizingStrategy? itemSizingStrategy)
            where T : Sharp.UI.IStructuredItemsView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.StructuredItemsView>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.Controls.ItemSizingStrategy>(itemSizingStrategy);
            if (itemSizingStrategy != null) mauiObject.ItemSizingStrategy = mauiValue;
            return obj;
        }
        
        public static T ItemSizingStrategy<T>(this T obj,
            Microsoft.Maui.Controls.ItemSizingStrategy? itemSizingStrategy,
            System.Func<BindableDef<Microsoft.Maui.Controls.ItemSizingStrategy>, BindableDef<Microsoft.Maui.Controls.ItemSizingStrategy>> definition)
            where T : Sharp.UI.IStructuredItemsView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.StructuredItemsView>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.Controls.ItemSizingStrategy>(itemSizingStrategy);
            if (itemSizingStrategy != null) mauiObject.ItemSizingStrategy = mauiValue;
            var def = definition(new BindableDef<Microsoft.Maui.Controls.ItemSizingStrategy>(mauiObject, Microsoft.Maui.Controls.StructuredItemsView.ItemSizingStrategyProperty));
            if (def.ValueIsSet()) mauiObject.ItemSizingStrategy = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T ItemSizingStrategy<T>(this T obj,
            System.Func<BindableDef<Microsoft.Maui.Controls.ItemSizingStrategy>, BindableDef<Microsoft.Maui.Controls.ItemSizingStrategy>> definition)
            where T : Sharp.UI.IStructuredItemsView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.StructuredItemsView>(obj);
            var def = definition(new BindableDef<Microsoft.Maui.Controls.ItemSizingStrategy>(mauiObject, Microsoft.Maui.Controls.StructuredItemsView.ItemSizingStrategyProperty));
            if (def.ValueIsSet()) mauiObject.ItemSizingStrategy = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
    }
}


#pragma warning restore CS8669
