//
// <auto-generated>
//

#pragma warning disable CS8669


namespace Sharp.UI
{
    public static class FontImageSourceGeneratedExtension
    {
        public static T Color<T>(this T obj,
            Microsoft.Maui.Graphics.Color? color)
            where T : Sharp.UI.IFontImageSource
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.FontImageSource>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.Graphics.Color>(color);
            if (color != null) mauiObject.Color = mauiValue;
            return obj;
        }
        
        public static T Color<T>(this T obj,
            Microsoft.Maui.Graphics.Color? color,
            System.Func<BindableDef<Microsoft.Maui.Graphics.Color>, BindableDef<Microsoft.Maui.Graphics.Color>> definition)
            where T : Sharp.UI.IFontImageSource
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.FontImageSource>(obj);
            var mauiValue = MauiWrapper.Value<Microsoft.Maui.Graphics.Color>(color);
            if (color != null) mauiObject.Color = mauiValue;
            var def = definition(new BindableDef<Microsoft.Maui.Graphics.Color>(mauiObject, Microsoft.Maui.Controls.FontImageSource.ColorProperty));
            if (def.ValueIsSet()) mauiObject.Color = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Color<T>(this T obj,
            System.Func<BindableDef<Microsoft.Maui.Graphics.Color>, BindableDef<Microsoft.Maui.Graphics.Color>> definition)
            where T : Sharp.UI.IFontImageSource
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.FontImageSource>(obj);
            var def = definition(new BindableDef<Microsoft.Maui.Graphics.Color>(mauiObject, Microsoft.Maui.Controls.FontImageSource.ColorProperty));
            if (def.ValueIsSet()) mauiObject.Color = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T FontFamily<T>(this T obj,
            string? fontFamily)
            where T : Sharp.UI.IFontImageSource
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.FontImageSource>(obj);
            var mauiValue = MauiWrapper.Value<string>(fontFamily);
            if (fontFamily != null) mauiObject.FontFamily = mauiValue;
            return obj;
        }
        
        public static T FontFamily<T>(this T obj,
            string? fontFamily,
            System.Func<BindableDef<string>, BindableDef<string>> definition)
            where T : Sharp.UI.IFontImageSource
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.FontImageSource>(obj);
            var mauiValue = MauiWrapper.Value<string>(fontFamily);
            if (fontFamily != null) mauiObject.FontFamily = mauiValue;
            var def = definition(new BindableDef<string>(mauiObject, Microsoft.Maui.Controls.FontImageSource.FontFamilyProperty));
            if (def.ValueIsSet()) mauiObject.FontFamily = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T FontFamily<T>(this T obj,
            System.Func<BindableDef<string>, BindableDef<string>> definition)
            where T : Sharp.UI.IFontImageSource
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.FontImageSource>(obj);
            var def = definition(new BindableDef<string>(mauiObject, Microsoft.Maui.Controls.FontImageSource.FontFamilyProperty));
            if (def.ValueIsSet()) mauiObject.FontFamily = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Glyph<T>(this T obj,
            string? glyph)
            where T : Sharp.UI.IFontImageSource
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.FontImageSource>(obj);
            var mauiValue = MauiWrapper.Value<string>(glyph);
            if (glyph != null) mauiObject.Glyph = mauiValue;
            return obj;
        }
        
        public static T Glyph<T>(this T obj,
            string? glyph,
            System.Func<BindableDef<string>, BindableDef<string>> definition)
            where T : Sharp.UI.IFontImageSource
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.FontImageSource>(obj);
            var mauiValue = MauiWrapper.Value<string>(glyph);
            if (glyph != null) mauiObject.Glyph = mauiValue;
            var def = definition(new BindableDef<string>(mauiObject, Microsoft.Maui.Controls.FontImageSource.GlyphProperty));
            if (def.ValueIsSet()) mauiObject.Glyph = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Glyph<T>(this T obj,
            System.Func<BindableDef<string>, BindableDef<string>> definition)
            where T : Sharp.UI.IFontImageSource
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.FontImageSource>(obj);
            var def = definition(new BindableDef<string>(mauiObject, Microsoft.Maui.Controls.FontImageSource.GlyphProperty));
            if (def.ValueIsSet()) mauiObject.Glyph = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Size<T>(this T obj,
            double? size)
            where T : Sharp.UI.IFontImageSource
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.FontImageSource>(obj);
            var mauiValue = MauiWrapper.Value<double>(size);
            if (size != null) mauiObject.Size = mauiValue;
            return obj;
        }
        
        public static T Size<T>(this T obj,
            double? size,
            System.Func<BindableDef<double>, BindableDef<double>> definition)
            where T : Sharp.UI.IFontImageSource
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.FontImageSource>(obj);
            var mauiValue = MauiWrapper.Value<double>(size);
            if (size != null) mauiObject.Size = mauiValue;
            var def = definition(new BindableDef<double>(mauiObject, Microsoft.Maui.Controls.FontImageSource.SizeProperty));
            if (def.ValueIsSet()) mauiObject.Size = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Size<T>(this T obj,
            System.Func<BindableDef<double>, BindableDef<double>> definition)
            where T : Sharp.UI.IFontImageSource
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.FontImageSource>(obj);
            var def = definition(new BindableDef<double>(mauiObject, Microsoft.Maui.Controls.FontImageSource.SizeProperty));
            if (def.ValueIsSet()) mauiObject.Size = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T FontAutoScalingEnabled<T>(this T obj,
            bool? fontAutoScalingEnabled)
            where T : Sharp.UI.IFontImageSource
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.FontImageSource>(obj);
            var mauiValue = MauiWrapper.Value<bool>(fontAutoScalingEnabled);
            if (fontAutoScalingEnabled != null) mauiObject.FontAutoScalingEnabled = mauiValue;
            return obj;
        }
        
        public static T FontAutoScalingEnabled<T>(this T obj,
            bool? fontAutoScalingEnabled,
            System.Func<BindableDef<bool>, BindableDef<bool>> definition)
            where T : Sharp.UI.IFontImageSource
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.FontImageSource>(obj);
            var mauiValue = MauiWrapper.Value<bool>(fontAutoScalingEnabled);
            if (fontAutoScalingEnabled != null) mauiObject.FontAutoScalingEnabled = mauiValue;
            var def = definition(new BindableDef<bool>(mauiObject, Microsoft.Maui.Controls.FontImageSource.FontAutoScalingEnabledProperty));
            if (def.ValueIsSet()) mauiObject.FontAutoScalingEnabled = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T FontAutoScalingEnabled<T>(this T obj,
            System.Func<BindableDef<bool>, BindableDef<bool>> definition)
            where T : Sharp.UI.IFontImageSource
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.FontImageSource>(obj);
            var def = definition(new BindableDef<bool>(mauiObject, Microsoft.Maui.Controls.FontImageSource.FontAutoScalingEnabledProperty));
            if (def.ValueIsSet()) mauiObject.FontAutoScalingEnabled = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
    }
}


#pragma warning restore CS8669
