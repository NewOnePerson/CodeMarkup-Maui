//
// <auto-generated>
//

#pragma warning disable CS8669


namespace Sharp.UI
{
    public static class CompareStateTriggerGeneratedExtension
    {
        public static T Property<T>(this T obj,
            object? property)
            where T : Sharp.UI.ICompareStateTrigger
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.CompareStateTrigger>(obj);
            if (property != null) mauiObject.Property = (object)property;
            return obj;
        }
        
        public static T Property<T>(this T obj,
            object? property,
            Func<BindableDef<object>, BindableDef<object>> definition)
            where T : Sharp.UI.ICompareStateTrigger
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.CompareStateTrigger>(obj);
            if (property != null) mauiObject.Property = (object)property;
            var def = definition(new BindableDef<object>(mauiObject, Microsoft.Maui.Controls.CompareStateTrigger.PropertyProperty));
            if (def.ValueIsSet()) mauiObject.Property = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Property<T>(this T obj,
            Func<BindableDef<object>, BindableDef<object>> definition)
            where T : Sharp.UI.ICompareStateTrigger
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.CompareStateTrigger>(obj);
            var def = definition(new BindableDef<object>(mauiObject, Microsoft.Maui.Controls.CompareStateTrigger.PropertyProperty));
            if (def.ValueIsSet()) mauiObject.Property = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Value<T>(this T obj,
            object? value)
            where T : Sharp.UI.ICompareStateTrigger
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.CompareStateTrigger>(obj);
            if (value != null) mauiObject.Value = (object)value;
            return obj;
        }
        
        public static T Value<T>(this T obj,
            object? value,
            Func<BindableDef<object>, BindableDef<object>> definition)
            where T : Sharp.UI.ICompareStateTrigger
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.CompareStateTrigger>(obj);
            if (value != null) mauiObject.Value = (object)value;
            var def = definition(new BindableDef<object>(mauiObject, Microsoft.Maui.Controls.CompareStateTrigger.ValueProperty));
            if (def.ValueIsSet()) mauiObject.Value = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Value<T>(this T obj,
            Func<BindableDef<object>, BindableDef<object>> definition)
            where T : Sharp.UI.ICompareStateTrigger
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.CompareStateTrigger>(obj);
            var def = definition(new BindableDef<object>(mauiObject, Microsoft.Maui.Controls.CompareStateTrigger.ValueProperty));
            if (def.ValueIsSet()) mauiObject.Value = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
    }
}


#pragma warning restore CS8669
