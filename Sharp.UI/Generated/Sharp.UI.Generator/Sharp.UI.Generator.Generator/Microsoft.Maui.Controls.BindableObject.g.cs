//
// <auto-generated>
//

#pragma warning disable CS8669


namespace Sharp.UI
{
    public static class BindableObjectGeneratedExtension
    {
        public static T BindingContext<T>(this T obj,
            object? bindingContext)
            where T : Sharp.UI.IBindableObject
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.BindableObject>(obj);
            if (bindingContext != null) mauiObject.BindingContext = (object)bindingContext;
            return obj;
        }
        
        public static T BindingContext<T>(this T obj,
            object? bindingContext,
            System.Func<BindableDef<object>, BindableDef<object>> definition)
            where T : Sharp.UI.IBindableObject
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.BindableObject>(obj);         
            if (bindingContext != null) mauiObject.BindingContext = (object)bindingContext;
            var def = definition(new BindableDef<object>(mauiObject, Microsoft.Maui.Controls.BindableObject.BindingContextProperty));
            if (def.ValueIsSet()) mauiObject.BindingContext = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T BindingContext<T>(this T obj,
            System.Func<BindableDef<object>, BindableDef<object>> definition)
            where T : Sharp.UI.IBindableObject
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.BindableObject>(obj);
            var def = definition(new BindableDef<object>(mauiObject, Microsoft.Maui.Controls.BindableObject.BindingContextProperty));
            if (def.ValueIsSet()) mauiObject.BindingContext = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T OnPropertyChanged<T>(this T obj, OnEventAction<T, System.ComponentModel.PropertyChangedEventArgs> action)
            where T : Sharp.UI.IBindableObject
        {            
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.BindableObject>(obj);
            mauiObject.PropertyChanged += (o, arg) => action(obj, arg);
            return obj;
        }
        
        public static T OnPropertyChanging<T>(this T obj, OnEventAction<T, Microsoft.Maui.Controls.PropertyChangingEventArgs> action)
            where T : Sharp.UI.IBindableObject
        {            
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.BindableObject>(obj);
            mauiObject.PropertyChanging += (o, arg) => action(obj, arg);
            return obj;
        }
        
        public static T OnBindingContextChanged<T>(this T obj, OnEventAction<T> action)
            where T : Sharp.UI.IBindableObject
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.BindableObject>(obj);
            mauiObject.BindingContextChanged += (o, arg) => action(obj);
            return obj;
        }
        
    }
}


#pragma warning restore CS8669
