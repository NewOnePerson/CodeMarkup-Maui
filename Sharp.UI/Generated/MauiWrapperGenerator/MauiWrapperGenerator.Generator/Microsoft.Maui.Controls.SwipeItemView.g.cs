//
// <auto-generated>
//

#pragma warning disable CS8669


namespace Sharp.UI
{
    public static class ISwipeItemViewGeneratedExtension
    {
        public static T Command<T>(this T obj,
            System.Windows.Input.ICommand? command)
            where T : Sharp.UI.ISwipeItemView
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.SwipeItemView>(obj);
            if (command != null) mauiObject.Command = (System.Windows.Input.ICommand)command;
            return obj;
        }
        
        public static T Command<T>(this T obj,
            System.Windows.Input.ICommand? command,
            Func<BindableDef<System.Windows.Input.ICommand>, BindableDef<System.Windows.Input.ICommand>> definition)
            where T : Sharp.UI.ISwipeItemView
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.SwipeItemView>(obj);
            if (command != null) mauiObject.Command = (System.Windows.Input.ICommand)command;
            var def = definition(new BindableDef<System.Windows.Input.ICommand>(mauiObject, Microsoft.Maui.Controls.SwipeItemView.CommandProperty));
            if (def.ValueIsSet()) mauiObject.Command = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Command<T>(this T obj,
            Func<BindableDef<System.Windows.Input.ICommand>, BindableDef<System.Windows.Input.ICommand>> definition)
            where T : Sharp.UI.ISwipeItemView
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.SwipeItemView>(obj);
            var def = definition(new BindableDef<System.Windows.Input.ICommand>(mauiObject, Microsoft.Maui.Controls.SwipeItemView.CommandProperty));
            if (def.ValueIsSet()) mauiObject.Command = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T CommandParameter<T>(this T obj,
            object? commandParameter)
            where T : Sharp.UI.ISwipeItemView
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.SwipeItemView>(obj);
            if (commandParameter != null) mauiObject.CommandParameter = (object)commandParameter;
            return obj;
        }
        
        public static T CommandParameter<T>(this T obj,
            object? commandParameter,
            Func<BindableDef<object>, BindableDef<object>> definition)
            where T : Sharp.UI.ISwipeItemView
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.SwipeItemView>(obj);
            if (commandParameter != null) mauiObject.CommandParameter = (object)commandParameter;
            var def = definition(new BindableDef<object>(mauiObject, Microsoft.Maui.Controls.SwipeItemView.CommandParameterProperty));
            if (def.ValueIsSet()) mauiObject.CommandParameter = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T CommandParameter<T>(this T obj,
            Func<BindableDef<object>, BindableDef<object>> definition)
            where T : Sharp.UI.ISwipeItemView
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.SwipeItemView>(obj);
            var def = definition(new BindableDef<object>(mauiObject, Microsoft.Maui.Controls.SwipeItemView.CommandParameterProperty));
            if (def.ValueIsSet()) mauiObject.CommandParameter = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T OnInvoked<T>(this T obj, OnEventAction<T> action)
            where T : Sharp.UI.ISwipeItemView
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.SwipeItemView>(obj);
            mauiObject.Invoked += (o, arg) => action(obj);
            return obj;
        }
        
    }
}


#pragma warning restore CS8669
