//
// <auto-generated>
//

#pragma warning disable CS8669


namespace Sharp.UI
{
    public static class IStyleGeneratedExtension
    {
        public static T ApplyToDerivedTypes<T>(this T obj,
            bool? applyToDerivedTypes)
            where T : Sharp.UI.IStyle
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Style>(obj);
            if (applyToDerivedTypes != null) mauiObject.ApplyToDerivedTypes = (bool)applyToDerivedTypes;
            return obj;
        }
        
        public static T ApplyToDerivedTypes<T>(this T obj,
            bool? applyToDerivedTypes,
            Func<ValueDef<bool>, ValueDef<bool>> definition)
            where T : Sharp.UI.IStyle
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Style>(obj);
            if (applyToDerivedTypes != null) mauiObject.ApplyToDerivedTypes = (bool)applyToDerivedTypes;
            var def = definition(new ValueDef<bool>());
            if (def.ValueIsSet()) mauiObject.ApplyToDerivedTypes = def.GetValue();
            return obj;
        }
        
        public static T ApplyToDerivedTypes<T>(this T obj,
            Func<ValueDef<bool>, ValueDef<bool>> definition)
            where T : Sharp.UI.IStyle
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Style>(obj);
            var def = definition(new ValueDef<bool>());
            if (def.ValueIsSet()) mauiObject.ApplyToDerivedTypes = def.GetValue();
            return obj;
        }
        
        public static T BasedOn<T>(this T obj,
            Microsoft.Maui.Controls.Style? basedOn)
            where T : Sharp.UI.IStyle
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Style>(obj);
            if (basedOn != null) mauiObject.BasedOn = (Microsoft.Maui.Controls.Style)basedOn;
            return obj;
        }
        
        public static T BasedOn<T>(this T obj,
            Microsoft.Maui.Controls.Style? basedOn,
            Func<ValueDef<Microsoft.Maui.Controls.Style>, ValueDef<Microsoft.Maui.Controls.Style>> definition)
            where T : Sharp.UI.IStyle
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Style>(obj);
            if (basedOn != null) mauiObject.BasedOn = (Microsoft.Maui.Controls.Style)basedOn;
            var def = definition(new ValueDef<Microsoft.Maui.Controls.Style>());
            if (def.ValueIsSet()) mauiObject.BasedOn = def.GetValue();
            return obj;
        }
        
        public static T BasedOn<T>(this T obj,
            Func<ValueDef<Microsoft.Maui.Controls.Style>, ValueDef<Microsoft.Maui.Controls.Style>> definition)
            where T : Sharp.UI.IStyle
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Style>(obj);
            var def = definition(new ValueDef<Microsoft.Maui.Controls.Style>());
            if (def.ValueIsSet()) mauiObject.BasedOn = def.GetValue();
            return obj;
        }
        
        public static T BaseResourceKey<T>(this T obj,
            string? baseResourceKey)
            where T : Sharp.UI.IStyle
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Style>(obj);
            if (baseResourceKey != null) mauiObject.BaseResourceKey = (string)baseResourceKey;
            return obj;
        }
        
        public static T BaseResourceKey<T>(this T obj,
            string? baseResourceKey,
            Func<ValueDef<string>, ValueDef<string>> definition)
            where T : Sharp.UI.IStyle
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Style>(obj);
            if (baseResourceKey != null) mauiObject.BaseResourceKey = (string)baseResourceKey;
            var def = definition(new ValueDef<string>());
            if (def.ValueIsSet()) mauiObject.BaseResourceKey = def.GetValue();
            return obj;
        }
        
        public static T BaseResourceKey<T>(this T obj,
            Func<ValueDef<string>, ValueDef<string>> definition)
            where T : Sharp.UI.IStyle
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Style>(obj);
            var def = definition(new ValueDef<string>());
            if (def.ValueIsSet()) mauiObject.BaseResourceKey = def.GetValue();
            return obj;
        }
        
        public static T CanCascade<T>(this T obj,
            bool? canCascade)
            where T : Sharp.UI.IStyle
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Style>(obj);
            if (canCascade != null) mauiObject.CanCascade = (bool)canCascade;
            return obj;
        }
        
        public static T CanCascade<T>(this T obj,
            bool? canCascade,
            Func<ValueDef<bool>, ValueDef<bool>> definition)
            where T : Sharp.UI.IStyle
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Style>(obj);
            if (canCascade != null) mauiObject.CanCascade = (bool)canCascade;
            var def = definition(new ValueDef<bool>());
            if (def.ValueIsSet()) mauiObject.CanCascade = def.GetValue();
            return obj;
        }
        
        public static T CanCascade<T>(this T obj,
            Func<ValueDef<bool>, ValueDef<bool>> definition)
            where T : Sharp.UI.IStyle
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Style>(obj);
            var def = definition(new ValueDef<bool>());
            if (def.ValueIsSet()) mauiObject.CanCascade = def.GetValue();
            return obj;
        }
        
        public static T Class<T>(this T obj,
            string? @class)
            where T : Sharp.UI.IStyle
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Style>(obj);
            if (@class != null) mauiObject.Class = (string)@class;
            return obj;
        }
        
        public static T Class<T>(this T obj,
            string? @class,
            Func<ValueDef<string>, ValueDef<string>> definition)
            where T : Sharp.UI.IStyle
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Style>(obj);
            if (@class != null) mauiObject.Class = (string)@class;
            var def = definition(new ValueDef<string>());
            if (def.ValueIsSet()) mauiObject.Class = def.GetValue();
            return obj;
        }
        
        public static T Class<T>(this T obj,
            Func<ValueDef<string>, ValueDef<string>> definition)
            where T : Sharp.UI.IStyle
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Style>(obj);
            var def = definition(new ValueDef<string>());
            if (def.ValueIsSet()) mauiObject.Class = def.GetValue();
            return obj;
        }
        
    }
}


#pragma warning restore CS8669
