//
// <auto-generated>
//

#pragma warning disable CS8669


namespace Sharp.UI
{
    public static class IPolylineGeneratedExtension
    {
        public static T Points<T>(this T obj,
            Microsoft.Maui.Controls.PointCollection? points)
            where T : Sharp.UI.IPolyline
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Shapes.Polyline>(obj);
            if (points != null) mauiObject.Points = (Microsoft.Maui.Controls.PointCollection)points;
            return obj;
        }
        
        public static T Points<T>(this T obj,
            Microsoft.Maui.Controls.PointCollection? points,
            Func<BindableDef<Microsoft.Maui.Controls.PointCollection>, BindableDef<Microsoft.Maui.Controls.PointCollection>> definition)
            where T : Sharp.UI.IPolyline
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Shapes.Polyline>(obj);
            if (points != null) mauiObject.Points = (Microsoft.Maui.Controls.PointCollection)points;
            var def = definition(new BindableDef<Microsoft.Maui.Controls.PointCollection>(mauiObject, Microsoft.Maui.Controls.Shapes.Polyline.PointsProperty));
            if (def.ValueIsSet()) mauiObject.Points = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T Points<T>(this T obj,
            Func<BindableDef<Microsoft.Maui.Controls.PointCollection>, BindableDef<Microsoft.Maui.Controls.PointCollection>> definition)
            where T : Sharp.UI.IPolyline
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Shapes.Polyline>(obj);
            var def = definition(new BindableDef<Microsoft.Maui.Controls.PointCollection>(mauiObject, Microsoft.Maui.Controls.Shapes.Polyline.PointsProperty));
            if (def.ValueIsSet()) mauiObject.Points = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T FillRule<T>(this T obj,
            Microsoft.Maui.Controls.Shapes.FillRule? fillRule)
            where T : Sharp.UI.IPolyline
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Shapes.Polyline>(obj);
            if (fillRule != null) mauiObject.FillRule = (Microsoft.Maui.Controls.Shapes.FillRule)fillRule;
            return obj;
        }
        
        public static T FillRule<T>(this T obj,
            Microsoft.Maui.Controls.Shapes.FillRule? fillRule,
            Func<BindableDef<Microsoft.Maui.Controls.Shapes.FillRule>, BindableDef<Microsoft.Maui.Controls.Shapes.FillRule>> definition)
            where T : Sharp.UI.IPolyline
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Shapes.Polyline>(obj);
            if (fillRule != null) mauiObject.FillRule = (Microsoft.Maui.Controls.Shapes.FillRule)fillRule;
            var def = definition(new BindableDef<Microsoft.Maui.Controls.Shapes.FillRule>(mauiObject, Microsoft.Maui.Controls.Shapes.Polyline.FillRuleProperty));
            if (def.ValueIsSet()) mauiObject.FillRule = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T FillRule<T>(this T obj,
            Func<BindableDef<Microsoft.Maui.Controls.Shapes.FillRule>, BindableDef<Microsoft.Maui.Controls.Shapes.FillRule>> definition)
            where T : Sharp.UI.IPolyline
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Shapes.Polyline>(obj);
            var def = definition(new BindableDef<Microsoft.Maui.Controls.Shapes.FillRule>(mauiObject, Microsoft.Maui.Controls.Shapes.Polyline.FillRuleProperty));
            if (def.ValueIsSet()) mauiObject.FillRule = def.GetValue();
            def.BindProperty();
            return obj;
        }
        
        public static T @class<T>(this T obj,
            System.Collections.Generic.IList<string>? @class)
            where T : Sharp.UI.IPolyline
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Shapes.Polyline>(obj);
            if (@class != null) mauiObject.@class = (System.Collections.Generic.IList<string>)@class;
            return obj;
        }
        
        public static T @class<T>(this T obj,
            System.Collections.Generic.IList<string>? @class,
            Func<ValueDef<System.Collections.Generic.IList<string>>, ValueDef<System.Collections.Generic.IList<string>>> definition)
            where T : Sharp.UI.IPolyline
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Shapes.Polyline>(obj);
            if (@class != null) mauiObject.@class = (System.Collections.Generic.IList<string>)@class;
            var def = definition(new ValueDef<System.Collections.Generic.IList<string>>());
            if (def.ValueIsSet()) mauiObject.@class = def.GetValue();
            return obj;
        }
        
        public static T @class<T>(this T obj,
            Func<ValueDef<System.Collections.Generic.IList<string>>, ValueDef<System.Collections.Generic.IList<string>>> definition)
            where T : Sharp.UI.IPolyline
        {
            var mauiObject = MauiWrapper.GetObject<Microsoft.Maui.Controls.Shapes.Polyline>(obj);
            var def = definition(new ValueDef<System.Collections.Generic.IList<string>>());
            if (def.ValueIsSet()) mauiObject.@class = def.GetValue();
            return obj;
        }
        
    }
}


#pragma warning restore CS8669
