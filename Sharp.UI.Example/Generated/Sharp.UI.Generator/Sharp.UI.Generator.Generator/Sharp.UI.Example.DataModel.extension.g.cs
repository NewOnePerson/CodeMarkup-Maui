//
// <auto-generated>
//

#pragma warning disable CS8669


namespace Sharp.UI.Example
{
    using Sharp.UI;

    public static class DataModelGeneratedSharpObjectExtension
    {
        public static T SimpleData<T>(this T obj,
            System.Collections.Generic.List<Sharp.UI.Example.DataModel> simpleData)
            where T : Sharp.UI.Example.DataModel
        {
            var mauiObject = MauiWrapper.Value<Sharp.UI.Example.DataModel>(obj);
            foreach (var item in simpleData)
            {
                var mauiItem = MauiWrapper.Value<Sharp.UI.Example.DataModel>(item);
                Sharp.UI.Example.DataModel.SimpleData.Add(mauiItem);
            }
            return obj;
        }

        public static T SimpleData<T>(this T obj,
            params Sharp.UI.Example.DataModel[] simpleData)
            where T : Sharp.UI.Example.DataModel
        {
            var mauiObject = MauiWrapper.Value<Sharp.UI.Example.DataModel>(obj);
            foreach (var item in simpleData)
            {
                var mauiItem = MauiWrapper.Value<Sharp.UI.Example.DataModel>(item);
                Sharp.UI.Example.DataModel.SimpleData.Add(mauiItem);
            }
            return obj;
        }

        public static T SimpleData<T>(this T obj,
            System.Func<LazyValueBuilder<System.Collections.Generic.List<Sharp.UI.Example.DataModel>>, LazyValueBuilder<System.Collections.Generic.List<Sharp.UI.Example.DataModel>>> buildValue)
            where T : Sharp.UI.Example.DataModel
        {
            var mauiObject = MauiWrapper.Value<Sharp.UI.Example.DataModel>(obj);
            var builder = buildValue(new LazyValueBuilder<System.Collections.Generic.List<Sharp.UI.Example.DataModel>>());
            if (builder.ValueIsSet())
            {
                var items = builder.GetValue();
                foreach (var item in items) 
                {
                    var mauiItem = MauiWrapper.Value<Sharp.UI.Example.DataModel>(item);
                    Sharp.UI.Example.DataModel.SimpleData.Add(mauiItem);
                }
            }
            return obj;
        }
        
        public static T Id<T>(this T obj,
            int id)
            where T : Sharp.UI.Example.DataModel
        {
            var mauiObject = MauiWrapper.Value<Sharp.UI.Example.DataModel>(obj);
            mauiObject.SetValue(Sharp.UI.Example.DataModel.IdProperty, (int)id);
            return obj;
        }
        
        public static T Id<T>(this T obj,
            System.Func<ValueBuilder<int>, ValueBuilder<int>> buildValue)
            where T : Sharp.UI.Example.DataModel
        {
            var mauiObject = MauiWrapper.Value<Sharp.UI.Example.DataModel>(obj);
            var builder = buildValue(new ValueBuilder<int>());
            if (builder.ValueIsSet()) mauiObject.SetValue(Sharp.UI.Example.DataModel.IdProperty, builder.GetValue());
            return obj;
        }
        
        public static T Id<T>(this T obj,
            System.Func<LazyValueBuilder<int>, LazyValueBuilder<int>> buildValue)
            where T : Sharp.UI.Example.DataModel
        {
            var mauiObject = MauiWrapper.Value<Sharp.UI.Example.DataModel>(obj);
            var builder = buildValue(new LazyValueBuilder<int>());
            if (builder.ValueIsSet()) mauiObject.SetValue(Sharp.UI.Example.DataModel.IdProperty, builder.GetValue());
            return obj;
        }
        
        public static T Id<T>(this T obj,
            System.Func<BindingBuilder<int>, BindingBuilder<int>> buildBinding)
            where T : Sharp.UI.Example.DataModel
        {
            var mauiObject = MauiWrapper.Value<Sharp.UI.Example.DataModel>(obj);
            var builder = buildBinding(new BindingBuilder<int>(mauiObject, Sharp.UI.Example.DataModel.IdProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T Name<T>(this T obj,
            string name)
            where T : Sharp.UI.Example.DataModel
        {
            var mauiObject = MauiWrapper.Value<Sharp.UI.Example.DataModel>(obj);
            mauiObject.SetValue(Sharp.UI.Example.DataModel.NameProperty, (string)name);
            return obj;
        }
        
        public static T Name<T>(this T obj,
            System.Func<ValueBuilder<string>, ValueBuilder<string>> buildValue)
            where T : Sharp.UI.Example.DataModel
        {
            var mauiObject = MauiWrapper.Value<Sharp.UI.Example.DataModel>(obj);
            var builder = buildValue(new ValueBuilder<string>());
            if (builder.ValueIsSet()) mauiObject.SetValue(Sharp.UI.Example.DataModel.NameProperty, builder.GetValue());
            return obj;
        }
        
        public static T Name<T>(this T obj,
            System.Func<LazyValueBuilder<string>, LazyValueBuilder<string>> buildValue)
            where T : Sharp.UI.Example.DataModel
        {
            var mauiObject = MauiWrapper.Value<Sharp.UI.Example.DataModel>(obj);
            var builder = buildValue(new LazyValueBuilder<string>());
            if (builder.ValueIsSet()) mauiObject.SetValue(Sharp.UI.Example.DataModel.NameProperty, builder.GetValue());
            return obj;
        }
        
        public static T Name<T>(this T obj,
            System.Func<BindingBuilder<string>, BindingBuilder<string>> buildBinding)
            where T : Sharp.UI.Example.DataModel
        {
            var mauiObject = MauiWrapper.Value<Sharp.UI.Example.DataModel>(obj);
            var builder = buildBinding(new BindingBuilder<string>(mauiObject, Sharp.UI.Example.DataModel.NameProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T Admin<T>(this T obj,
            bool admin)
            where T : Sharp.UI.Example.DataModel
        {
            var mauiObject = MauiWrapper.Value<Sharp.UI.Example.DataModel>(obj);
            mauiObject.SetValue(Sharp.UI.Example.DataModel.AdminProperty, (bool)admin);
            return obj;
        }
        
        public static T Admin<T>(this T obj,
            System.Func<ValueBuilder<bool>, ValueBuilder<bool>> buildValue)
            where T : Sharp.UI.Example.DataModel
        {
            var mauiObject = MauiWrapper.Value<Sharp.UI.Example.DataModel>(obj);
            var builder = buildValue(new ValueBuilder<bool>());
            if (builder.ValueIsSet()) mauiObject.SetValue(Sharp.UI.Example.DataModel.AdminProperty, builder.GetValue());
            return obj;
        }
        
        public static T Admin<T>(this T obj,
            System.Func<LazyValueBuilder<bool>, LazyValueBuilder<bool>> buildValue)
            where T : Sharp.UI.Example.DataModel
        {
            var mauiObject = MauiWrapper.Value<Sharp.UI.Example.DataModel>(obj);
            var builder = buildValue(new LazyValueBuilder<bool>());
            if (builder.ValueIsSet()) mauiObject.SetValue(Sharp.UI.Example.DataModel.AdminProperty, builder.GetValue());
            return obj;
        }
        
        public static T Admin<T>(this T obj,
            System.Func<BindingBuilder<bool>, BindingBuilder<bool>> buildBinding)
            where T : Sharp.UI.Example.DataModel
        {
            var mauiObject = MauiWrapper.Value<Sharp.UI.Example.DataModel>(obj);
            var builder = buildBinding(new BindingBuilder<bool>(mauiObject, Sharp.UI.Example.DataModel.AdminProperty));
            builder.BindProperty();
            return obj;
        }
        
    }
}


#pragma warning restore CS8669
