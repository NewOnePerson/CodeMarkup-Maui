//
// <auto-generated>
//

#pragma warning disable CS8669


namespace ExampleApp
{  
    using Sharp.UI;

    public partial class DataModel
    {
        // ----- constructors -----

        public DataModel() { }

        public DataModel(out DataModel dataModel) 
        {
            dataModel = this;
        }

        public DataModel(System.Action<DataModel> configure) 
        {
            configure(this);
        }

        public DataModel(out DataModel dataModel, System.Action<DataModel> configure) 
        {
            dataModel = this;
            configure(this);
        }

        public DataModel(int id, string name, bool admin, out DataModel dataModel) : this(id, name, admin)
        {
            dataModel = this;
        }

        public DataModel(int id, string name, bool admin, System.Action<DataModel> configure) : this(id, name, admin)
        {
            configure(this);
        }

        public DataModel(int id, string name, bool admin, out DataModel dataModel, System.Action<DataModel> configure) : this(id, name, admin)
        {
            dataModel = this;
            configure(this);
        }

        // ----- bindable properties -----

        public static readonly Microsoft.Maui.Controls.BindableProperty IdProperty =
            BindableProperty.Create(
                nameof(Id),
                typeof(int),
                typeof(ExampleApp.DataModel),
                default(int));

        public int Id
        {
            get => (int)GetValue(IdProperty);
            set => SetValue(IdProperty, value);
        }
        
        public static readonly Microsoft.Maui.Controls.BindableProperty NameProperty =
            BindableProperty.Create(
                nameof(Name),
                typeof(string),
                typeof(ExampleApp.DataModel),
                default(string));

        public string Name
        {
            get => (string)GetValue(NameProperty);
            set => SetValue(NameProperty, value);
        }
        
        public static readonly Microsoft.Maui.Controls.BindableProperty AdminProperty =
            BindableProperty.Create(
                nameof(Admin),
                typeof(bool),
                typeof(ExampleApp.DataModel),
                default(bool));

        public bool Admin
        {
            get => (bool)GetValue(AdminProperty);
            set => SetValue(AdminProperty, value);
        }
        
        // ----- set value method -----

        public new void SetValue(Microsoft.Maui.Controls.BindableProperty property, object value)
        {
            var mauiValue = MauiWrapper.Value<object>(value);
            ((Microsoft.Maui.Controls.BindableObject)this).SetValue(property, mauiValue);
        }

        public new void SetValue(Microsoft.Maui.Controls.BindablePropertyKey propertyKey, object value)
        {
            var mauiValue = MauiWrapper.Value<object>(value);
            ((Microsoft.Maui.Controls.BindableObject)this).SetValue(propertyKey, mauiValue);
        }
    }
}

#pragma warning restore CS8669
