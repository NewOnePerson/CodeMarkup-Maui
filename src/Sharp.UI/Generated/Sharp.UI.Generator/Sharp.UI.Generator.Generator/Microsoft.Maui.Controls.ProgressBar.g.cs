//
// <auto-generated>
//

#pragma warning disable CS8669


namespace Sharp.UI
{
    public static class ProgressBarGeneratedExtension
    {
        public static T ProgressColor<T>(this T obj,
            Microsoft.Maui.Graphics.Color progressColor)
            where T : Sharp.UI.IProgressBar
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.ProgressBar>(obj);
            mauiObject.ProgressColor = (Microsoft.Maui.Graphics.Color)progressColor;
            return obj;
        }
        
        public static T ProgressColor<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Graphics.Color>, ValueBuilder<Microsoft.Maui.Graphics.Color>> buildValue)
            where T : Sharp.UI.IProgressBar
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.ProgressBar>(obj);
            var builder = buildValue(new ValueBuilder<Microsoft.Maui.Graphics.Color>());
            if (builder.ValueIsSet()) mauiObject.ProgressColor = builder.GetValue();
            return obj;
        }
        
        public static T ProgressColor<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Graphics.Color>, BindingBuilder<Microsoft.Maui.Graphics.Color>> buildBinding)
            where T : Sharp.UI.IProgressBar
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.ProgressBar>(obj);
            var builder = buildBinding(new BindingBuilder<Microsoft.Maui.Graphics.Color>(mauiObject, Microsoft.Maui.Controls.ProgressBar.ProgressColorProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T Progress<T>(this T obj,
            double progress)
            where T : Sharp.UI.IProgressBar
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.ProgressBar>(obj);
            mauiObject.Progress = (double)progress;
            return obj;
        }
        
        public static T Progress<T>(this T obj,
            System.Func<ValueBuilder<double>, ValueBuilder<double>> buildValue)
            where T : Sharp.UI.IProgressBar
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.ProgressBar>(obj);
            var builder = buildValue(new ValueBuilder<double>());
            if (builder.ValueIsSet()) mauiObject.Progress = builder.GetValue();
            return obj;
        }
        
        public static T Progress<T>(this T obj,
            System.Func<BindingBuilder<double>, BindingBuilder<double>> buildBinding)
            where T : Sharp.UI.IProgressBar
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.ProgressBar>(obj);
            var builder = buildBinding(new BindingBuilder<double>(mauiObject, Microsoft.Maui.Controls.ProgressBar.ProgressProperty));
            builder.BindProperty();
            return obj;
        }
        
    }
}


#pragma warning restore CS8669
