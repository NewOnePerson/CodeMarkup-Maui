//
// <auto-generated>
//

#pragma warning disable CS8669


namespace Sharp.UI
{
    public static class ShellItemGeneratedExtension
    {
        public static T CurrentItem<T>(this T obj,
            Microsoft.Maui.Controls.ShellSection currentItem)
            where T : Sharp.UI.IShellItem
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.ShellItem>(obj);
            mauiObject.CurrentItem = (Microsoft.Maui.Controls.ShellSection)currentItem;
            return obj;
        }
        
        public static T CurrentItem<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Controls.ShellSection>, ValueBuilder<Microsoft.Maui.Controls.ShellSection>> buildValue)
            where T : Sharp.UI.IShellItem
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.ShellItem>(obj);
            var builder = buildValue(new ValueBuilder<Microsoft.Maui.Controls.ShellSection>());
            if (builder.ValueIsSet()) mauiObject.CurrentItem = builder.GetValue();
            return obj;
        }
        
        public static T CurrentItem<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Controls.ShellSection>, BindingBuilder<Microsoft.Maui.Controls.ShellSection>> buildBinding)
            where T : Sharp.UI.IShellItem
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.ShellItem>(obj);
            var builder = buildBinding(new BindingBuilder<Microsoft.Maui.Controls.ShellSection>(mauiObject, Microsoft.Maui.Controls.ShellItem.CurrentItemProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T Items<T>(this T obj,
            System.Collections.Generic.IList<Microsoft.Maui.Controls.ShellSection> items)
            where T : Sharp.UI.IShellItem
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.ShellItem>(obj);
            foreach (var item in items)
            {
                var mauiItem = MauiWrapper.Value<Microsoft.Maui.Controls.ShellSection>(item);
                mauiObject.Items.Add(mauiItem);
            }
            return obj;
        }

        public static T Items<T>(this T obj,
            params Microsoft.Maui.Controls.ShellSection[] items)
            where T : Sharp.UI.IShellItem
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.ShellItem>(obj);
            foreach (var item in items)
            {
                var mauiItem = MauiWrapper.Value<Microsoft.Maui.Controls.ShellSection>(item);
                mauiObject.Items.Add(mauiItem);
            }
            return obj;
        }
        
    }
}


#pragma warning restore CS8669
