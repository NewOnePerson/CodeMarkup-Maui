//
// <auto-generated>
//

#pragma warning disable CS8669


using System.Collections;
using System.Collections.ObjectModel;


namespace Sharp.UI
{  
    /// <summary>
    /// A <c>Sharp.UI</c> class inheriting from the <c>Microsoft.Maui.Controls.FlyoutPage</c> class.
    /// </summary>
    [ContentProperty("Detail")]
    public partial class FlyoutPage : Microsoft.Maui.Controls.FlyoutPage, Sharp.UI.IFlyoutPage, IMauiWrapper, IEnumerable
    {
        // ----- constructors -----

        public FlyoutPage() { }

        public FlyoutPage(out FlyoutPage flyoutPage) 
        {
            flyoutPage = this;
        }

        [Obsolete("This constructor is deprecated, use e=>e.FluentMethod(), inside curly braces.")]
        public FlyoutPage(System.Action<FlyoutPage> configure) 
        {
            configure(this);
        }

        [Obsolete("This constructor is deprecated, use e=>e.Assign(out symbol).OtherFluentMethod(), inside curly braces.")]
        public FlyoutPage(out FlyoutPage flyoutPage, System.Action<FlyoutPage> configure) 
        {
            flyoutPage = this;
            configure(this);
        }

        // ----- single item container -----

        public IEnumerator GetEnumerator() { yield return this.Detail; }
        public void Add(Microsoft.Maui.Controls.Page detail) => this.Detail = detail;

        public void Add(Func<Sharp.UI.FlyoutPage, Sharp.UI.FlyoutPage> configure) { configure(this); }

        // ----- properties / events -----

        public new Sharp.UI.Style Style { get => new Sharp.UI.Style(base.Style); set => base.Style = value.MauiObject; }
        public new object BindingContext { get => base.BindingContext; set => base.BindingContext = MauiWrapper.Value<object>(value); }

        // ----- set value method -----

        public new void SetValue(Microsoft.Maui.Controls.BindableProperty property, object value)
        {
            var mauiValue = MauiWrapper.Value<object>(value);
            ((Microsoft.Maui.Controls.BindableObject)this).SetValue(property, mauiValue);
        }

        public new void SetValue(Microsoft.Maui.Controls.BindablePropertyKey propertyKey, object value)
        {
            var mauiValue = MauiWrapper.Value<object>(value);
            ((Microsoft.Maui.Controls.BindableObject)this).SetValue(propertyKey, mauiValue);
        }
    }
}

#pragma warning restore CS8669
