//
// <auto-generated>
//

#pragma warning disable CS8669


namespace Sharp.UI
{
    public static class LineGeneratedExtension
    {
        public static T X1<T>(this T obj,
            double x1)
            where T : Sharp.UI.ILine
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Shapes.Line>(obj);
            mauiObject.X1 = (double)x1;
            return obj;
        }
        
        public static T X1<T>(this T obj,
            System.Func<ValueBuilder<double>, ValueBuilder<double>> buildValue)
            where T : Sharp.UI.ILine
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Shapes.Line>(obj);
            var builder = buildValue(new ValueBuilder<double>());
            if (builder.ValueIsSet()) mauiObject.X1 = builder.GetValue();
            return obj;
        }
        
        public static T X1<T>(this T obj,
            System.Func<BindingBuilder<double>, BindingBuilder<double>> buildBinding)
            where T : Sharp.UI.ILine
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Shapes.Line>(obj);
            var builder = buildBinding(new BindingBuilder<double>(mauiObject, Microsoft.Maui.Controls.Shapes.Line.X1Property));
            builder.BindProperty();
            return obj;
        }
        
        public static T Y1<T>(this T obj,
            double y1)
            where T : Sharp.UI.ILine
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Shapes.Line>(obj);
            mauiObject.Y1 = (double)y1;
            return obj;
        }
        
        public static T Y1<T>(this T obj,
            System.Func<ValueBuilder<double>, ValueBuilder<double>> buildValue)
            where T : Sharp.UI.ILine
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Shapes.Line>(obj);
            var builder = buildValue(new ValueBuilder<double>());
            if (builder.ValueIsSet()) mauiObject.Y1 = builder.GetValue();
            return obj;
        }
        
        public static T Y1<T>(this T obj,
            System.Func<BindingBuilder<double>, BindingBuilder<double>> buildBinding)
            where T : Sharp.UI.ILine
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Shapes.Line>(obj);
            var builder = buildBinding(new BindingBuilder<double>(mauiObject, Microsoft.Maui.Controls.Shapes.Line.Y1Property));
            builder.BindProperty();
            return obj;
        }
        
        public static T X2<T>(this T obj,
            double x2)
            where T : Sharp.UI.ILine
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Shapes.Line>(obj);
            mauiObject.X2 = (double)x2;
            return obj;
        }
        
        public static T X2<T>(this T obj,
            System.Func<ValueBuilder<double>, ValueBuilder<double>> buildValue)
            where T : Sharp.UI.ILine
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Shapes.Line>(obj);
            var builder = buildValue(new ValueBuilder<double>());
            if (builder.ValueIsSet()) mauiObject.X2 = builder.GetValue();
            return obj;
        }
        
        public static T X2<T>(this T obj,
            System.Func<BindingBuilder<double>, BindingBuilder<double>> buildBinding)
            where T : Sharp.UI.ILine
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Shapes.Line>(obj);
            var builder = buildBinding(new BindingBuilder<double>(mauiObject, Microsoft.Maui.Controls.Shapes.Line.X2Property));
            builder.BindProperty();
            return obj;
        }
        
        public static T Y2<T>(this T obj,
            double y2)
            where T : Sharp.UI.ILine
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Shapes.Line>(obj);
            mauiObject.Y2 = (double)y2;
            return obj;
        }
        
        public static T Y2<T>(this T obj,
            System.Func<ValueBuilder<double>, ValueBuilder<double>> buildValue)
            where T : Sharp.UI.ILine
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Shapes.Line>(obj);
            var builder = buildValue(new ValueBuilder<double>());
            if (builder.ValueIsSet()) mauiObject.Y2 = builder.GetValue();
            return obj;
        }
        
        public static T Y2<T>(this T obj,
            System.Func<BindingBuilder<double>, BindingBuilder<double>> buildBinding)
            where T : Sharp.UI.ILine
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.Shapes.Line>(obj);
            var builder = buildBinding(new BindingBuilder<double>(mauiObject, Microsoft.Maui.Controls.Shapes.Line.Y2Property));
            builder.BindProperty();
            return obj;
        }
        
    }
}


#pragma warning restore CS8669
