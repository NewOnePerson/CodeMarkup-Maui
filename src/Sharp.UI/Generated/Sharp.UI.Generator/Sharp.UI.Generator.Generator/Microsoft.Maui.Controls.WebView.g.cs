//
// <auto-generated>
//

#pragma warning disable CS8669


namespace Sharp.UI
{
    public static class WebViewGeneratedExtension
    {
        public static T Cookies<T>(this T obj,
            System.Net.CookieContainer cookies)
            where T : Sharp.UI.IWebView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.WebView>(obj);
            mauiObject.Cookies = (System.Net.CookieContainer)cookies;
            return obj;
        }
        
        public static T Cookies<T>(this T obj,
            System.Func<ValueBuilder<System.Net.CookieContainer>, ValueBuilder<System.Net.CookieContainer>> buildValue)
            where T : Sharp.UI.IWebView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.WebView>(obj);
            var builder = buildValue(new ValueBuilder<System.Net.CookieContainer>());
            if (builder.ValueIsSet()) mauiObject.Cookies = builder.GetValue();
            return obj;
        }
        
        public static T Cookies<T>(this T obj,
            System.Func<LazyValueBuilder<System.Net.CookieContainer>, LazyValueBuilder<System.Net.CookieContainer>> buildValue)
            where T : Sharp.UI.IWebView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.WebView>(obj);
            var builder = buildValue(new LazyValueBuilder<System.Net.CookieContainer>());
            if (builder.ValueIsSet()) mauiObject.Cookies = builder.GetValue();
            return obj;
        }
        
        public static T Cookies<T>(this T obj,
            System.Func<BindingBuilder<System.Net.CookieContainer>, BindingBuilder<System.Net.CookieContainer>> buildBinding)
            where T : Sharp.UI.IWebView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.WebView>(obj);
            var builder = buildBinding(new BindingBuilder<System.Net.CookieContainer>(mauiObject, Microsoft.Maui.Controls.WebView.CookiesProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T Source<T>(this T obj,
            Microsoft.Maui.Controls.WebViewSource source)
            where T : Sharp.UI.IWebView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.WebView>(obj);
            mauiObject.Source = (Microsoft.Maui.Controls.WebViewSource)source;
            return obj;
        }
        
        public static T Source<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Controls.WebViewSource>, ValueBuilder<Microsoft.Maui.Controls.WebViewSource>> buildValue)
            where T : Sharp.UI.IWebView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.WebView>(obj);
            var builder = buildValue(new ValueBuilder<Microsoft.Maui.Controls.WebViewSource>());
            if (builder.ValueIsSet()) mauiObject.Source = builder.GetValue();
            return obj;
        }
        
        public static T Source<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.Controls.WebViewSource>, LazyValueBuilder<Microsoft.Maui.Controls.WebViewSource>> buildValue)
            where T : Sharp.UI.IWebView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.WebView>(obj);
            var builder = buildValue(new LazyValueBuilder<Microsoft.Maui.Controls.WebViewSource>());
            if (builder.ValueIsSet()) mauiObject.Source = builder.GetValue();
            return obj;
        }
        
        public static T Source<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Controls.WebViewSource>, BindingBuilder<Microsoft.Maui.Controls.WebViewSource>> buildBinding)
            where T : Sharp.UI.IWebView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.WebView>(obj);
            var builder = buildBinding(new BindingBuilder<Microsoft.Maui.Controls.WebViewSource>(mauiObject, Microsoft.Maui.Controls.WebView.SourceProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T OnNavigated<T>(this T obj, System.EventHandler<Microsoft.Maui.Controls.WebNavigatedEventArgs> handler)
            where T : Sharp.UI.IWebView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.WebView>(obj);
            mauiObject.Navigated += handler;
            return obj;
        }
        
        public static T OnNavigated<T>(this T obj, OnEventAction<T> action)
            where T : Sharp.UI.IWebView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.WebView>(obj);
            mauiObject.Navigated += (o, arg) => action(obj);
            return obj;
        }
        
        public static T OnNavigating<T>(this T obj, System.EventHandler<Microsoft.Maui.Controls.WebNavigatingEventArgs> handler)
            where T : Sharp.UI.IWebView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.WebView>(obj);
            mauiObject.Navigating += handler;
            return obj;
        }
        
        public static T OnNavigating<T>(this T obj, OnEventAction<T> action)
            where T : Sharp.UI.IWebView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.WebView>(obj);
            mauiObject.Navigating += (o, arg) => action(obj);
            return obj;
        }
        
    }
}


#pragma warning restore CS8669
