//
// <auto-generated>
//

#pragma warning disable CS8669


namespace Sharp.UI
{
    public static class BindableObjectGeneratedExtension
    {
        public static T BindingContext<T>(this T obj,
            object bindingContext)
            where T : Sharp.UI.IBindableObject
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.BindableObject>(obj);
            mauiObject.BindingContext = (object)bindingContext;
            return obj;
        }
        
        public static T BindingContext<T>(this T obj,
            System.Func<ValueBuilder<object>, ValueBuilder<object>> buildValue)
            where T : Sharp.UI.IBindableObject
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.BindableObject>(obj);
            var builder = buildValue(new ValueBuilder<object>());
            if (builder.ValueIsSet()) mauiObject.BindingContext = builder.GetValue();
            return obj;
        }
        
        public static T BindingContext<T>(this T obj,
            System.Func<BindingBuilder<object>, BindingBuilder<object>> buildBinding)
            where T : Sharp.UI.IBindableObject
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.BindableObject>(obj);
            var builder = buildBinding(new BindingBuilder<object>(mauiObject, Microsoft.Maui.Controls.BindableObject.BindingContextProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T OnPropertyChanged<T>(this T obj, System.ComponentModel.PropertyChangedEventHandler handler)
            where T : Sharp.UI.IBindableObject
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.BindableObject>(obj);
            mauiObject.PropertyChanged += handler;
            return obj;
        }
        
        public static T OnPropertyChanged<T>(this T obj, OnEventAction<T> action)
            where T : Sharp.UI.IBindableObject
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.BindableObject>(obj);
            mauiObject.PropertyChanged += (o, arg) => action(obj);
            return obj;
        }
        
        public static T OnPropertyChanging<T>(this T obj, Microsoft.Maui.Controls.PropertyChangingEventHandler handler)
            where T : Sharp.UI.IBindableObject
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.BindableObject>(obj);
            mauiObject.PropertyChanging += handler;
            return obj;
        }
        
        public static T OnPropertyChanging<T>(this T obj, OnEventAction<T> action)
            where T : Sharp.UI.IBindableObject
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.BindableObject>(obj);
            mauiObject.PropertyChanging += (o, arg) => action(obj);
            return obj;
        }
        
        public static T OnBindingContextChanged<T>(this T obj, System.EventHandler handler)
            where T : Sharp.UI.IBindableObject
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.BindableObject>(obj);
            mauiObject.BindingContextChanged += handler;
            return obj;
        }
        
        public static T OnBindingContextChanged<T>(this T obj, OnEventAction<T> action)
            where T : Sharp.UI.IBindableObject
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.BindableObject>(obj);
            mauiObject.BindingContextChanged += (o, arg) => action(obj);
            return obj;
        }
        
    }
}


#pragma warning restore CS8669
