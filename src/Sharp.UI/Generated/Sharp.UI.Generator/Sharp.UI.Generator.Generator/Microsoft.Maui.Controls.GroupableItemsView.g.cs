//
// <auto-generated>
//

#pragma warning disable CS8669


namespace Sharp.UI
{
    public static class GroupableItemsViewGeneratedExtension
    {
        public static T IsGrouped<T>(this T obj,
            bool isGrouped)
            where T : Sharp.UI.IGroupableItemsView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.GroupableItemsView>(obj);
            mauiObject.IsGrouped = (bool)isGrouped;
            return obj;
        }
        
        public static T IsGrouped<T>(this T obj,
            System.Func<ValueBuilder<bool>, ValueBuilder<bool>> buildValue)
            where T : Sharp.UI.IGroupableItemsView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.GroupableItemsView>(obj);
            var builder = buildValue(new ValueBuilder<bool>());
            if (builder.ValueIsSet()) mauiObject.IsGrouped = builder.GetValue();
            return obj;
        }
        
        public static T IsGrouped<T>(this T obj,
            System.Func<BindingBuilder<bool>, BindingBuilder<bool>> buildBinding)
            where T : Sharp.UI.IGroupableItemsView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.GroupableItemsView>(obj);
            var builder = buildBinding(new BindingBuilder<bool>(mauiObject, Microsoft.Maui.Controls.GroupableItemsView.IsGroupedProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T GroupHeaderTemplate<T>(this T obj,
            Microsoft.Maui.Controls.DataTemplate groupHeaderTemplate)
            where T : Sharp.UI.IGroupableItemsView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.GroupableItemsView>(obj);
            mauiObject.GroupHeaderTemplate = (Microsoft.Maui.Controls.DataTemplate)groupHeaderTemplate;
            return obj;
        }
        
        public static T GroupHeaderTemplate<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Controls.DataTemplate>, ValueBuilder<Microsoft.Maui.Controls.DataTemplate>> buildValue)
            where T : Sharp.UI.IGroupableItemsView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.GroupableItemsView>(obj);
            var builder = buildValue(new ValueBuilder<Microsoft.Maui.Controls.DataTemplate>());
            if (builder.ValueIsSet()) mauiObject.GroupHeaderTemplate = builder.GetValue();
            return obj;
        }
        
        public static T GroupHeaderTemplate<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Controls.DataTemplate>, BindingBuilder<Microsoft.Maui.Controls.DataTemplate>> buildBinding)
            where T : Sharp.UI.IGroupableItemsView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.GroupableItemsView>(obj);
            var builder = buildBinding(new BindingBuilder<Microsoft.Maui.Controls.DataTemplate>(mauiObject, Microsoft.Maui.Controls.GroupableItemsView.GroupHeaderTemplateProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T GroupHeaderTemplate<T>(this T obj, System.Func<object> loadTemplate) where T : Sharp.UI.IGroupableItemsView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.GroupableItemsView>(obj);
            mauiObject.GroupHeaderTemplate = new DataTemplate(loadTemplate);
            return obj;
        }
        
        public static T GroupFooterTemplate<T>(this T obj,
            Microsoft.Maui.Controls.DataTemplate groupFooterTemplate)
            where T : Sharp.UI.IGroupableItemsView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.GroupableItemsView>(obj);
            mauiObject.GroupFooterTemplate = (Microsoft.Maui.Controls.DataTemplate)groupFooterTemplate;
            return obj;
        }
        
        public static T GroupFooterTemplate<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Controls.DataTemplate>, ValueBuilder<Microsoft.Maui.Controls.DataTemplate>> buildValue)
            where T : Sharp.UI.IGroupableItemsView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.GroupableItemsView>(obj);
            var builder = buildValue(new ValueBuilder<Microsoft.Maui.Controls.DataTemplate>());
            if (builder.ValueIsSet()) mauiObject.GroupFooterTemplate = builder.GetValue();
            return obj;
        }
        
        public static T GroupFooterTemplate<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Controls.DataTemplate>, BindingBuilder<Microsoft.Maui.Controls.DataTemplate>> buildBinding)
            where T : Sharp.UI.IGroupableItemsView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.GroupableItemsView>(obj);
            var builder = buildBinding(new BindingBuilder<Microsoft.Maui.Controls.DataTemplate>(mauiObject, Microsoft.Maui.Controls.GroupableItemsView.GroupFooterTemplateProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T GroupFooterTemplate<T>(this T obj, System.Func<object> loadTemplate) where T : Sharp.UI.IGroupableItemsView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.GroupableItemsView>(obj);
            mauiObject.GroupFooterTemplate = new DataTemplate(loadTemplate);
            return obj;
        }
        
    }
}


#pragma warning restore CS8669
