//
// <auto-generated>
//

#pragma warning disable CS8669


namespace Sharp.UI
{
    public static class BoxViewGeneratedExtension
    {
        public static T Color<T>(this T obj,
            Microsoft.Maui.Graphics.Color color)
            where T : Sharp.UI.IBoxView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.BoxView>(obj);
            mauiObject.Color = (Microsoft.Maui.Graphics.Color)color;
            return obj;
        }
        
        public static T Color<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Graphics.Color>, ValueBuilder<Microsoft.Maui.Graphics.Color>> buildValue)
            where T : Sharp.UI.IBoxView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.BoxView>(obj);
            var builder = buildValue(new ValueBuilder<Microsoft.Maui.Graphics.Color>());
            if (builder.ValueIsSet()) mauiObject.Color = builder.GetValue();
            return obj;
        }
        
        public static T Color<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.Graphics.Color>, LazyValueBuilder<Microsoft.Maui.Graphics.Color>> buildValue)
            where T : Sharp.UI.IBoxView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.BoxView>(obj);
            var builder = buildValue(new LazyValueBuilder<Microsoft.Maui.Graphics.Color>());
            if (builder.ValueIsSet()) mauiObject.Color = builder.GetValue();
            return obj;
        }
        
        public static T Color<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Graphics.Color>, BindingBuilder<Microsoft.Maui.Graphics.Color>> buildBinding)
            where T : Sharp.UI.IBoxView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.BoxView>(obj);
            var builder = buildBinding(new BindingBuilder<Microsoft.Maui.Graphics.Color>(mauiObject, Microsoft.Maui.Controls.BoxView.ColorProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T CornerRadius<T>(this T obj,
            Microsoft.Maui.CornerRadius cornerRadius)
            where T : Sharp.UI.IBoxView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.BoxView>(obj);
            mauiObject.CornerRadius = (Microsoft.Maui.CornerRadius)cornerRadius;
            return obj;
        }
        
        public static T CornerRadius<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.CornerRadius>, ValueBuilder<Microsoft.Maui.CornerRadius>> buildValue)
            where T : Sharp.UI.IBoxView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.BoxView>(obj);
            var builder = buildValue(new ValueBuilder<Microsoft.Maui.CornerRadius>());
            if (builder.ValueIsSet()) mauiObject.CornerRadius = builder.GetValue();
            return obj;
        }
        
        public static T CornerRadius<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.CornerRadius>, LazyValueBuilder<Microsoft.Maui.CornerRadius>> buildValue)
            where T : Sharp.UI.IBoxView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.BoxView>(obj);
            var builder = buildValue(new LazyValueBuilder<Microsoft.Maui.CornerRadius>());
            if (builder.ValueIsSet()) mauiObject.CornerRadius = builder.GetValue();
            return obj;
        }
        
        public static T CornerRadius<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.CornerRadius>, BindingBuilder<Microsoft.Maui.CornerRadius>> buildBinding)
            where T : Sharp.UI.IBoxView
        {
            var mauiObject = MauiWrapper.Value<Microsoft.Maui.Controls.BoxView>(obj);
            var builder = buildBinding(new BindingBuilder<Microsoft.Maui.CornerRadius>(mauiObject, Microsoft.Maui.Controls.BoxView.CornerRadiusProperty));
            builder.BindProperty();
            return obj;
        }
        
    }
}


#pragma warning restore CS8669
