//
// <auto-generated> Sharp.UI.Generator.Extensions.SharpBuilder
//

#nullable enable
#pragma warning disable CS8601


namespace Sharp.UI
{
    using Sharp.UI;

    using Sharp.UI.Internal;

    public static partial class EntryExtension
    {
        public static T HorizontalTextAlignment<T>(this T obj,
            Microsoft.Maui.TextAlignment horizontalTextAlignment)
            where T : Microsoft.Maui.Controls.Entry
        {
            obj.SetValueOrSetter(Microsoft.Maui.Controls.Entry.HorizontalTextAlignmentProperty, horizontalTextAlignment);
            return obj;
        }
        
        public static T HorizontalTextAlignment<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.TextAlignment>, ValueBuilder<Microsoft.Maui.TextAlignment>> buidValue)
            where T : Microsoft.Maui.Controls.Entry
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.TextAlignment>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(Microsoft.Maui.Controls.Entry.HorizontalTextAlignmentProperty, builder.GetValue());
            return obj;
        }
        
        public static T HorizontalTextAlignment<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.TextAlignment>, BindingBuilder<Microsoft.Maui.TextAlignment>> buidBinding)
            where T : Microsoft.Maui.Controls.Entry
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.TextAlignment>(obj, Microsoft.Maui.Controls.Entry.HorizontalTextAlignmentProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T VerticalTextAlignment<T>(this T obj,
            Microsoft.Maui.TextAlignment verticalTextAlignment)
            where T : Microsoft.Maui.Controls.Entry
        {
            obj.SetValueOrSetter(Microsoft.Maui.Controls.Entry.VerticalTextAlignmentProperty, verticalTextAlignment);
            return obj;
        }
        
        public static T VerticalTextAlignment<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.TextAlignment>, ValueBuilder<Microsoft.Maui.TextAlignment>> buidValue)
            where T : Microsoft.Maui.Controls.Entry
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.TextAlignment>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(Microsoft.Maui.Controls.Entry.VerticalTextAlignmentProperty, builder.GetValue());
            return obj;
        }
        
        public static T VerticalTextAlignment<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.TextAlignment>, BindingBuilder<Microsoft.Maui.TextAlignment>> buidBinding)
            where T : Microsoft.Maui.Controls.Entry
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.TextAlignment>(obj, Microsoft.Maui.Controls.Entry.VerticalTextAlignmentProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T IsPassword<T>(this T obj,
            bool isPassword)
            where T : Microsoft.Maui.Controls.Entry
        {
            obj.SetValueOrSetter(Microsoft.Maui.Controls.Entry.IsPasswordProperty, isPassword);
            return obj;
        }
        
        public static T IsPassword<T>(this T obj,
            System.Func<ValueBuilder<bool>, ValueBuilder<bool>> buidValue)
            where T : Microsoft.Maui.Controls.Entry
        {
            var builder = buidValue(new ValueBuilder<bool>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(Microsoft.Maui.Controls.Entry.IsPasswordProperty, builder.GetValue());
            return obj;
        }
        
        public static T IsPassword<T>(this T obj,
            System.Func<BindingBuilder<bool>, BindingBuilder<bool>> buidBinding)
            where T : Microsoft.Maui.Controls.Entry
        {
            var builder = buidBinding(new BindingBuilder<bool>(obj, Microsoft.Maui.Controls.Entry.IsPasswordProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T FontAttributes<T>(this T obj,
            Microsoft.Maui.Controls.FontAttributes fontAttributes)
            where T : Microsoft.Maui.Controls.Entry
        {
            obj.SetValueOrSetter(Microsoft.Maui.Controls.Entry.FontAttributesProperty, fontAttributes);
            return obj;
        }
        
        public static T FontAttributes<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Controls.FontAttributes>, ValueBuilder<Microsoft.Maui.Controls.FontAttributes>> buidValue)
            where T : Microsoft.Maui.Controls.Entry
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Controls.FontAttributes>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(Microsoft.Maui.Controls.Entry.FontAttributesProperty, builder.GetValue());
            return obj;
        }
        
        public static T FontAttributes<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Controls.FontAttributes>, BindingBuilder<Microsoft.Maui.Controls.FontAttributes>> buidBinding)
            where T : Microsoft.Maui.Controls.Entry
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Controls.FontAttributes>(obj, Microsoft.Maui.Controls.Entry.FontAttributesProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T FontFamily<T>(this T obj,
            string fontFamily)
            where T : Microsoft.Maui.Controls.Entry
        {
            obj.SetValueOrSetter(Microsoft.Maui.Controls.Entry.FontFamilyProperty, fontFamily);
            return obj;
        }
        
        public static T FontFamily<T>(this T obj,
            System.Func<ValueBuilder<string>, ValueBuilder<string>> buidValue)
            where T : Microsoft.Maui.Controls.Entry
        {
            var builder = buidValue(new ValueBuilder<string>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(Microsoft.Maui.Controls.Entry.FontFamilyProperty, builder.GetValue());
            return obj;
        }
        
        public static T FontFamily<T>(this T obj,
            System.Func<BindingBuilder<string>, BindingBuilder<string>> buidBinding)
            where T : Microsoft.Maui.Controls.Entry
        {
            var builder = buidBinding(new BindingBuilder<string>(obj, Microsoft.Maui.Controls.Entry.FontFamilyProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T FontSize<T>(this T obj,
            double fontSize)
            where T : Microsoft.Maui.Controls.Entry
        {
            obj.SetValueOrSetter(Microsoft.Maui.Controls.Entry.FontSizeProperty, fontSize);
            return obj;
        }
        
        public static T FontSize<T>(this T obj,
            System.Func<ValueBuilder<double>, ValueBuilder<double>> buidValue)
            where T : Microsoft.Maui.Controls.Entry
        {
            var builder = buidValue(new ValueBuilder<double>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(Microsoft.Maui.Controls.Entry.FontSizeProperty, builder.GetValue());
            return obj;
        }
        
        public static T FontSize<T>(this T obj,
            System.Func<BindingBuilder<double>, BindingBuilder<double>> buidBinding)
            where T : Microsoft.Maui.Controls.Entry
        {
            var builder = buidBinding(new BindingBuilder<double>(obj, Microsoft.Maui.Controls.Entry.FontSizeProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T FontAutoScalingEnabled<T>(this T obj,
            bool fontAutoScalingEnabled)
            where T : Microsoft.Maui.Controls.Entry
        {
            obj.SetValueOrSetter(Microsoft.Maui.Controls.Entry.FontAutoScalingEnabledProperty, fontAutoScalingEnabled);
            return obj;
        }
        
        public static T FontAutoScalingEnabled<T>(this T obj,
            System.Func<ValueBuilder<bool>, ValueBuilder<bool>> buidValue)
            where T : Microsoft.Maui.Controls.Entry
        {
            var builder = buidValue(new ValueBuilder<bool>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(Microsoft.Maui.Controls.Entry.FontAutoScalingEnabledProperty, builder.GetValue());
            return obj;
        }
        
        public static T FontAutoScalingEnabled<T>(this T obj,
            System.Func<BindingBuilder<bool>, BindingBuilder<bool>> buidBinding)
            where T : Microsoft.Maui.Controls.Entry
        {
            var builder = buidBinding(new BindingBuilder<bool>(obj, Microsoft.Maui.Controls.Entry.FontAutoScalingEnabledProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T IsTextPredictionEnabled<T>(this T obj,
            bool isTextPredictionEnabled)
            where T : Microsoft.Maui.Controls.Entry
        {
            obj.SetValueOrSetter(Microsoft.Maui.Controls.Entry.IsTextPredictionEnabledProperty, isTextPredictionEnabled);
            return obj;
        }
        
        public static T IsTextPredictionEnabled<T>(this T obj,
            System.Func<ValueBuilder<bool>, ValueBuilder<bool>> buidValue)
            where T : Microsoft.Maui.Controls.Entry
        {
            var builder = buidValue(new ValueBuilder<bool>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(Microsoft.Maui.Controls.Entry.IsTextPredictionEnabledProperty, builder.GetValue());
            return obj;
        }
        
        public static T IsTextPredictionEnabled<T>(this T obj,
            System.Func<BindingBuilder<bool>, BindingBuilder<bool>> buidBinding)
            where T : Microsoft.Maui.Controls.Entry
        {
            var builder = buidBinding(new BindingBuilder<bool>(obj, Microsoft.Maui.Controls.Entry.IsTextPredictionEnabledProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T ReturnType<T>(this T obj,
            Microsoft.Maui.ReturnType returnType)
            where T : Microsoft.Maui.Controls.Entry
        {
            obj.SetValueOrSetter(Microsoft.Maui.Controls.Entry.ReturnTypeProperty, returnType);
            return obj;
        }
        
        public static T ReturnType<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.ReturnType>, ValueBuilder<Microsoft.Maui.ReturnType>> buidValue)
            where T : Microsoft.Maui.Controls.Entry
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.ReturnType>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(Microsoft.Maui.Controls.Entry.ReturnTypeProperty, builder.GetValue());
            return obj;
        }
        
        public static T ReturnType<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.ReturnType>, BindingBuilder<Microsoft.Maui.ReturnType>> buidBinding)
            where T : Microsoft.Maui.Controls.Entry
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.ReturnType>(obj, Microsoft.Maui.Controls.Entry.ReturnTypeProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T CursorPosition<T>(this T obj,
            int cursorPosition)
            where T : Microsoft.Maui.Controls.Entry
        {
            obj.SetValueOrSetter(Microsoft.Maui.Controls.Entry.CursorPositionProperty, cursorPosition);
            return obj;
        }
        
        public static T CursorPosition<T>(this T obj,
            System.Func<ValueBuilder<int>, ValueBuilder<int>> buidValue)
            where T : Microsoft.Maui.Controls.Entry
        {
            var builder = buidValue(new ValueBuilder<int>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(Microsoft.Maui.Controls.Entry.CursorPositionProperty, builder.GetValue());
            return obj;
        }
        
        public static T CursorPosition<T>(this T obj,
            System.Func<BindingBuilder<int>, BindingBuilder<int>> buidBinding)
            where T : Microsoft.Maui.Controls.Entry
        {
            var builder = buidBinding(new BindingBuilder<int>(obj, Microsoft.Maui.Controls.Entry.CursorPositionProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T SelectionLength<T>(this T obj,
            int selectionLength)
            where T : Microsoft.Maui.Controls.Entry
        {
            obj.SetValueOrSetter(Microsoft.Maui.Controls.Entry.SelectionLengthProperty, selectionLength);
            return obj;
        }
        
        public static T SelectionLength<T>(this T obj,
            System.Func<ValueBuilder<int>, ValueBuilder<int>> buidValue)
            where T : Microsoft.Maui.Controls.Entry
        {
            var builder = buidValue(new ValueBuilder<int>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(Microsoft.Maui.Controls.Entry.SelectionLengthProperty, builder.GetValue());
            return obj;
        }
        
        public static T SelectionLength<T>(this T obj,
            System.Func<BindingBuilder<int>, BindingBuilder<int>> buidBinding)
            where T : Microsoft.Maui.Controls.Entry
        {
            var builder = buidBinding(new BindingBuilder<int>(obj, Microsoft.Maui.Controls.Entry.SelectionLengthProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T ReturnCommand<T>(this T obj,
            System.Windows.Input.ICommand returnCommand)
            where T : Microsoft.Maui.Controls.Entry
        {
            obj.SetValueOrSetter(Microsoft.Maui.Controls.Entry.ReturnCommandProperty, returnCommand);
            return obj;
        }
        
        public static T ReturnCommand<T>(this T obj,
            System.Func<ValueBuilder<System.Windows.Input.ICommand>, ValueBuilder<System.Windows.Input.ICommand>> buidValue)
            where T : Microsoft.Maui.Controls.Entry
        {
            var builder = buidValue(new ValueBuilder<System.Windows.Input.ICommand>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(Microsoft.Maui.Controls.Entry.ReturnCommandProperty, builder.GetValue());
            return obj;
        }
        
        public static T ReturnCommand<T>(this T obj,
            System.Func<BindingBuilder<System.Windows.Input.ICommand>, BindingBuilder<System.Windows.Input.ICommand>> buidBinding)
            where T : Microsoft.Maui.Controls.Entry
        {
            var builder = buidBinding(new BindingBuilder<System.Windows.Input.ICommand>(obj, Microsoft.Maui.Controls.Entry.ReturnCommandProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T ReturnCommandParameter<T>(this T obj,
            object returnCommandParameter)
            where T : Microsoft.Maui.Controls.Entry
        {
            obj.SetValueOrSetter(Microsoft.Maui.Controls.Entry.ReturnCommandParameterProperty, returnCommandParameter);
            return obj;
        }
        
        public static T ReturnCommandParameter<T>(this T obj,
            System.Func<ValueBuilder<object>, ValueBuilder<object>> buidValue)
            where T : Microsoft.Maui.Controls.Entry
        {
            var builder = buidValue(new ValueBuilder<object>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(Microsoft.Maui.Controls.Entry.ReturnCommandParameterProperty, builder.GetValue());
            return obj;
        }
        
        public static T ReturnCommandParameter<T>(this T obj,
            System.Func<BindingBuilder<object>, BindingBuilder<object>> buidBinding)
            where T : Microsoft.Maui.Controls.Entry
        {
            var builder = buidBinding(new BindingBuilder<object>(obj, Microsoft.Maui.Controls.Entry.ReturnCommandParameterProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T ClearButtonVisibility<T>(this T obj,
            Microsoft.Maui.ClearButtonVisibility clearButtonVisibility)
            where T : Microsoft.Maui.Controls.Entry
        {
            obj.SetValueOrSetter(Microsoft.Maui.Controls.Entry.ClearButtonVisibilityProperty, clearButtonVisibility);
            return obj;
        }
        
        public static T ClearButtonVisibility<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.ClearButtonVisibility>, ValueBuilder<Microsoft.Maui.ClearButtonVisibility>> buidValue)
            where T : Microsoft.Maui.Controls.Entry
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.ClearButtonVisibility>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(Microsoft.Maui.Controls.Entry.ClearButtonVisibilityProperty, builder.GetValue());
            return obj;
        }
        
        public static T ClearButtonVisibility<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.ClearButtonVisibility>, BindingBuilder<Microsoft.Maui.ClearButtonVisibility>> buidBinding)
            where T : Microsoft.Maui.Controls.Entry
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.ClearButtonVisibility>(obj, Microsoft.Maui.Controls.Entry.ClearButtonVisibilityProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T OnCompleted<T>(this T obj, System.EventHandler handler)
            where T : Microsoft.Maui.Controls.Entry
        {
            obj.Completed += handler;
            return obj;
        }
        
        public static T OnCompleted<T>(this T obj, System.Action<T> action)
            where T : Microsoft.Maui.Controls.Entry
        {
            obj.Completed += (o, arg) => action(obj);
            return obj;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
