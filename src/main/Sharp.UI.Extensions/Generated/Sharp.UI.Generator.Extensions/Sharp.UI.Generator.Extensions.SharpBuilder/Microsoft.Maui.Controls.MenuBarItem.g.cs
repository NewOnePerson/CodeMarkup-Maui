//
// <auto-generated> Sharp.UI.Generator.Extensions.SharpBuilder
//

#nullable enable
#pragma warning disable CS8601


namespace Sharp.UI
{
    using Sharp.UI.Internal;
    
    public static partial class MenuBarItemExtension
    {
        public static T Priority<T>(this T self,
            int priority)
            where T : Microsoft.Maui.Controls.MenuBarItem
        {
            var setters = FluentStyling.Setters as IList<Setter>;
            if (setters != null) throw new ArgumentException("Fluent styling not available for property Priority");
            self.Priority = priority;
            return self;
        }
        
        public static T Priority<T>(this T self,
            System.Func<ValueBuilder<int>, ValueBuilder<int>> buildValue)
            where T : Microsoft.Maui.Controls.MenuBarItem
        {
            var setters = FluentStyling.Setters as IList<Setter>;
            if (setters != null) throw new ArgumentException("Fluent styling not available for property Priority");
            var builder = buildValue(new ValueBuilder<int>());
            if (builder.ValueIsSet()) self.Priority = builder.GetValue();
            return self;
        }
        
        public static T IsEnabled<T>(this T self,
            bool isEnabled)
            where T : Microsoft.Maui.Controls.MenuBarItem
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.MenuBarItem.IsEnabledProperty, isEnabled);
            return self;
        }
        
        public static T IsEnabled<T>(this T self,
            System.Func<ValueBuilder<bool>, ValueBuilder<bool>> buildValue)
            where T : Microsoft.Maui.Controls.MenuBarItem
        {
            var builder = buildValue(new ValueBuilder<bool>());
            if (builder.ValueIsSet()) self.SetValueOrAddSetter(Microsoft.Maui.Controls.MenuBarItem.IsEnabledProperty, builder.GetValue());
            return self;
        }
        
        public static T IsEnabled<T>(this T self,
            System.Func<BindingBuilder<bool>, BindingBuilder<bool>> buildBinding)
            where T : Microsoft.Maui.Controls.MenuBarItem
        {
            var builder = buildBinding(new BindingBuilder<bool>(self, Microsoft.Maui.Controls.MenuBarItem.IsEnabledProperty));
            builder.BindProperty();
            return self;
        }
        
        public static T Text<T>(this T self,
            string text)
            where T : Microsoft.Maui.Controls.MenuBarItem
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.MenuBarItem.TextProperty, text);
            return self;
        }
        
        public static T Text<T>(this T self,
            System.Func<ValueBuilder<string>, ValueBuilder<string>> buildValue)
            where T : Microsoft.Maui.Controls.MenuBarItem
        {
            var builder = buildValue(new ValueBuilder<string>());
            if (builder.ValueIsSet()) self.SetValueOrAddSetter(Microsoft.Maui.Controls.MenuBarItem.TextProperty, builder.GetValue());
            return self;
        }
        
        public static T Text<T>(this T self,
            System.Func<BindingBuilder<string>, BindingBuilder<string>> buildBinding)
            where T : Microsoft.Maui.Controls.MenuBarItem
        {
            var builder = buildBinding(new BindingBuilder<string>(self, Microsoft.Maui.Controls.MenuBarItem.TextProperty));
            builder.BindProperty();
            return self;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
