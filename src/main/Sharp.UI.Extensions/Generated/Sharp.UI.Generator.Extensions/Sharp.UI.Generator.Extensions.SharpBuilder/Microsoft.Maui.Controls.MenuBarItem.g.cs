//
// <auto-generated> Sharp.UI.Generator.Extensions.SharpBuilder
//

#nullable enable
#pragma warning disable CS8601


namespace Sharp.UI
{
    using Sharp.UI.Internal;
    
    public static partial class MenuBarItemExtension
    {
        public static T Priority<T>(this T self,
            int priority)
            where T : Microsoft.Maui.Controls.MenuBarItem
        {
            if (FluentStyling.Setters != null) throw new ArgumentException("Fluent styling not available for property Priority");
            self.Priority = priority;
            return self;
        }
        
        public static T IsEnabled<T>(this T self,
            bool isEnabled)
            where T : Microsoft.Maui.Controls.MenuBarItem
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.MenuBarItem.IsEnabledProperty, isEnabled);
            return self;
        }
        
        public static T IsEnabled<T>(this T self, Func<PropertyContext<bool>, IPropertyBuilder<bool>> configure)
            where T : Microsoft.Maui.Controls.MenuBarItem
        {
            var context = new PropertyContext<bool>(self, Microsoft.Maui.Controls.MenuBarItem.IsEnabledProperty);
            configure(context).Build();
            return self;
        }
        
        public static T Text<T>(this T self,
            string text)
            where T : Microsoft.Maui.Controls.MenuBarItem
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.MenuBarItem.TextProperty, text);
            return self;
        }
        
        public static T Text<T>(this T self, Func<PropertyContext<string>, IPropertyBuilder<string>> configure)
            where T : Microsoft.Maui.Controls.MenuBarItem
        {
            var context = new PropertyContext<string>(self, Microsoft.Maui.Controls.MenuBarItem.TextProperty);
            configure(context).Build();
            return self;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
