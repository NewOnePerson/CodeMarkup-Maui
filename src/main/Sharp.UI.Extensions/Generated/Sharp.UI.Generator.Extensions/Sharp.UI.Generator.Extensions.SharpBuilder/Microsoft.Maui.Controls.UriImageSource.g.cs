//
// <auto-generated> Sharp.UI.Generator.Extensions.SharpBuilder
//

#nullable enable
#pragma warning disable CS8601


namespace Sharp.UI
{
    using Sharp.UI.Internal;
    
    public static partial class UriImageSourceExtension
    {
        public static Microsoft.Maui.Controls.UriImageSource CacheValidity(this Microsoft.Maui.Controls.UriImageSource self,
            System.TimeSpan cacheValidity)
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.UriImageSource.CacheValidityProperty, cacheValidity);
            return self;
        }
        
        public static Microsoft.Maui.Controls.UriImageSource CacheValidity(this Microsoft.Maui.Controls.UriImageSource self,
            System.Func<ValueBuilder<System.TimeSpan>, ValueBuilder<System.TimeSpan>> buildValue)
        {
            var builder = buildValue(new ValueBuilder<System.TimeSpan>());
            if (builder.ValueIsSet()) self.SetValueOrAddSetter(Microsoft.Maui.Controls.UriImageSource.CacheValidityProperty, builder.GetValue());
            return self;
        }
        
        public static Microsoft.Maui.Controls.UriImageSource CacheValidity<TBuilder>(this Microsoft.Maui.Controls.UriImageSource self, System.Action<TBuilder> configure)
            where TBuilder : PropertyBuilder<System.TimeSpan>
        {
            var builder = TBuilder(self, Microsoft.Maui.Controls.UriImageSource.CacheValidityProperty);
            configure(builder);
            builder.Build();
            return self;
        }

        //public static Microsoft.Maui.Controls.UriImageSource CacheValidity(this Microsoft.Maui.Controls.UriImageSource self,
        //    System.Func<BindingBuilder<System.TimeSpan>, BindingBuilder<System.TimeSpan>> buildBinding)
        //{
        //    var builder = buildBinding(new BindingBuilder<System.TimeSpan>(self, Microsoft.Maui.Controls.UriImageSource.CacheValidityProperty));
        //    builder.Build();
        //    return self;
        //}
        
        public static Microsoft.Maui.Controls.UriImageSource CachingEnabled(this Microsoft.Maui.Controls.UriImageSource self,
            bool cachingEnabled)
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.UriImageSource.CachingEnabledProperty, cachingEnabled);
            return self;
        }
        
        public static Microsoft.Maui.Controls.UriImageSource CachingEnabled(this Microsoft.Maui.Controls.UriImageSource self,
            System.Func<ValueBuilder<bool>, ValueBuilder<bool>> buildValue)
        {
            var builder = buildValue(new ValueBuilder<bool>());
            if (builder.ValueIsSet()) self.SetValueOrAddSetter(Microsoft.Maui.Controls.UriImageSource.CachingEnabledProperty, builder.GetValue());
            return self;
        }
        
        public static Microsoft.Maui.Controls.UriImageSource CachingEnabled<TBuilder>(this Microsoft.Maui.Controls.UriImageSource self, System.Action<TBuilder> configure)
            where TBuilder : PropertyBuilder<bool>
        {
            var builder = TBuilder(self, Microsoft.Maui.Controls.UriImageSource.CachingEnabledProperty);
            configure(builder);
            builder.Build();
            return self;
        }

        //public static Microsoft.Maui.Controls.UriImageSource CachingEnabled(this Microsoft.Maui.Controls.UriImageSource self,
        //    System.Func<BindingBuilder<bool>, BindingBuilder<bool>> buildBinding)
        //{
        //    var builder = buildBinding(new BindingBuilder<bool>(self, Microsoft.Maui.Controls.UriImageSource.CachingEnabledProperty));
        //    builder.Build();
        //    return self;
        //}
        
        public static Microsoft.Maui.Controls.UriImageSource Uri(this Microsoft.Maui.Controls.UriImageSource self,
            System.Uri uri)
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.UriImageSource.UriProperty, uri);
            return self;
        }
        
        public static Microsoft.Maui.Controls.UriImageSource Uri(this Microsoft.Maui.Controls.UriImageSource self,
            System.Func<ValueBuilder<System.Uri>, ValueBuilder<System.Uri>> buildValue)
        {
            var builder = buildValue(new ValueBuilder<System.Uri>());
            if (builder.ValueIsSet()) self.SetValueOrAddSetter(Microsoft.Maui.Controls.UriImageSource.UriProperty, builder.GetValue());
            return self;
        }
        
        public static Microsoft.Maui.Controls.UriImageSource Uri<TBuilder>(this Microsoft.Maui.Controls.UriImageSource self, System.Action<TBuilder> configure)
            where TBuilder : PropertyBuilder<System.Uri>
        {
            var builder = TBuilder(self, Microsoft.Maui.Controls.UriImageSource.UriProperty);
            configure(builder);
            builder.Build();
            return self;
        }

        //public static Microsoft.Maui.Controls.UriImageSource Uri(this Microsoft.Maui.Controls.UriImageSource self,
        //    System.Func<BindingBuilder<System.Uri>, BindingBuilder<System.Uri>> buildBinding)
        //{
        //    var builder = buildBinding(new BindingBuilder<System.Uri>(self, Microsoft.Maui.Controls.UriImageSource.UriProperty));
        //    builder.Build();
        //    return self;
        //}
        
    }
}

#pragma warning restore CS8601
#nullable restore
