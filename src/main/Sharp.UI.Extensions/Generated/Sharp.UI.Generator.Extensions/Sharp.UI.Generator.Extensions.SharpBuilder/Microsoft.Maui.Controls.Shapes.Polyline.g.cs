//
// <auto-generated> Sharp.UI.Generator.Extensions.SharpBuilder
//

#nullable enable
#pragma warning disable CS8601


namespace Sharp.UI
{
    using Sharp.UI.Internal;
    
    public static partial class PolylineExtension
    {
        public static Microsoft.Maui.Controls.Shapes.Polyline Points(this Microsoft.Maui.Controls.Shapes.Polyline self,
            IList<Microsoft.Maui.Graphics.Point> points)
        {
            foreach (var item in points)
                self.Points.Add(item);
            return self;
        }

        public static Microsoft.Maui.Controls.Shapes.Polyline Points(this Microsoft.Maui.Controls.Shapes.Polyline self,
            params Microsoft.Maui.Graphics.Point[] points)
        {
            foreach (var item in points)
                self.Points.Add(item);
            return self;
        }
        
        public static Microsoft.Maui.Controls.Shapes.Polyline Points<TBuilder>(this Microsoft.Maui.Controls.Shapes.Polyline self, System.Action<TBuilder> configure)
            where TBuilder : PropertyBuilder<Microsoft.Maui.Controls.PointCollection>
        {
            var builder = TBuilder(self, Microsoft.Maui.Controls.Shapes.Polyline.PointsProperty);
            configure(builder);
            builder.Build();
            return self;
        }

        //public static Microsoft.Maui.Controls.Shapes.Polyline Points(this Microsoft.Maui.Controls.Shapes.Polyline self,
        //    System.Func<BindingBuilder<Microsoft.Maui.Controls.PointCollection>, BindingBuilder<Microsoft.Maui.Controls.PointCollection>> buildBinding)
        //{
        //    var builder = buildBinding(new BindingBuilder<Microsoft.Maui.Controls.PointCollection>(self, Microsoft.Maui.Controls.Shapes.Polyline.PointsProperty));
        //    builder.Build();
        //    return self;
        //}
        
        public static Microsoft.Maui.Controls.Shapes.Polyline FillRule(this Microsoft.Maui.Controls.Shapes.Polyline self,
            Microsoft.Maui.Controls.Shapes.FillRule fillRule)
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.Shapes.Polyline.FillRuleProperty, fillRule);
            return self;
        }
        
        public static Microsoft.Maui.Controls.Shapes.Polyline FillRule(this Microsoft.Maui.Controls.Shapes.Polyline self,
            System.Func<ValueBuilder<Microsoft.Maui.Controls.Shapes.FillRule>, ValueBuilder<Microsoft.Maui.Controls.Shapes.FillRule>> buildValue)
        {
            var builder = buildValue(new ValueBuilder<Microsoft.Maui.Controls.Shapes.FillRule>());
            if (builder.ValueIsSet()) self.SetValueOrAddSetter(Microsoft.Maui.Controls.Shapes.Polyline.FillRuleProperty, builder.GetValue());
            return self;
        }
        
        public static Microsoft.Maui.Controls.Shapes.Polyline FillRule<TBuilder>(this Microsoft.Maui.Controls.Shapes.Polyline self, System.Action<TBuilder> configure)
            where TBuilder : PropertyBuilder<Microsoft.Maui.Controls.Shapes.FillRule>
        {
            var builder = TBuilder(self, Microsoft.Maui.Controls.Shapes.Polyline.FillRuleProperty);
            configure(builder);
            builder.Build();
            return self;
        }

        //public static Microsoft.Maui.Controls.Shapes.Polyline FillRule(this Microsoft.Maui.Controls.Shapes.Polyline self,
        //    System.Func<BindingBuilder<Microsoft.Maui.Controls.Shapes.FillRule>, BindingBuilder<Microsoft.Maui.Controls.Shapes.FillRule>> buildBinding)
        //{
        //    var builder = buildBinding(new BindingBuilder<Microsoft.Maui.Controls.Shapes.FillRule>(self, Microsoft.Maui.Controls.Shapes.Polyline.FillRuleProperty));
        //    builder.Build();
        //    return self;
        //}
        
    }
}

#pragma warning restore CS8601
#nullable restore
