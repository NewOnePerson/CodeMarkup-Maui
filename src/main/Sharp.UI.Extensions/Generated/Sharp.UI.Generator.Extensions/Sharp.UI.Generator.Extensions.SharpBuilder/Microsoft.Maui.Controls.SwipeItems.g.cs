//
// <auto-generated> Sharp.UI.Generator.Extensions.SharpBuilder
//

#nullable enable
#pragma warning disable CS8601


namespace Sharp.UI
{
    using Sharp.UI.Internal;
    
    public static partial class SwipeItemsExtension
    {
        public static T Mode<T>(this T self,
            Microsoft.Maui.SwipeMode mode)
            where T : Microsoft.Maui.Controls.SwipeItems
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.SwipeItems.ModeProperty, mode);
            return self;
        }
        
        public static T Mode<T>(this T self,
            System.Func<ValueBuilder<Microsoft.Maui.SwipeMode>, ValueBuilder<Microsoft.Maui.SwipeMode>> buildValue)
            where T : Microsoft.Maui.Controls.SwipeItems
        {
            var builder = buildValue(new ValueBuilder<Microsoft.Maui.SwipeMode>());
            if (builder.ValueIsSet()) self.SetValueOrAddSetter(Microsoft.Maui.Controls.SwipeItems.ModeProperty, builder.GetValue());
            return self;
        }
        
        public static T Mode<T, TBuilder>(this T self,System.Action<TBuilder> configure)
            where T : Microsoft.Maui.Controls.SwipeItems
            where TBuilder : PropertyBuilder<Microsoft.Maui.SwipeMode>
        {
            var builder = TBuilder(self, Microsoft.Maui.Controls.SwipeItems.ModeProperty);
            configure(builder);
            builder.Build();
            return self;

        }

        //public static T Mode<T>(this T self,
        //    System.Func<BindingBuilder<Microsoft.Maui.SwipeMode>, BindingBuilder<Microsoft.Maui.SwipeMode>> buildBinding)
        //    where T : Microsoft.Maui.Controls.SwipeItems
        //{
        //    var builder = buildBinding(new BindingBuilder<Microsoft.Maui.SwipeMode>(self, Microsoft.Maui.Controls.SwipeItems.ModeProperty));
        //    builder.Build();
        //    return self;
        //}
        
        public static T SwipeBehaviorOnInvoked<T>(this T self,
            Microsoft.Maui.SwipeBehaviorOnInvoked swipeBehaviorOnInvoked)
            where T : Microsoft.Maui.Controls.SwipeItems
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.SwipeItems.SwipeBehaviorOnInvokedProperty, swipeBehaviorOnInvoked);
            return self;
        }
        
        public static T SwipeBehaviorOnInvoked<T>(this T self,
            System.Func<ValueBuilder<Microsoft.Maui.SwipeBehaviorOnInvoked>, ValueBuilder<Microsoft.Maui.SwipeBehaviorOnInvoked>> buildValue)
            where T : Microsoft.Maui.Controls.SwipeItems
        {
            var builder = buildValue(new ValueBuilder<Microsoft.Maui.SwipeBehaviorOnInvoked>());
            if (builder.ValueIsSet()) self.SetValueOrAddSetter(Microsoft.Maui.Controls.SwipeItems.SwipeBehaviorOnInvokedProperty, builder.GetValue());
            return self;
        }
        
        public static T SwipeBehaviorOnInvoked<T, TBuilder>(this T self,System.Action<TBuilder> configure)
            where T : Microsoft.Maui.Controls.SwipeItems
            where TBuilder : PropertyBuilder<Microsoft.Maui.SwipeBehaviorOnInvoked>
        {
            var builder = TBuilder(self, Microsoft.Maui.Controls.SwipeItems.SwipeBehaviorOnInvokedProperty);
            configure(builder);
            builder.Build();
            return self;

        }

        //public static T SwipeBehaviorOnInvoked<T>(this T self,
        //    System.Func<BindingBuilder<Microsoft.Maui.SwipeBehaviorOnInvoked>, BindingBuilder<Microsoft.Maui.SwipeBehaviorOnInvoked>> buildBinding)
        //    where T : Microsoft.Maui.Controls.SwipeItems
        //{
        //    var builder = buildBinding(new BindingBuilder<Microsoft.Maui.SwipeBehaviorOnInvoked>(self, Microsoft.Maui.Controls.SwipeItems.SwipeBehaviorOnInvokedProperty));
        //    builder.Build();
        //    return self;
        //}
        
        public static T OnCollectionChanged<T>(this T self, System.Collections.Specialized.NotifyCollectionChangedEventHandler handler)
            where T : Microsoft.Maui.Controls.SwipeItems
        {
            self.CollectionChanged += handler;
            return self;
        }
        
        public static T OnCollectionChanged<T>(this T self, System.Action<T> action)
            where T : Microsoft.Maui.Controls.SwipeItems
        {
            self.CollectionChanged += (o, arg) => action(self);
            return self;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
