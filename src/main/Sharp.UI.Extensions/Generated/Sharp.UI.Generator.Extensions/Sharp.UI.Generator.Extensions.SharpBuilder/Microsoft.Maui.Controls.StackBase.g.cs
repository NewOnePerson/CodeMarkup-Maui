//
// <auto-generated> Sharp.UI.Generator.Extensions.SharpBuilder
//

#nullable enable
#pragma warning disable CS8601


namespace Sharp.UI
{
    using Sharp.UI;
    using Sharp.UI.Internal;

    public static partial class StackBaseExtension
    {
        public static T Spacing<T>(this T obj,
            double spacing)
            where T : Microsoft.Maui.Controls.StackBase
        {
            obj.SetValueOrSetter(Microsoft.Maui.Controls.StackBase.SpacingProperty, spacing);
            return obj;
        }
        
        public static T Spacing<T>(this T obj,
            System.Func<ValueBuilder<double>, ValueBuilder<double>> buidValue)
            where T : Microsoft.Maui.Controls.StackBase
        {
            var builder = buidValue(new ValueBuilder<double>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(Microsoft.Maui.Controls.StackBase.SpacingProperty, builder.GetValue());
            return obj;
        }
        
        public static T Spacing<T>(this T obj,
            System.Func<BindingBuilder<double>, BindingBuilder<double>> buidBinding)
            where T : Microsoft.Maui.Controls.StackBase
        {
            var builder = buidBinding(new BindingBuilder<double>(obj, Microsoft.Maui.Controls.StackBase.SpacingProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static Task<bool> AnimateSpacingTo<T>(this T self, double value, uint length = 250, Easing? easing = null)
            where T : Microsoft.Maui.Controls.StackBase
        {
            double fromValue = self.Spacing;
            var transform = (double t) => Transformations.DoubleTransform(fromValue, value, t);
            var callback = (double actValue) => { self.Spacing = actValue; };
            return Transformations.AnimateAsync<double>(self, "AnimateSpacingTo", transform, callback, length, easing);
        }
        
        public static T Spacing<T>(this T obj,
            object spacing)
            where T : Microsoft.Maui.Controls.StackBase
        {
            obj.SetValueOrSetter(Microsoft.Maui.Controls.StackBase.SpacingProperty, spacing);
            return obj;
        }
        
        public static T Spacing<T>(this T obj,
            System.Func<ValueBuilder<object>, ValueBuilder<object>> buidValue)
            where T : Microsoft.Maui.Controls.StackBase
        {
            var builder = buidValue(new ValueBuilder<object>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(Microsoft.Maui.Controls.StackBase.SpacingProperty, builder.GetValue());
            return obj;
        }
        
        public static T Spacing<T>(this T obj,
            System.Func<BindingBuilder<object>, BindingBuilder<object>> buidBinding)
            where T : Microsoft.Maui.Controls.StackBase
        {
            var builder = buidBinding(new BindingBuilder<object>(obj, Microsoft.Maui.Controls.StackBase.SpacingProperty));
            builder.BindProperty();
            return obj;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
