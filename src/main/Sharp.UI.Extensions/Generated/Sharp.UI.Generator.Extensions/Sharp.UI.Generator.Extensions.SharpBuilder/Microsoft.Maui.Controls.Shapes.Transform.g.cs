//
// <auto-generated> Sharp.UI.Generator.Extensions.SharpBuilder
//

#nullable enable
#pragma warning disable CS8601


namespace Sharp.UI
{
    using Sharp.UI;
    using Sharp.UI.Internal;

    public static partial class TransformExtension
    {
        public static T Value<T>(this T obj,
            Microsoft.Maui.Controls.Shapes.Matrix value)
            where T : Microsoft.Maui.Controls.Shapes.Transform
        {
            obj.SetValueOrSetter(Microsoft.Maui.Controls.Shapes.Transform.ValueProperty, value);
            return obj;
        }
        
        public static T Value<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Controls.Shapes.Matrix>, ValueBuilder<Microsoft.Maui.Controls.Shapes.Matrix>> buidValue)
            where T : Microsoft.Maui.Controls.Shapes.Transform
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Controls.Shapes.Matrix>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(Microsoft.Maui.Controls.Shapes.Transform.ValueProperty, builder.GetValue());
            return obj;
        }
        
        public static T Value<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Controls.Shapes.Matrix>, BindingBuilder<Microsoft.Maui.Controls.Shapes.Matrix>> buidBinding)
            where T : Microsoft.Maui.Controls.Shapes.Transform
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Controls.Shapes.Matrix>(obj, Microsoft.Maui.Controls.Shapes.Transform.ValueProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T Value<T>(this T obj,
            object value)
            where T : Microsoft.Maui.Controls.Shapes.Transform
        {
            obj.SetValueOrSetter(Microsoft.Maui.Controls.Shapes.Transform.ValueProperty, value);
            return obj;
        }
        
        public static T Value<T>(this T obj,
            System.Func<ValueBuilder<object>, ValueBuilder<object>> buidValue)
            where T : Microsoft.Maui.Controls.Shapes.Transform
        {
            var builder = buidValue(new ValueBuilder<object>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(Microsoft.Maui.Controls.Shapes.Transform.ValueProperty, builder.GetValue());
            return obj;
        }
        
        public static T Value<T>(this T obj,
            System.Func<BindingBuilder<object>, BindingBuilder<object>> buidBinding)
            where T : Microsoft.Maui.Controls.Shapes.Transform
        {
            var builder = buidBinding(new BindingBuilder<object>(obj, Microsoft.Maui.Controls.Shapes.Transform.ValueProperty));
            builder.BindProperty();
            return obj;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
