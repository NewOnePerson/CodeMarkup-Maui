//
// <auto-generated> Sharp.UI.Generator.Extensions.SharpBuilder
//

#nullable enable
#pragma warning disable CS8601


namespace Sharp.UI
{
    using Sharp.UI;
    using Sharp.UI.Internal;

    public static partial class ViewCellExtension
    {
        public static T View<T>(this T self,
            Microsoft.Maui.Controls.View view)
            where T : Microsoft.Maui.Controls.ViewCell
        {
            var setters = FluentStyling.Setters as IList<Setter>;
            if (setters != null) throw new ArgumentException("Fluent styling not available for property View");
            self.View = view;
            return self;
        }
        
        public static T View<T>(this T self,
            System.Func<ValueBuilder<Microsoft.Maui.Controls.View>, ValueBuilder<Microsoft.Maui.Controls.View>> buildValue)
            where T : Microsoft.Maui.Controls.ViewCell
        {
            var setters = FluentStyling.Setters as IList<Setter>;
            if (setters != null) throw new ArgumentException("Fluent styling not available for property View");
            var builder = buildValue(new ValueBuilder<Microsoft.Maui.Controls.View>());
            if (builder.ValueIsSet()) self.View = builder.GetValue();
            return self;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
