//
// <auto-generated> Sharp.UI.Generator.Extensions.SharpBuilder
//

#nullable enable
#pragma warning disable CS8601


namespace Sharp.UI
{
    using Sharp.UI.Internal;
    
    public static partial class CompositeTransformExtension
    {
        public static Microsoft.Maui.Controls.Shapes.CompositeTransform CenterX(this Microsoft.Maui.Controls.Shapes.CompositeTransform self,
            double centerX)
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.Shapes.CompositeTransform.CenterXProperty, centerX);
            return self;
        }
        
        public static Microsoft.Maui.Controls.Shapes.CompositeTransform CenterX(this Microsoft.Maui.Controls.Shapes.CompositeTransform self, Func<PropertyContext<double>, IPropertyBuilder<double>> configure)
        {
            var context = new PropertyContext<double>(self, Microsoft.Maui.Controls.Shapes.CompositeTransform.CenterXProperty);
            configure(context).Build();
            return self;
        }
        
        public static Microsoft.Maui.Controls.Shapes.CompositeTransform CenterY(this Microsoft.Maui.Controls.Shapes.CompositeTransform self,
            double centerY)
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.Shapes.CompositeTransform.CenterYProperty, centerY);
            return self;
        }
        
        public static Microsoft.Maui.Controls.Shapes.CompositeTransform CenterY(this Microsoft.Maui.Controls.Shapes.CompositeTransform self, Func<PropertyContext<double>, IPropertyBuilder<double>> configure)
        {
            var context = new PropertyContext<double>(self, Microsoft.Maui.Controls.Shapes.CompositeTransform.CenterYProperty);
            configure(context).Build();
            return self;
        }
        
        public static Microsoft.Maui.Controls.Shapes.CompositeTransform ScaleX(this Microsoft.Maui.Controls.Shapes.CompositeTransform self,
            double scaleX)
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.Shapes.CompositeTransform.ScaleXProperty, scaleX);
            return self;
        }
        
        public static Microsoft.Maui.Controls.Shapes.CompositeTransform ScaleX(this Microsoft.Maui.Controls.Shapes.CompositeTransform self, Func<PropertyContext<double>, IPropertyBuilder<double>> configure)
        {
            var context = new PropertyContext<double>(self, Microsoft.Maui.Controls.Shapes.CompositeTransform.ScaleXProperty);
            configure(context).Build();
            return self;
        }
        
        public static Microsoft.Maui.Controls.Shapes.CompositeTransform ScaleY(this Microsoft.Maui.Controls.Shapes.CompositeTransform self,
            double scaleY)
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.Shapes.CompositeTransform.ScaleYProperty, scaleY);
            return self;
        }
        
        public static Microsoft.Maui.Controls.Shapes.CompositeTransform ScaleY(this Microsoft.Maui.Controls.Shapes.CompositeTransform self, Func<PropertyContext<double>, IPropertyBuilder<double>> configure)
        {
            var context = new PropertyContext<double>(self, Microsoft.Maui.Controls.Shapes.CompositeTransform.ScaleYProperty);
            configure(context).Build();
            return self;
        }
        
        public static Microsoft.Maui.Controls.Shapes.CompositeTransform SkewX(this Microsoft.Maui.Controls.Shapes.CompositeTransform self,
            double skewX)
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.Shapes.CompositeTransform.SkewXProperty, skewX);
            return self;
        }
        
        public static Microsoft.Maui.Controls.Shapes.CompositeTransform SkewX(this Microsoft.Maui.Controls.Shapes.CompositeTransform self, Func<PropertyContext<double>, IPropertyBuilder<double>> configure)
        {
            var context = new PropertyContext<double>(self, Microsoft.Maui.Controls.Shapes.CompositeTransform.SkewXProperty);
            configure(context).Build();
            return self;
        }
        
        public static Microsoft.Maui.Controls.Shapes.CompositeTransform SkewY(this Microsoft.Maui.Controls.Shapes.CompositeTransform self,
            double skewY)
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.Shapes.CompositeTransform.SkewYProperty, skewY);
            return self;
        }
        
        public static Microsoft.Maui.Controls.Shapes.CompositeTransform SkewY(this Microsoft.Maui.Controls.Shapes.CompositeTransform self, Func<PropertyContext<double>, IPropertyBuilder<double>> configure)
        {
            var context = new PropertyContext<double>(self, Microsoft.Maui.Controls.Shapes.CompositeTransform.SkewYProperty);
            configure(context).Build();
            return self;
        }
        
        public static Microsoft.Maui.Controls.Shapes.CompositeTransform Rotation(this Microsoft.Maui.Controls.Shapes.CompositeTransform self,
            double rotation)
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.Shapes.CompositeTransform.RotationProperty, rotation);
            return self;
        }
        
        public static Microsoft.Maui.Controls.Shapes.CompositeTransform Rotation(this Microsoft.Maui.Controls.Shapes.CompositeTransform self, Func<PropertyContext<double>, IPropertyBuilder<double>> configure)
        {
            var context = new PropertyContext<double>(self, Microsoft.Maui.Controls.Shapes.CompositeTransform.RotationProperty);
            configure(context).Build();
            return self;
        }
        
        public static Microsoft.Maui.Controls.Shapes.CompositeTransform TranslateX(this Microsoft.Maui.Controls.Shapes.CompositeTransform self,
            double translateX)
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.Shapes.CompositeTransform.TranslateXProperty, translateX);
            return self;
        }
        
        public static Microsoft.Maui.Controls.Shapes.CompositeTransform TranslateX(this Microsoft.Maui.Controls.Shapes.CompositeTransform self, Func<PropertyContext<double>, IPropertyBuilder<double>> configure)
        {
            var context = new PropertyContext<double>(self, Microsoft.Maui.Controls.Shapes.CompositeTransform.TranslateXProperty);
            configure(context).Build();
            return self;
        }
        
        public static Microsoft.Maui.Controls.Shapes.CompositeTransform TranslateY(this Microsoft.Maui.Controls.Shapes.CompositeTransform self,
            double translateY)
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.Shapes.CompositeTransform.TranslateYProperty, translateY);
            return self;
        }
        
        public static Microsoft.Maui.Controls.Shapes.CompositeTransform TranslateY(this Microsoft.Maui.Controls.Shapes.CompositeTransform self, Func<PropertyContext<double>, IPropertyBuilder<double>> configure)
        {
            var context = new PropertyContext<double>(self, Microsoft.Maui.Controls.Shapes.CompositeTransform.TranslateYProperty);
            configure(context).Build();
            return self;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
