//
// <auto-generated> Sharp.UI.Generator.Extensions.SharpBuilder
//

#nullable enable
#pragma warning disable CS8601


namespace Sharp.UI
{
    using Sharp.UI;
    using Sharp.UI.Internal;

    public static partial class OrientationStateTriggerExtension
    {
        public static Microsoft.Maui.Controls.OrientationStateTrigger Orientation(this Microsoft.Maui.Controls.OrientationStateTrigger self,
            Microsoft.Maui.Devices.DisplayOrientation orientation)
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.OrientationStateTrigger.OrientationProperty, orientation);
            return self;
        }
        
        public static Microsoft.Maui.Controls.OrientationStateTrigger Orientation(this Microsoft.Maui.Controls.OrientationStateTrigger self,
            System.Func<ValueBuilder<Microsoft.Maui.Devices.DisplayOrientation>, ValueBuilder<Microsoft.Maui.Devices.DisplayOrientation>> buildValue)
        {
            var builder = buildValue(new ValueBuilder<Microsoft.Maui.Devices.DisplayOrientation>());
            if (builder.ValueIsSet()) self.SetValueOrAddSetter(Microsoft.Maui.Controls.OrientationStateTrigger.OrientationProperty, builder.GetValue());
            return self;
        }
        
        public static Microsoft.Maui.Controls.OrientationStateTrigger Orientation(this Microsoft.Maui.Controls.OrientationStateTrigger self,
            System.Func<BindingBuilder<Microsoft.Maui.Devices.DisplayOrientation>, BindingBuilder<Microsoft.Maui.Devices.DisplayOrientation>> buildBinding)
        {
            var builder = buildBinding(new BindingBuilder<Microsoft.Maui.Devices.DisplayOrientation>(self, Microsoft.Maui.Controls.OrientationStateTrigger.OrientationProperty));
            builder.BindProperty();
            return self;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
