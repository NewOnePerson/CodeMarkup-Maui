//
// <auto-generated> Sharp.UI.Generator.Extensions.SharpBuilder
//

#nullable enable
#pragma warning disable CS8601


namespace Sharp.UI
{
    using Sharp.UI;
    using Sharp.UI.Internal;

    public static partial class TableViewExtension
    {
        public static T HasUnevenRows<T>(this T obj,
            bool hasUnevenRows)
            where T : Microsoft.Maui.Controls.TableView
        {
            obj.SetValueOrSetter(Microsoft.Maui.Controls.TableView.HasUnevenRowsProperty, hasUnevenRows);
            return obj;
        }
        
        public static T HasUnevenRows<T>(this T obj,
            System.Func<ValueBuilder<bool>, ValueBuilder<bool>> buidValue)
            where T : Microsoft.Maui.Controls.TableView
        {
            var builder = buidValue(new ValueBuilder<bool>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(Microsoft.Maui.Controls.TableView.HasUnevenRowsProperty, builder.GetValue());
            return obj;
        }
        
        public static T HasUnevenRows<T>(this T obj,
            System.Func<BindingBuilder<bool>, BindingBuilder<bool>> buidBinding)
            where T : Microsoft.Maui.Controls.TableView
        {
            var builder = buidBinding(new BindingBuilder<bool>(obj, Microsoft.Maui.Controls.TableView.HasUnevenRowsProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T Intent<T>(this T obj,
            Microsoft.Maui.Controls.TableIntent intent)
            where T : Microsoft.Maui.Controls.TableView
        {
            var setters = FluentStyling.Setters as IList<Setter>;
            if (setters != null) throw new ArgumentException("Fluent styling not available for property Intent");
            obj.Intent = intent;
            return obj;
        }
        
        public static T Intent<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Controls.TableIntent>, ValueBuilder<Microsoft.Maui.Controls.TableIntent>> buidValue)
            where T : Microsoft.Maui.Controls.TableView
        {
            var setters = FluentStyling.Setters as IList<Setter>;
            if (setters != null) throw new ArgumentException("Fluent styling not available for property Intent");
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Controls.TableIntent>());
            if (builder.ValueIsSet()) obj.Intent = builder.GetValue();
            return obj;
        }
        
        public static T Root<T>(this T obj,
            IList<Microsoft.Maui.Controls.TableSection> root)
            where T : Microsoft.Maui.Controls.TableView
        {
            foreach (var item in root)
                obj.Root.Add(item);
            return obj;
        }

        public static T Root<T>(this T obj,
            params Microsoft.Maui.Controls.TableSection[] root)
            where T : Microsoft.Maui.Controls.TableView
        {
            foreach (var item in root)
                obj.Root.Add(item);
            return obj;
        }
        
        public static T RowHeight<T>(this T obj,
            int rowHeight)
            where T : Microsoft.Maui.Controls.TableView
        {
            obj.SetValueOrSetter(Microsoft.Maui.Controls.TableView.RowHeightProperty, rowHeight);
            return obj;
        }
        
        public static T RowHeight<T>(this T obj,
            System.Func<ValueBuilder<int>, ValueBuilder<int>> buidValue)
            where T : Microsoft.Maui.Controls.TableView
        {
            var builder = buidValue(new ValueBuilder<int>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(Microsoft.Maui.Controls.TableView.RowHeightProperty, builder.GetValue());
            return obj;
        }
        
        public static T RowHeight<T>(this T obj,
            System.Func<BindingBuilder<int>, BindingBuilder<int>> buidBinding)
            where T : Microsoft.Maui.Controls.TableView
        {
            var builder = buidBinding(new BindingBuilder<int>(obj, Microsoft.Maui.Controls.TableView.RowHeightProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T Model<T>(this T obj,
            Microsoft.Maui.Controls.Internals.TableModel model)
            where T : Microsoft.Maui.Controls.TableView
        {
            var setters = FluentStyling.Setters as IList<Setter>;
            if (setters != null) throw new ArgumentException("Fluent styling not available for property Model");
            obj.Model = model;
            return obj;
        }
        
        public static T Model<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Controls.Internals.TableModel>, ValueBuilder<Microsoft.Maui.Controls.Internals.TableModel>> buidValue)
            where T : Microsoft.Maui.Controls.TableView
        {
            var setters = FluentStyling.Setters as IList<Setter>;
            if (setters != null) throw new ArgumentException("Fluent styling not available for property Model");
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Controls.Internals.TableModel>());
            if (builder.ValueIsSet()) obj.Model = builder.GetValue();
            return obj;
        }
        
        public static T OnModelChanged<T>(this T obj, System.EventHandler handler)
            where T : Microsoft.Maui.Controls.TableView
        {
            obj.ModelChanged += handler;
            return obj;
        }
        
        public static T OnModelChanged<T>(this T obj, System.Action<T> action)
            where T : Microsoft.Maui.Controls.TableView
        {
            obj.ModelChanged += (o, arg) => action(obj);
            return obj;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
