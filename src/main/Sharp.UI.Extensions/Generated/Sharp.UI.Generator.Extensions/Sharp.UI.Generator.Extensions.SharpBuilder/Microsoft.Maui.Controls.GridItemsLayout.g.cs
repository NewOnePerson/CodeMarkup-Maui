//
// <auto-generated> Sharp.UI.Generator.Extensions.SharpBuilder
//

#nullable enable
#pragma warning disable CS8601


namespace Sharp.UI
{
    using Sharp.UI;
    using Sharp.UI.Internal;

    public static partial class GridItemsLayoutExtension
    {
        public static T Span<T>(this T self,
            int span)
            where T : Microsoft.Maui.Controls.GridItemsLayout
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.GridItemsLayout.SpanProperty, span);
            return self;
        }
        
        public static T Span<T>(this T self,
            System.Func<ValueBuilder<int>, ValueBuilder<int>> buildValue)
            where T : Microsoft.Maui.Controls.GridItemsLayout
        {
            var builder = buildValue(new ValueBuilder<int>());
            if (builder.ValueIsSet()) self.SetValueOrAddSetter(Microsoft.Maui.Controls.GridItemsLayout.SpanProperty, builder.GetValue());
            return self;
        }
        
        public static T Span<T>(this T self,
            System.Func<BindingBuilder<int>, BindingBuilder<int>> buildBinding)
            where T : Microsoft.Maui.Controls.GridItemsLayout
        {
            var builder = buildBinding(new BindingBuilder<int>(self, Microsoft.Maui.Controls.GridItemsLayout.SpanProperty));
            builder.BindProperty();
            return self;
        }
        
        public static T VerticalItemSpacing<T>(this T self,
            double verticalItemSpacing)
            where T : Microsoft.Maui.Controls.GridItemsLayout
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.GridItemsLayout.VerticalItemSpacingProperty, verticalItemSpacing);
            return self;
        }
        
        public static T VerticalItemSpacing<T>(this T self,
            System.Func<ValueBuilder<double>, ValueBuilder<double>> buildValue)
            where T : Microsoft.Maui.Controls.GridItemsLayout
        {
            var builder = buildValue(new ValueBuilder<double>());
            if (builder.ValueIsSet()) self.SetValueOrAddSetter(Microsoft.Maui.Controls.GridItemsLayout.VerticalItemSpacingProperty, builder.GetValue());
            return self;
        }
        
        public static T VerticalItemSpacing<T>(this T self,
            System.Func<BindingBuilder<double>, BindingBuilder<double>> buildBinding)
            where T : Microsoft.Maui.Controls.GridItemsLayout
        {
            var builder = buildBinding(new BindingBuilder<double>(self, Microsoft.Maui.Controls.GridItemsLayout.VerticalItemSpacingProperty));
            builder.BindProperty();
            return self;
        }
        
        public static T HorizontalItemSpacing<T>(this T self,
            double horizontalItemSpacing)
            where T : Microsoft.Maui.Controls.GridItemsLayout
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.GridItemsLayout.HorizontalItemSpacingProperty, horizontalItemSpacing);
            return self;
        }
        
        public static T HorizontalItemSpacing<T>(this T self,
            System.Func<ValueBuilder<double>, ValueBuilder<double>> buildValue)
            where T : Microsoft.Maui.Controls.GridItemsLayout
        {
            var builder = buildValue(new ValueBuilder<double>());
            if (builder.ValueIsSet()) self.SetValueOrAddSetter(Microsoft.Maui.Controls.GridItemsLayout.HorizontalItemSpacingProperty, builder.GetValue());
            return self;
        }
        
        public static T HorizontalItemSpacing<T>(this T self,
            System.Func<BindingBuilder<double>, BindingBuilder<double>> buildBinding)
            where T : Microsoft.Maui.Controls.GridItemsLayout
        {
            var builder = buildBinding(new BindingBuilder<double>(self, Microsoft.Maui.Controls.GridItemsLayout.HorizontalItemSpacingProperty));
            builder.BindProperty();
            return self;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
