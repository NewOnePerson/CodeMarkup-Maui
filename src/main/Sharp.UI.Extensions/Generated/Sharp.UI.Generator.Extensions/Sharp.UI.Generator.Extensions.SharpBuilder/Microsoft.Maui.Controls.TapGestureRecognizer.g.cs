//
// <auto-generated> Sharp.UI.Generator.Extensions.SharpBuilder
//

#nullable enable
#pragma warning disable CS8601


namespace Sharp.UI
{
    using Sharp.UI;
    using Sharp.UI.Internal;

    public static partial class TapGestureRecognizerExtension
    {
        public static Microsoft.Maui.Controls.TapGestureRecognizer Command(this Microsoft.Maui.Controls.TapGestureRecognizer self,
            System.Windows.Input.ICommand? command)
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.TapGestureRecognizer.CommandProperty, command);
            return self;
        }
        
        public static Microsoft.Maui.Controls.TapGestureRecognizer Command(this Microsoft.Maui.Controls.TapGestureRecognizer self,
            System.Func<ValueBuilder<System.Windows.Input.ICommand?>, ValueBuilder<System.Windows.Input.ICommand?>> buildValue)
        {
            var builder = buildValue(new ValueBuilder<System.Windows.Input.ICommand?>());
            if (builder.ValueIsSet()) self.SetValueOrAddSetter(Microsoft.Maui.Controls.TapGestureRecognizer.CommandProperty, builder.GetValue());
            return self;
        }
        
        public static Microsoft.Maui.Controls.TapGestureRecognizer Command(this Microsoft.Maui.Controls.TapGestureRecognizer self,
            System.Func<BindingBuilder<System.Windows.Input.ICommand?>, BindingBuilder<System.Windows.Input.ICommand?>> buildBinding)
        {
            var builder = buildBinding(new BindingBuilder<System.Windows.Input.ICommand?>(self, Microsoft.Maui.Controls.TapGestureRecognizer.CommandProperty));
            builder.BindProperty();
            return self;
        }
        
        public static Microsoft.Maui.Controls.TapGestureRecognizer CommandParameter(this Microsoft.Maui.Controls.TapGestureRecognizer self,
            object? commandParameter)
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.TapGestureRecognizer.CommandParameterProperty, commandParameter);
            return self;
        }
        
        public static Microsoft.Maui.Controls.TapGestureRecognizer CommandParameter(this Microsoft.Maui.Controls.TapGestureRecognizer self,
            System.Func<ValueBuilder<object?>, ValueBuilder<object?>> buildValue)
        {
            var builder = buildValue(new ValueBuilder<object?>());
            if (builder.ValueIsSet()) self.SetValueOrAddSetter(Microsoft.Maui.Controls.TapGestureRecognizer.CommandParameterProperty, builder.GetValue());
            return self;
        }
        
        public static Microsoft.Maui.Controls.TapGestureRecognizer CommandParameter(this Microsoft.Maui.Controls.TapGestureRecognizer self,
            System.Func<BindingBuilder<object?>, BindingBuilder<object?>> buildBinding)
        {
            var builder = buildBinding(new BindingBuilder<object?>(self, Microsoft.Maui.Controls.TapGestureRecognizer.CommandParameterProperty));
            builder.BindProperty();
            return self;
        }
        
        public static Microsoft.Maui.Controls.TapGestureRecognizer NumberOfTapsRequired(this Microsoft.Maui.Controls.TapGestureRecognizer self,
            int numberOfTapsRequired)
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.TapGestureRecognizer.NumberOfTapsRequiredProperty, numberOfTapsRequired);
            return self;
        }
        
        public static Microsoft.Maui.Controls.TapGestureRecognizer NumberOfTapsRequired(this Microsoft.Maui.Controls.TapGestureRecognizer self,
            System.Func<ValueBuilder<int>, ValueBuilder<int>> buildValue)
        {
            var builder = buildValue(new ValueBuilder<int>());
            if (builder.ValueIsSet()) self.SetValueOrAddSetter(Microsoft.Maui.Controls.TapGestureRecognizer.NumberOfTapsRequiredProperty, builder.GetValue());
            return self;
        }
        
        public static Microsoft.Maui.Controls.TapGestureRecognizer NumberOfTapsRequired(this Microsoft.Maui.Controls.TapGestureRecognizer self,
            System.Func<BindingBuilder<int>, BindingBuilder<int>> buildBinding)
        {
            var builder = buildBinding(new BindingBuilder<int>(self, Microsoft.Maui.Controls.TapGestureRecognizer.NumberOfTapsRequiredProperty));
            builder.BindProperty();
            return self;
        }
        
        public static Microsoft.Maui.Controls.TapGestureRecognizer Buttons(this Microsoft.Maui.Controls.TapGestureRecognizer self,
            Microsoft.Maui.Controls.ButtonsMask buttons)
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.TapGestureRecognizer.ButtonsProperty, buttons);
            return self;
        }
        
        public static Microsoft.Maui.Controls.TapGestureRecognizer Buttons(this Microsoft.Maui.Controls.TapGestureRecognizer self,
            System.Func<ValueBuilder<Microsoft.Maui.Controls.ButtonsMask>, ValueBuilder<Microsoft.Maui.Controls.ButtonsMask>> buildValue)
        {
            var builder = buildValue(new ValueBuilder<Microsoft.Maui.Controls.ButtonsMask>());
            if (builder.ValueIsSet()) self.SetValueOrAddSetter(Microsoft.Maui.Controls.TapGestureRecognizer.ButtonsProperty, builder.GetValue());
            return self;
        }
        
        public static Microsoft.Maui.Controls.TapGestureRecognizer Buttons(this Microsoft.Maui.Controls.TapGestureRecognizer self,
            System.Func<BindingBuilder<Microsoft.Maui.Controls.ButtonsMask>, BindingBuilder<Microsoft.Maui.Controls.ButtonsMask>> buildBinding)
        {
            var builder = buildBinding(new BindingBuilder<Microsoft.Maui.Controls.ButtonsMask>(self, Microsoft.Maui.Controls.TapGestureRecognizer.ButtonsProperty));
            builder.BindProperty();
            return self;
        }
        
        public static Microsoft.Maui.Controls.TapGestureRecognizer OnTapped(this Microsoft.Maui.Controls.TapGestureRecognizer self, System.EventHandler<Microsoft.Maui.Controls.TappedEventArgs>? handler)
        {
            self.Tapped += handler;
            return self;
        }
        
        public static Microsoft.Maui.Controls.TapGestureRecognizer OnTapped(this Microsoft.Maui.Controls.TapGestureRecognizer self, System.Action<Microsoft.Maui.Controls.TapGestureRecognizer> action)
        {
            self.Tapped += (o, arg) => action(self);
            return self;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
