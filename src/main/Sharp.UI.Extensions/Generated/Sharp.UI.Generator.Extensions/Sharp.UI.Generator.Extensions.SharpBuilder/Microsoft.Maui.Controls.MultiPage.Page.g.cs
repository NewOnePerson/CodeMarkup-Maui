//
// <auto-generated> Sharp.UI.Generator.Extensions.SharpBuilder
//

#nullable enable
#pragma warning disable CS8601


namespace Sharp.UI
{
    using Sharp.UI;
    using Sharp.UI.Internal;

    public static partial class MultiPageOfPageExtension
    {
        public static T ItemsSource<T>(this T obj,
            System.Collections.IEnumerable itemsSource)
            where T : Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>
        {
            obj.SetValueOrSetter(Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>.ItemsSourceProperty, itemsSource);
            return obj;
        }
        
        public static T ItemsSource<T>(this T obj,
            System.Func<ValueBuilder<System.Collections.IEnumerable>, ValueBuilder<System.Collections.IEnumerable>> buidValue)
            where T : Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>
        {
            var builder = buidValue(new ValueBuilder<System.Collections.IEnumerable>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>.ItemsSourceProperty, builder.GetValue());
            return obj;
        }
        
        public static T ItemsSource<T>(this T obj,
            System.Func<BindingBuilder<System.Collections.IEnumerable>, BindingBuilder<System.Collections.IEnumerable>> buidBinding)
            where T : Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>
        {
            var builder = buidBinding(new BindingBuilder<System.Collections.IEnumerable>(obj, Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>.ItemsSourceProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T ItemTemplate<T>(this T obj,
            Microsoft.Maui.Controls.DataTemplate itemTemplate)
            where T : Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>
        {
            obj.SetValueOrSetter(Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>.ItemTemplateProperty, itemTemplate);
            return obj;
        }
        
        public static T ItemTemplate<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Controls.DataTemplate>, ValueBuilder<Microsoft.Maui.Controls.DataTemplate>> buidValue)
            where T : Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Controls.DataTemplate>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>.ItemTemplateProperty, builder.GetValue());
            return obj;
        }
        
        public static T ItemTemplate<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Controls.DataTemplate>, BindingBuilder<Microsoft.Maui.Controls.DataTemplate>> buidBinding)
            where T : Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Controls.DataTemplate>(obj, Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>.ItemTemplateProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T ItemTemplate<T>(this T obj, System.Func<object> loadTemplate)
            where T : Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>
        {
            obj.ItemTemplate = new DataTemplate(loadTemplate);
            return obj;
        }
        
        public static T SelectedItem<T>(this T obj,
            object selectedItem)
            where T : Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>
        {
            obj.SetValueOrSetter(Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>.SelectedItemProperty, selectedItem);
            return obj;
        }
        
        public static T SelectedItem<T>(this T obj,
            System.Func<ValueBuilder<object>, ValueBuilder<object>> buidValue)
            where T : Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>
        {
            var builder = buidValue(new ValueBuilder<object>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>.SelectedItemProperty, builder.GetValue());
            return obj;
        }
        
        public static T SelectedItem<T>(this T obj,
            System.Func<BindingBuilder<object>, BindingBuilder<object>> buidBinding)
            where T : Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>
        {
            var builder = buidBinding(new BindingBuilder<object>(obj, Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>.SelectedItemProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T CurrentPage<T>(this T obj,
            Microsoft.Maui.Controls.Page currentPage)
            where T : Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>
        {
            var setters = FluentStyling.Setters as IList<Setter>;
            if (setters != null) throw new ArgumentException("Fluent styling not available for property CurrentPage");
            obj.CurrentPage = currentPage;
            return obj;
        }
        
        public static T CurrentPage<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Controls.Page>, ValueBuilder<Microsoft.Maui.Controls.Page>> buidValue)
            where T : Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>
        {
            var setters = FluentStyling.Setters as IList<Setter>;
            if (setters != null) throw new ArgumentException("Fluent styling not available for property CurrentPage");
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Controls.Page>());
            if (builder.ValueIsSet()) obj.CurrentPage = builder.GetValue();
            return obj;
        }
        
        public static T Children<T>(this T obj,
            IList<Microsoft.Maui.Controls.Page> children)
            where T : Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>
        {
            foreach (var item in children)
                obj.Children.Add(item);
            return obj;
        }

        public static T Children<T>(this T obj,
            params Microsoft.Maui.Controls.Page[] children)
            where T : Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>
        {
            foreach (var item in children)
                obj.Children.Add(item);
            return obj;
        }
        
        public static T OnCurrentPageChanged<T>(this T obj, System.EventHandler handler)
            where T : Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>
        {
            obj.CurrentPageChanged += handler;
            return obj;
        }
        
        public static T OnCurrentPageChanged<T>(this T obj, System.Action<T> action)
            where T : Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>
        {
            obj.CurrentPageChanged += (o, arg) => action(obj);
            return obj;
        }
        
        public static T OnPagesChanged<T>(this T obj, System.Collections.Specialized.NotifyCollectionChangedEventHandler handler)
            where T : Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>
        {
            obj.PagesChanged += handler;
            return obj;
        }
        
        public static T OnPagesChanged<T>(this T obj, System.Action<T> action)
            where T : Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>
        {
            obj.PagesChanged += (o, arg) => action(obj);
            return obj;
        }
        
        public static T ItemsSource<T>(this T obj,
            object itemsSource)
            where T : Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>
        {
            obj.SetValueOrSetter(Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>.ItemsSourceProperty, itemsSource);
            return obj;
        }
        
        public static T ItemsSource<T>(this T obj,
            System.Func<ValueBuilder<object>, ValueBuilder<object>> buidValue)
            where T : Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>
        {
            var builder = buidValue(new ValueBuilder<object>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>.ItemsSourceProperty, builder.GetValue());
            return obj;
        }
        
        public static T ItemsSource<T>(this T obj,
            System.Func<BindingBuilder<object>, BindingBuilder<object>> buidBinding)
            where T : Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>
        {
            var builder = buidBinding(new BindingBuilder<object>(obj, Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>.ItemsSourceProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T ItemTemplate<T>(this T obj,
            object itemTemplate)
            where T : Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>
        {
            obj.SetValueOrSetter(Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>.ItemTemplateProperty, itemTemplate);
            return obj;
        }
        
        public static T ItemTemplate<T>(this T obj,
            System.Func<ValueBuilder<object>, ValueBuilder<object>> buidValue)
            where T : Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>
        {
            var builder = buidValue(new ValueBuilder<object>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>.ItemTemplateProperty, builder.GetValue());
            return obj;
        }
        
        public static T ItemTemplate<T>(this T obj,
            System.Func<BindingBuilder<object>, BindingBuilder<object>> buidBinding)
            where T : Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>
        {
            var builder = buidBinding(new BindingBuilder<object>(obj, Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>.ItemTemplateProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T SelectedItem<T>(this T obj,
            object selectedItem)
            where T : Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>
        {
            obj.SetValueOrSetter(Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>.SelectedItemProperty, selectedItem);
            return obj;
        }
        
        public static T SelectedItem<T>(this T obj,
            System.Func<ValueBuilder<object>, ValueBuilder<object>> buidValue)
            where T : Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>
        {
            var builder = buidValue(new ValueBuilder<object>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>.SelectedItemProperty, builder.GetValue());
            return obj;
        }
        
        public static T SelectedItem<T>(this T obj,
            System.Func<BindingBuilder<object>, BindingBuilder<object>> buidBinding)
            where T : Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>
        {
            var builder = buidBinding(new BindingBuilder<object>(obj, Microsoft.Maui.Controls.MultiPage<Microsoft.Maui.Controls.Page>.SelectedItemProperty));
            builder.BindProperty();
            return obj;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
