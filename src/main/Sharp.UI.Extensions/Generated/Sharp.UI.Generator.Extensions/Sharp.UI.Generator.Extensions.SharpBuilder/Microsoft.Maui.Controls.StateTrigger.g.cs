//
// <auto-generated> Sharp.UI.Generator.Extensions.SharpBuilder
//

#nullable enable
#pragma warning disable CS8601


namespace Sharp.UI
{
    using Sharp.UI;
    using Sharp.UI.Internal;

    public static partial class StateTriggerExtension
    {
        public static Microsoft.Maui.Controls.StateTrigger IsActive(this Microsoft.Maui.Controls.StateTrigger obj,
            bool isActive)
        {
            obj.SetValueOrSetter(Microsoft.Maui.Controls.StateTrigger.IsActiveProperty, isActive);
            return obj;
        }
        
        public static Microsoft.Maui.Controls.StateTrigger IsActive(this Microsoft.Maui.Controls.StateTrigger obj,
            System.Func<ValueBuilder<bool>, ValueBuilder<bool>> buidValue)
        {
            var builder = buidValue(new ValueBuilder<bool>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(Microsoft.Maui.Controls.StateTrigger.IsActiveProperty, builder.GetValue());
            return obj;
        }
        
        public static Microsoft.Maui.Controls.StateTrigger IsActive(this Microsoft.Maui.Controls.StateTrigger obj,
            System.Func<BindingBuilder<bool>, BindingBuilder<bool>> buidBinding)
        {
            var builder = buidBinding(new BindingBuilder<bool>(obj, Microsoft.Maui.Controls.StateTrigger.IsActiveProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static Microsoft.Maui.Controls.StateTrigger IsActive(this Microsoft.Maui.Controls.StateTrigger obj,
            object isActive)
        {
            obj.SetValueOrSetter(Microsoft.Maui.Controls.StateTrigger.IsActiveProperty, isActive);
            return obj;
        }
        
        public static Microsoft.Maui.Controls.StateTrigger IsActive(this Microsoft.Maui.Controls.StateTrigger obj,
            System.Func<ValueBuilder<object>, ValueBuilder<object>> buidValue)
        {
            var builder = buidValue(new ValueBuilder<object>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(Microsoft.Maui.Controls.StateTrigger.IsActiveProperty, builder.GetValue());
            return obj;
        }
        
        public static Microsoft.Maui.Controls.StateTrigger IsActive(this Microsoft.Maui.Controls.StateTrigger obj,
            System.Func<BindingBuilder<object>, BindingBuilder<object>> buidBinding)
        {
            var builder = buidBinding(new BindingBuilder<object>(obj, Microsoft.Maui.Controls.StateTrigger.IsActiveProperty));
            builder.BindProperty();
            return obj;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
