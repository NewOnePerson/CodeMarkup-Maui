//
// <auto-generated> Sharp.UI.Generator.Extensions.SharpBuilder
//

#nullable enable
#pragma warning disable CS8601


namespace Sharp.UI
{
    using Sharp.UI;
    using Sharp.UI.Internal;

    public static partial class PageExtension
    {
        public static T ShellPresentationMode<T>(this T self,
            Microsoft.Maui.Controls.PresentationMode shellPresentationMode)
            where T : Microsoft.Maui.Controls.Page
        {
            self.SetValueOrSetter(Microsoft.Maui.Controls.Shell.PresentationModeProperty, shellPresentationMode);
            return self;
        }
        
        public static T ShellPresentationMode<T>(this T self,
            System.Func<ValueBuilder<Microsoft.Maui.Controls.PresentationMode>, ValueBuilder<Microsoft.Maui.Controls.PresentationMode>> buildValue)
            where T : Microsoft.Maui.Controls.Page
        {
            var builder = buildValue(new ValueBuilder<Microsoft.Maui.Controls.PresentationMode>());
            if (builder.ValueIsSet()) self.SetValueOrSetter(Microsoft.Maui.Controls.Shell.PresentationModeProperty, builder.GetValue());
            return self;
        }
        
        public static T ShellPresentationMode<T>(this T self,
            System.Func<BindingBuilder<Microsoft.Maui.Controls.PresentationMode>, BindingBuilder<Microsoft.Maui.Controls.PresentationMode>> buildBinding)
            where T : Microsoft.Maui.Controls.Page
        {
            var builder = buildBinding(new BindingBuilder<Microsoft.Maui.Controls.PresentationMode>(self, Microsoft.Maui.Controls.Shell.PresentationModeProperty));
            builder.BindProperty();
            return self;
        }
        
        public static Microsoft.Maui.Controls.PresentationMode GetShellPresentationModeValue<T>(this T self)
            where T : Microsoft.Maui.Controls.Page
        {
            return (Microsoft.Maui.Controls.PresentationMode)self.GetValue(Microsoft.Maui.Controls.Shell.PresentationModeProperty);
        }
        
        public static T ShellBackgroundColor<T>(this T self,
            Microsoft.Maui.Graphics.Color shellBackgroundColor)
            where T : Microsoft.Maui.Controls.Page
        {
            self.SetValueOrSetter(Microsoft.Maui.Controls.Shell.BackgroundColorProperty, shellBackgroundColor);
            return self;
        }
        
        public static T ShellBackgroundColor<T>(this T self,
            System.Func<ValueBuilder<Microsoft.Maui.Graphics.Color>, ValueBuilder<Microsoft.Maui.Graphics.Color>> buildValue)
            where T : Microsoft.Maui.Controls.Page
        {
            var builder = buildValue(new ValueBuilder<Microsoft.Maui.Graphics.Color>());
            if (builder.ValueIsSet()) self.SetValueOrSetter(Microsoft.Maui.Controls.Shell.BackgroundColorProperty, builder.GetValue());
            return self;
        }
        
        public static T ShellBackgroundColor<T>(this T self,
            System.Func<BindingBuilder<Microsoft.Maui.Graphics.Color>, BindingBuilder<Microsoft.Maui.Graphics.Color>> buildBinding)
            where T : Microsoft.Maui.Controls.Page
        {
            var builder = buildBinding(new BindingBuilder<Microsoft.Maui.Graphics.Color>(self, Microsoft.Maui.Controls.Shell.BackgroundColorProperty));
            builder.BindProperty();
            return self;
        }
        
        public static Microsoft.Maui.Graphics.Color GetShellBackgroundColorValue<T>(this T self)
            where T : Microsoft.Maui.Controls.Page
        {
            return (Microsoft.Maui.Graphics.Color)self.GetValue(Microsoft.Maui.Controls.Shell.BackgroundColorProperty);
        }
        
        public static T ShellForegroundColor<T>(this T self,
            Microsoft.Maui.Graphics.Color shellForegroundColor)
            where T : Microsoft.Maui.Controls.Page
        {
            self.SetValueOrSetter(Microsoft.Maui.Controls.Shell.ForegroundColorProperty, shellForegroundColor);
            return self;
        }
        
        public static T ShellForegroundColor<T>(this T self,
            System.Func<ValueBuilder<Microsoft.Maui.Graphics.Color>, ValueBuilder<Microsoft.Maui.Graphics.Color>> buildValue)
            where T : Microsoft.Maui.Controls.Page
        {
            var builder = buildValue(new ValueBuilder<Microsoft.Maui.Graphics.Color>());
            if (builder.ValueIsSet()) self.SetValueOrSetter(Microsoft.Maui.Controls.Shell.ForegroundColorProperty, builder.GetValue());
            return self;
        }
        
        public static T ShellForegroundColor<T>(this T self,
            System.Func<BindingBuilder<Microsoft.Maui.Graphics.Color>, BindingBuilder<Microsoft.Maui.Graphics.Color>> buildBinding)
            where T : Microsoft.Maui.Controls.Page
        {
            var builder = buildBinding(new BindingBuilder<Microsoft.Maui.Graphics.Color>(self, Microsoft.Maui.Controls.Shell.ForegroundColorProperty));
            builder.BindProperty();
            return self;
        }
        
        public static Microsoft.Maui.Graphics.Color GetShellForegroundColorValue<T>(this T self)
            where T : Microsoft.Maui.Controls.Page
        {
            return (Microsoft.Maui.Graphics.Color)self.GetValue(Microsoft.Maui.Controls.Shell.ForegroundColorProperty);
        }
        
        public static T ShellTitleColor<T>(this T self,
            Microsoft.Maui.Graphics.Color shellTitleColor)
            where T : Microsoft.Maui.Controls.Page
        {
            self.SetValueOrSetter(Microsoft.Maui.Controls.Shell.TitleColorProperty, shellTitleColor);
            return self;
        }
        
        public static T ShellTitleColor<T>(this T self,
            System.Func<ValueBuilder<Microsoft.Maui.Graphics.Color>, ValueBuilder<Microsoft.Maui.Graphics.Color>> buildValue)
            where T : Microsoft.Maui.Controls.Page
        {
            var builder = buildValue(new ValueBuilder<Microsoft.Maui.Graphics.Color>());
            if (builder.ValueIsSet()) self.SetValueOrSetter(Microsoft.Maui.Controls.Shell.TitleColorProperty, builder.GetValue());
            return self;
        }
        
        public static T ShellTitleColor<T>(this T self,
            System.Func<BindingBuilder<Microsoft.Maui.Graphics.Color>, BindingBuilder<Microsoft.Maui.Graphics.Color>> buildBinding)
            where T : Microsoft.Maui.Controls.Page
        {
            var builder = buildBinding(new BindingBuilder<Microsoft.Maui.Graphics.Color>(self, Microsoft.Maui.Controls.Shell.TitleColorProperty));
            builder.BindProperty();
            return self;
        }
        
        public static Microsoft.Maui.Graphics.Color GetShellTitleColorValue<T>(this T self)
            where T : Microsoft.Maui.Controls.Page
        {
            return (Microsoft.Maui.Graphics.Color)self.GetValue(Microsoft.Maui.Controls.Shell.TitleColorProperty);
        }
        
        public static T ShellDisabledColor<T>(this T self,
            Microsoft.Maui.Graphics.Color shellDisabledColor)
            where T : Microsoft.Maui.Controls.Page
        {
            self.SetValueOrSetter(Microsoft.Maui.Controls.Shell.DisabledColorProperty, shellDisabledColor);
            return self;
        }
        
        public static T ShellDisabledColor<T>(this T self,
            System.Func<ValueBuilder<Microsoft.Maui.Graphics.Color>, ValueBuilder<Microsoft.Maui.Graphics.Color>> buildValue)
            where T : Microsoft.Maui.Controls.Page
        {
            var builder = buildValue(new ValueBuilder<Microsoft.Maui.Graphics.Color>());
            if (builder.ValueIsSet()) self.SetValueOrSetter(Microsoft.Maui.Controls.Shell.DisabledColorProperty, builder.GetValue());
            return self;
        }
        
        public static T ShellDisabledColor<T>(this T self,
            System.Func<BindingBuilder<Microsoft.Maui.Graphics.Color>, BindingBuilder<Microsoft.Maui.Graphics.Color>> buildBinding)
            where T : Microsoft.Maui.Controls.Page
        {
            var builder = buildBinding(new BindingBuilder<Microsoft.Maui.Graphics.Color>(self, Microsoft.Maui.Controls.Shell.DisabledColorProperty));
            builder.BindProperty();
            return self;
        }
        
        public static Microsoft.Maui.Graphics.Color GetShellDisabledColorValue<T>(this T self)
            where T : Microsoft.Maui.Controls.Page
        {
            return (Microsoft.Maui.Graphics.Color)self.GetValue(Microsoft.Maui.Controls.Shell.DisabledColorProperty);
        }
        
        public static T ShellUnselectedColor<T>(this T self,
            Microsoft.Maui.Graphics.Color shellUnselectedColor)
            where T : Microsoft.Maui.Controls.Page
        {
            self.SetValueOrSetter(Microsoft.Maui.Controls.Shell.UnselectedColorProperty, shellUnselectedColor);
            return self;
        }
        
        public static T ShellUnselectedColor<T>(this T self,
            System.Func<ValueBuilder<Microsoft.Maui.Graphics.Color>, ValueBuilder<Microsoft.Maui.Graphics.Color>> buildValue)
            where T : Microsoft.Maui.Controls.Page
        {
            var builder = buildValue(new ValueBuilder<Microsoft.Maui.Graphics.Color>());
            if (builder.ValueIsSet()) self.SetValueOrSetter(Microsoft.Maui.Controls.Shell.UnselectedColorProperty, builder.GetValue());
            return self;
        }
        
        public static T ShellUnselectedColor<T>(this T self,
            System.Func<BindingBuilder<Microsoft.Maui.Graphics.Color>, BindingBuilder<Microsoft.Maui.Graphics.Color>> buildBinding)
            where T : Microsoft.Maui.Controls.Page
        {
            var builder = buildBinding(new BindingBuilder<Microsoft.Maui.Graphics.Color>(self, Microsoft.Maui.Controls.Shell.UnselectedColorProperty));
            builder.BindProperty();
            return self;
        }
        
        public static Microsoft.Maui.Graphics.Color GetShellUnselectedColorValue<T>(this T self)
            where T : Microsoft.Maui.Controls.Page
        {
            return (Microsoft.Maui.Graphics.Color)self.GetValue(Microsoft.Maui.Controls.Shell.UnselectedColorProperty);
        }
        
        public static T ShellNavBarHasShadow<T>(this T self,
            bool shellNavBarHasShadow)
            where T : Microsoft.Maui.Controls.Page
        {
            self.SetValueOrSetter(Microsoft.Maui.Controls.Shell.NavBarHasShadowProperty, shellNavBarHasShadow);
            return self;
        }
        
        public static T ShellNavBarHasShadow<T>(this T self,
            System.Func<ValueBuilder<bool>, ValueBuilder<bool>> buildValue)
            where T : Microsoft.Maui.Controls.Page
        {
            var builder = buildValue(new ValueBuilder<bool>());
            if (builder.ValueIsSet()) self.SetValueOrSetter(Microsoft.Maui.Controls.Shell.NavBarHasShadowProperty, builder.GetValue());
            return self;
        }
        
        public static T ShellNavBarHasShadow<T>(this T self,
            System.Func<BindingBuilder<bool>, BindingBuilder<bool>> buildBinding)
            where T : Microsoft.Maui.Controls.Page
        {
            var builder = buildBinding(new BindingBuilder<bool>(self, Microsoft.Maui.Controls.Shell.NavBarHasShadowProperty));
            builder.BindProperty();
            return self;
        }
        
        public static bool GetShellNavBarHasShadowValue<T>(this T self)
            where T : Microsoft.Maui.Controls.Page
        {
            return (bool)self.GetValue(Microsoft.Maui.Controls.Shell.NavBarHasShadowProperty);
        }
        
        public static T ShellNavBarIsVisible<T>(this T self,
            bool shellNavBarIsVisible)
            where T : Microsoft.Maui.Controls.Page
        {
            self.SetValueOrSetter(Microsoft.Maui.Controls.Shell.NavBarIsVisibleProperty, shellNavBarIsVisible);
            return self;
        }
        
        public static T ShellNavBarIsVisible<T>(this T self,
            System.Func<ValueBuilder<bool>, ValueBuilder<bool>> buildValue)
            where T : Microsoft.Maui.Controls.Page
        {
            var builder = buildValue(new ValueBuilder<bool>());
            if (builder.ValueIsSet()) self.SetValueOrSetter(Microsoft.Maui.Controls.Shell.NavBarIsVisibleProperty, builder.GetValue());
            return self;
        }
        
        public static T ShellNavBarIsVisible<T>(this T self,
            System.Func<BindingBuilder<bool>, BindingBuilder<bool>> buildBinding)
            where T : Microsoft.Maui.Controls.Page
        {
            var builder = buildBinding(new BindingBuilder<bool>(self, Microsoft.Maui.Controls.Shell.NavBarIsVisibleProperty));
            builder.BindProperty();
            return self;
        }
        
        public static bool GetShellNavBarIsVisibleValue<T>(this T self)
            where T : Microsoft.Maui.Controls.Page
        {
            return (bool)self.GetValue(Microsoft.Maui.Controls.Shell.NavBarIsVisibleProperty);
        }
        
        public static T ShellTabBarBackgroundColor<T>(this T self,
            Microsoft.Maui.Graphics.Color shellTabBarBackgroundColor)
            where T : Microsoft.Maui.Controls.Page
        {
            self.SetValueOrSetter(Microsoft.Maui.Controls.Shell.TabBarBackgroundColorProperty, shellTabBarBackgroundColor);
            return self;
        }
        
        public static T ShellTabBarBackgroundColor<T>(this T self,
            System.Func<ValueBuilder<Microsoft.Maui.Graphics.Color>, ValueBuilder<Microsoft.Maui.Graphics.Color>> buildValue)
            where T : Microsoft.Maui.Controls.Page
        {
            var builder = buildValue(new ValueBuilder<Microsoft.Maui.Graphics.Color>());
            if (builder.ValueIsSet()) self.SetValueOrSetter(Microsoft.Maui.Controls.Shell.TabBarBackgroundColorProperty, builder.GetValue());
            return self;
        }
        
        public static T ShellTabBarBackgroundColor<T>(this T self,
            System.Func<BindingBuilder<Microsoft.Maui.Graphics.Color>, BindingBuilder<Microsoft.Maui.Graphics.Color>> buildBinding)
            where T : Microsoft.Maui.Controls.Page
        {
            var builder = buildBinding(new BindingBuilder<Microsoft.Maui.Graphics.Color>(self, Microsoft.Maui.Controls.Shell.TabBarBackgroundColorProperty));
            builder.BindProperty();
            return self;
        }
        
        public static Microsoft.Maui.Graphics.Color GetShellTabBarBackgroundColorValue<T>(this T self)
            where T : Microsoft.Maui.Controls.Page
        {
            return (Microsoft.Maui.Graphics.Color)self.GetValue(Microsoft.Maui.Controls.Shell.TabBarBackgroundColorProperty);
        }
        
        public static T ShellTabBarForegroundColor<T>(this T self,
            Microsoft.Maui.Graphics.Color shellTabBarForegroundColor)
            where T : Microsoft.Maui.Controls.Page
        {
            self.SetValueOrSetter(Microsoft.Maui.Controls.Shell.TabBarForegroundColorProperty, shellTabBarForegroundColor);
            return self;
        }
        
        public static T ShellTabBarForegroundColor<T>(this T self,
            System.Func<ValueBuilder<Microsoft.Maui.Graphics.Color>, ValueBuilder<Microsoft.Maui.Graphics.Color>> buildValue)
            where T : Microsoft.Maui.Controls.Page
        {
            var builder = buildValue(new ValueBuilder<Microsoft.Maui.Graphics.Color>());
            if (builder.ValueIsSet()) self.SetValueOrSetter(Microsoft.Maui.Controls.Shell.TabBarForegroundColorProperty, builder.GetValue());
            return self;
        }
        
        public static T ShellTabBarForegroundColor<T>(this T self,
            System.Func<BindingBuilder<Microsoft.Maui.Graphics.Color>, BindingBuilder<Microsoft.Maui.Graphics.Color>> buildBinding)
            where T : Microsoft.Maui.Controls.Page
        {
            var builder = buildBinding(new BindingBuilder<Microsoft.Maui.Graphics.Color>(self, Microsoft.Maui.Controls.Shell.TabBarForegroundColorProperty));
            builder.BindProperty();
            return self;
        }
        
        public static Microsoft.Maui.Graphics.Color GetShellTabBarForegroundColorValue<T>(this T self)
            where T : Microsoft.Maui.Controls.Page
        {
            return (Microsoft.Maui.Graphics.Color)self.GetValue(Microsoft.Maui.Controls.Shell.TabBarForegroundColorProperty);
        }
        
        public static T ShellTabBarTitleColor<T>(this T self,
            Microsoft.Maui.Graphics.Color shellTabBarTitleColor)
            where T : Microsoft.Maui.Controls.Page
        {
            self.SetValueOrSetter(Microsoft.Maui.Controls.Shell.TabBarTitleColorProperty, shellTabBarTitleColor);
            return self;
        }
        
        public static T ShellTabBarTitleColor<T>(this T self,
            System.Func<ValueBuilder<Microsoft.Maui.Graphics.Color>, ValueBuilder<Microsoft.Maui.Graphics.Color>> buildValue)
            where T : Microsoft.Maui.Controls.Page
        {
            var builder = buildValue(new ValueBuilder<Microsoft.Maui.Graphics.Color>());
            if (builder.ValueIsSet()) self.SetValueOrSetter(Microsoft.Maui.Controls.Shell.TabBarTitleColorProperty, builder.GetValue());
            return self;
        }
        
        public static T ShellTabBarTitleColor<T>(this T self,
            System.Func<BindingBuilder<Microsoft.Maui.Graphics.Color>, BindingBuilder<Microsoft.Maui.Graphics.Color>> buildBinding)
            where T : Microsoft.Maui.Controls.Page
        {
            var builder = buildBinding(new BindingBuilder<Microsoft.Maui.Graphics.Color>(self, Microsoft.Maui.Controls.Shell.TabBarTitleColorProperty));
            builder.BindProperty();
            return self;
        }
        
        public static Microsoft.Maui.Graphics.Color GetShellTabBarTitleColorValue<T>(this T self)
            where T : Microsoft.Maui.Controls.Page
        {
            return (Microsoft.Maui.Graphics.Color)self.GetValue(Microsoft.Maui.Controls.Shell.TabBarTitleColorProperty);
        }
        
        public static T ShellTabBarDisabledColor<T>(this T self,
            Microsoft.Maui.Graphics.Color shellTabBarDisabledColor)
            where T : Microsoft.Maui.Controls.Page
        {
            self.SetValueOrSetter(Microsoft.Maui.Controls.Shell.TabBarDisabledColorProperty, shellTabBarDisabledColor);
            return self;
        }
        
        public static T ShellTabBarDisabledColor<T>(this T self,
            System.Func<ValueBuilder<Microsoft.Maui.Graphics.Color>, ValueBuilder<Microsoft.Maui.Graphics.Color>> buildValue)
            where T : Microsoft.Maui.Controls.Page
        {
            var builder = buildValue(new ValueBuilder<Microsoft.Maui.Graphics.Color>());
            if (builder.ValueIsSet()) self.SetValueOrSetter(Microsoft.Maui.Controls.Shell.TabBarDisabledColorProperty, builder.GetValue());
            return self;
        }
        
        public static T ShellTabBarDisabledColor<T>(this T self,
            System.Func<BindingBuilder<Microsoft.Maui.Graphics.Color>, BindingBuilder<Microsoft.Maui.Graphics.Color>> buildBinding)
            where T : Microsoft.Maui.Controls.Page
        {
            var builder = buildBinding(new BindingBuilder<Microsoft.Maui.Graphics.Color>(self, Microsoft.Maui.Controls.Shell.TabBarDisabledColorProperty));
            builder.BindProperty();
            return self;
        }
        
        public static Microsoft.Maui.Graphics.Color GetShellTabBarDisabledColorValue<T>(this T self)
            where T : Microsoft.Maui.Controls.Page
        {
            return (Microsoft.Maui.Graphics.Color)self.GetValue(Microsoft.Maui.Controls.Shell.TabBarDisabledColorProperty);
        }
        
        public static T ShellTabBarUnselectedColor<T>(this T self,
            Microsoft.Maui.Graphics.Color shellTabBarUnselectedColor)
            where T : Microsoft.Maui.Controls.Page
        {
            self.SetValueOrSetter(Microsoft.Maui.Controls.Shell.TabBarUnselectedColorProperty, shellTabBarUnselectedColor);
            return self;
        }
        
        public static T ShellTabBarUnselectedColor<T>(this T self,
            System.Func<ValueBuilder<Microsoft.Maui.Graphics.Color>, ValueBuilder<Microsoft.Maui.Graphics.Color>> buildValue)
            where T : Microsoft.Maui.Controls.Page
        {
            var builder = buildValue(new ValueBuilder<Microsoft.Maui.Graphics.Color>());
            if (builder.ValueIsSet()) self.SetValueOrSetter(Microsoft.Maui.Controls.Shell.TabBarUnselectedColorProperty, builder.GetValue());
            return self;
        }
        
        public static T ShellTabBarUnselectedColor<T>(this T self,
            System.Func<BindingBuilder<Microsoft.Maui.Graphics.Color>, BindingBuilder<Microsoft.Maui.Graphics.Color>> buildBinding)
            where T : Microsoft.Maui.Controls.Page
        {
            var builder = buildBinding(new BindingBuilder<Microsoft.Maui.Graphics.Color>(self, Microsoft.Maui.Controls.Shell.TabBarUnselectedColorProperty));
            builder.BindProperty();
            return self;
        }
        
        public static Microsoft.Maui.Graphics.Color GetShellTabBarUnselectedColorValue<T>(this T self)
            where T : Microsoft.Maui.Controls.Page
        {
            return (Microsoft.Maui.Graphics.Color)self.GetValue(Microsoft.Maui.Controls.Shell.TabBarUnselectedColorProperty);
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
