//
// <auto-generated> Sharp.UI.Generator.Extensions.SharpBuilder
//

#nullable enable
#pragma warning disable CS8601


namespace Sharp.UI
{
    using Sharp.UI;

    using Sharp.UI.Internal;

    public static partial class EllipseGeometryExtension
    {
        public static T Center<T>(this T obj,
            Microsoft.Maui.Graphics.Point center)
            where T : Microsoft.Maui.Controls.Shapes.EllipseGeometry
        {
            obj.SetValueOrSetter(Microsoft.Maui.Controls.Shapes.EllipseGeometry.CenterProperty, center);
            return obj;
        }
        
        public static T Center<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Graphics.Point>, ValueBuilder<Microsoft.Maui.Graphics.Point>> buidValue)
            where T : Microsoft.Maui.Controls.Shapes.EllipseGeometry
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Graphics.Point>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(Microsoft.Maui.Controls.Shapes.EllipseGeometry.CenterProperty, builder.GetValue());
            return obj;
        }
        
        public static T Center<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Graphics.Point>, BindingBuilder<Microsoft.Maui.Graphics.Point>> buidBinding)
            where T : Microsoft.Maui.Controls.Shapes.EllipseGeometry
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Graphics.Point>(obj, Microsoft.Maui.Controls.Shapes.EllipseGeometry.CenterProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T RadiusX<T>(this T obj,
            double radiusX)
            where T : Microsoft.Maui.Controls.Shapes.EllipseGeometry
        {
            obj.SetValueOrSetter(Microsoft.Maui.Controls.Shapes.EllipseGeometry.RadiusXProperty, radiusX);
            return obj;
        }
        
        public static T RadiusX<T>(this T obj,
            System.Func<ValueBuilder<double>, ValueBuilder<double>> buidValue)
            where T : Microsoft.Maui.Controls.Shapes.EllipseGeometry
        {
            var builder = buidValue(new ValueBuilder<double>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(Microsoft.Maui.Controls.Shapes.EllipseGeometry.RadiusXProperty, builder.GetValue());
            return obj;
        }
        
        public static T RadiusX<T>(this T obj,
            System.Func<BindingBuilder<double>, BindingBuilder<double>> buidBinding)
            where T : Microsoft.Maui.Controls.Shapes.EllipseGeometry
        {
            var builder = buidBinding(new BindingBuilder<double>(obj, Microsoft.Maui.Controls.Shapes.EllipseGeometry.RadiusXProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T RadiusY<T>(this T obj,
            double radiusY)
            where T : Microsoft.Maui.Controls.Shapes.EllipseGeometry
        {
            obj.SetValueOrSetter(Microsoft.Maui.Controls.Shapes.EllipseGeometry.RadiusYProperty, radiusY);
            return obj;
        }
        
        public static T RadiusY<T>(this T obj,
            System.Func<ValueBuilder<double>, ValueBuilder<double>> buidValue)
            where T : Microsoft.Maui.Controls.Shapes.EllipseGeometry
        {
            var builder = buidValue(new ValueBuilder<double>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(Microsoft.Maui.Controls.Shapes.EllipseGeometry.RadiusYProperty, builder.GetValue());
            return obj;
        }
        
        public static T RadiusY<T>(this T obj,
            System.Func<BindingBuilder<double>, BindingBuilder<double>> buidBinding)
            where T : Microsoft.Maui.Controls.Shapes.EllipseGeometry
        {
            var builder = buidBinding(new BindingBuilder<double>(obj, Microsoft.Maui.Controls.Shapes.EllipseGeometry.RadiusYProperty));
            builder.BindProperty();
            return obj;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
