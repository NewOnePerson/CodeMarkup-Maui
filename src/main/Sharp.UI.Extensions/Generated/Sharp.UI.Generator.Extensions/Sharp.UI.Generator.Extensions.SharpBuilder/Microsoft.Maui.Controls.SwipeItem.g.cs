//
// <auto-generated> Sharp.UI.Generator.Extensions.SharpBuilder
//

#nullable enable
#pragma warning disable CS8601


namespace Sharp.UI
{
    using Sharp.UI.Internal;
    
    public static partial class SwipeItemExtension
    {
        public static T BackgroundColor<T>(this T self,
            Microsoft.Maui.Graphics.Color backgroundColor)
            where T : Microsoft.Maui.Controls.SwipeItem
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.SwipeItem.BackgroundColorProperty, backgroundColor);
            return self;
        }
        
        public static T BackgroundColor<T>(this T self,
            System.Func<ValueBuilder<Microsoft.Maui.Graphics.Color>, ValueBuilder<Microsoft.Maui.Graphics.Color>> buildValue)
            where T : Microsoft.Maui.Controls.SwipeItem
        {
            var builder = buildValue(new ValueBuilder<Microsoft.Maui.Graphics.Color>());
            if (builder.ValueIsSet()) self.SetValueOrAddSetter(Microsoft.Maui.Controls.SwipeItem.BackgroundColorProperty, builder.GetValue());
            return self;
        }
        
        public static T BackgroundColor<T>(this T self,
            System.Func<BindingBuilder<Microsoft.Maui.Graphics.Color>, BindingBuilder<Microsoft.Maui.Graphics.Color>> buildBinding)
            where T : Microsoft.Maui.Controls.SwipeItem
        {
            var builder = buildBinding(new BindingBuilder<Microsoft.Maui.Graphics.Color>(self, Microsoft.Maui.Controls.SwipeItem.BackgroundColorProperty));
            builder.BindProperty();
            return self;
        }
        
        public static T IsVisible<T>(this T self,
            bool isVisible)
            where T : Microsoft.Maui.Controls.SwipeItem
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.SwipeItem.IsVisibleProperty, isVisible);
            return self;
        }
        
        public static T IsVisible<T>(this T self,
            System.Func<ValueBuilder<bool>, ValueBuilder<bool>> buildValue)
            where T : Microsoft.Maui.Controls.SwipeItem
        {
            var builder = buildValue(new ValueBuilder<bool>());
            if (builder.ValueIsSet()) self.SetValueOrAddSetter(Microsoft.Maui.Controls.SwipeItem.IsVisibleProperty, builder.GetValue());
            return self;
        }
        
        public static T IsVisible<T>(this T self,
            System.Func<BindingBuilder<bool>, BindingBuilder<bool>> buildBinding)
            where T : Microsoft.Maui.Controls.SwipeItem
        {
            var builder = buildBinding(new BindingBuilder<bool>(self, Microsoft.Maui.Controls.SwipeItem.IsVisibleProperty));
            builder.BindProperty();
            return self;
        }
        
        public static T OnInvoked<T>(this T self, System.EventHandler<System.EventArgs> handler)
            where T : Microsoft.Maui.Controls.SwipeItem
        {
            self.Invoked += handler;
            return self;
        }
        
        public static T OnInvoked<T>(this T self, System.Action<T> action)
            where T : Microsoft.Maui.Controls.SwipeItem
        {
            self.Invoked += (o, arg) => action(self);
            return self;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
