//
// <auto-generated> Sharp.UI.Generator.Extensions.SharpBuilder
//

#nullable enable
#pragma warning disable CS8601


namespace Sharp.UI
{
    using Sharp.UI.Internal;
    
    public static partial class EventTriggerExtension
    {
        public static Microsoft.Maui.Controls.EventTrigger Actions(this Microsoft.Maui.Controls.EventTrigger self,
            IList<Microsoft.Maui.Controls.TriggerAction> actions)
        {
            foreach (var item in actions)
                self.Actions.Add(item);
            return self;
        }

        public static Microsoft.Maui.Controls.EventTrigger Actions(this Microsoft.Maui.Controls.EventTrigger self,
            params Microsoft.Maui.Controls.TriggerAction[] actions)
        {
            foreach (var item in actions)
                self.Actions.Add(item);
            return self;
        }
        
        public static Microsoft.Maui.Controls.EventTrigger Event(this Microsoft.Maui.Controls.EventTrigger self,
            string @event)
        {
            var setters = FluentStyling.Setters as IList<Setter>;
            if (setters != null) throw new ArgumentException("Fluent styling not available for property Event");
            self.Event = @event;
            return self;
        }
        
        public static Microsoft.Maui.Controls.EventTrigger Event(this Microsoft.Maui.Controls.EventTrigger self,
            System.Func<ValueBuilder<string>, ValueBuilder<string>> buildValue)
        {
            var setters = FluentStyling.Setters as IList<Setter>;
            if (setters != null) throw new ArgumentException("Fluent styling not available for property Event");
            var builder = buildValue(new ValueBuilder<string>());
            if (builder.ValueIsSet()) self.Event = builder.GetValue();
            return self;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
