//
// <auto-generated> Sharp.UI.Generator.Extensions.SharpBuilder
//

#nullable enable
#pragma warning disable CS8601


namespace Sharp.UI
{
    using Sharp.UI.Internal;
    
    public static partial class SwipeItemViewExtension
    {
        public static T Command<T>(this T self,
            System.Windows.Input.ICommand command)
            where T : Microsoft.Maui.Controls.SwipeItemView
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.SwipeItemView.CommandProperty, command);
            return self;
        }
        
        public static T Command<T>(this T self,
            System.Func<ValueBuilder<System.Windows.Input.ICommand>, ValueBuilder<System.Windows.Input.ICommand>> buildValue)
            where T : Microsoft.Maui.Controls.SwipeItemView
        {
            var builder = buildValue(new ValueBuilder<System.Windows.Input.ICommand>());
            if (builder.ValueIsSet()) self.SetValueOrAddSetter(Microsoft.Maui.Controls.SwipeItemView.CommandProperty, builder.GetValue());
            return self;
        }
        
        public static T Command<T>(this T self,
            System.Func<BindingBuilder<System.Windows.Input.ICommand>, BindingBuilder<System.Windows.Input.ICommand>> buildBinding)
            where T : Microsoft.Maui.Controls.SwipeItemView
        {
            var builder = buildBinding(new BindingBuilder<System.Windows.Input.ICommand>(self, Microsoft.Maui.Controls.SwipeItemView.CommandProperty));
            builder.BindProperty();
            return self;
        }
        
        public static T CommandParameter<T>(this T self,
            object commandParameter)
            where T : Microsoft.Maui.Controls.SwipeItemView
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.SwipeItemView.CommandParameterProperty, commandParameter);
            return self;
        }
        
        public static T CommandParameter<T>(this T self,
            System.Func<ValueBuilder<object>, ValueBuilder<object>> buildValue)
            where T : Microsoft.Maui.Controls.SwipeItemView
        {
            var builder = buildValue(new ValueBuilder<object>());
            if (builder.ValueIsSet()) self.SetValueOrAddSetter(Microsoft.Maui.Controls.SwipeItemView.CommandParameterProperty, builder.GetValue());
            return self;
        }
        
        public static T CommandParameter<T>(this T self,
            System.Func<BindingBuilder<object>, BindingBuilder<object>> buildBinding)
            where T : Microsoft.Maui.Controls.SwipeItemView
        {
            var builder = buildBinding(new BindingBuilder<object>(self, Microsoft.Maui.Controls.SwipeItemView.CommandParameterProperty));
            builder.BindProperty();
            return self;
        }
        
        public static T OnInvoked<T>(this T self, System.EventHandler<System.EventArgs> handler)
            where T : Microsoft.Maui.Controls.SwipeItemView
        {
            self.Invoked += handler;
            return self;
        }
        
        public static T OnInvoked<T>(this T self, System.Action<T> action)
            where T : Microsoft.Maui.Controls.SwipeItemView
        {
            self.Invoked += (o, arg) => action(self);
            return self;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
