//
// <auto-generated> CodeMarkup.Maui.Generator.Extensions.Builder
//

#nullable enable
#pragma warning disable CS8601


namespace CodeMarkup.Maui
{
    using CodeMarkup.Maui.Internal;
    
    public static partial class SpanExtension
    {
        public static T Style<T>(this T self,
            Microsoft.Maui.Controls.Style style)
            where T : Microsoft.Maui.Controls.Span
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.Span.StyleProperty, style);
            return self;
        }
        
        public static T Style<T>(this T self, Func<PropertyContext<Microsoft.Maui.Controls.Style>, IPropertyBuilder<Microsoft.Maui.Controls.Style>> configure)
            where T : Microsoft.Maui.Controls.Span
        {
            var context = new PropertyContext<Microsoft.Maui.Controls.Style>(self, Microsoft.Maui.Controls.Span.StyleProperty);
            configure(context).Build();
            return self;
        }
        
        public static T BackgroundColor<T>(this T self,
            Microsoft.Maui.Graphics.Color backgroundColor)
            where T : Microsoft.Maui.Controls.Span
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.Span.BackgroundColorProperty, backgroundColor);
            return self;
        }
        
        public static T BackgroundColor<T>(this T self, Func<PropertyContext<Microsoft.Maui.Graphics.Color>, IPropertyBuilder<Microsoft.Maui.Graphics.Color>> configure)
            where T : Microsoft.Maui.Controls.Span
        {
            var context = new PropertyContext<Microsoft.Maui.Graphics.Color>(self, Microsoft.Maui.Controls.Span.BackgroundColorProperty);
            configure(context).Build();
            return self;
        }
        
        public static T TextColor<T>(this T self,
            Microsoft.Maui.Graphics.Color textColor)
            where T : Microsoft.Maui.Controls.Span
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.Span.TextColorProperty, textColor);
            return self;
        }
        
        public static T TextColor<T>(this T self, Func<PropertyContext<Microsoft.Maui.Graphics.Color>, IPropertyBuilder<Microsoft.Maui.Graphics.Color>> configure)
            where T : Microsoft.Maui.Controls.Span
        {
            var context = new PropertyContext<Microsoft.Maui.Graphics.Color>(self, Microsoft.Maui.Controls.Span.TextColorProperty);
            configure(context).Build();
            return self;
        }
        
        public static T CharacterSpacing<T>(this T self,
            double characterSpacing)
            where T : Microsoft.Maui.Controls.Span
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.Span.CharacterSpacingProperty, characterSpacing);
            return self;
        }
        
        public static T CharacterSpacing<T>(this T self, Func<PropertyContext<double>, IPropertyBuilder<double>> configure)
            where T : Microsoft.Maui.Controls.Span
        {
            var context = new PropertyContext<double>(self, Microsoft.Maui.Controls.Span.CharacterSpacingProperty);
            configure(context).Build();
            return self;
        }
        
        public static T TextTransform<T>(this T self,
            Microsoft.Maui.TextTransform textTransform)
            where T : Microsoft.Maui.Controls.Span
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.Span.TextTransformProperty, textTransform);
            return self;
        }
        
        public static T TextTransform<T>(this T self, Func<PropertyContext<Microsoft.Maui.TextTransform>, IPropertyBuilder<Microsoft.Maui.TextTransform>> configure)
            where T : Microsoft.Maui.Controls.Span
        {
            var context = new PropertyContext<Microsoft.Maui.TextTransform>(self, Microsoft.Maui.Controls.Span.TextTransformProperty);
            configure(context).Build();
            return self;
        }
        
        public static T Text<T>(this T self,
            string text)
            where T : Microsoft.Maui.Controls.Span
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.Span.TextProperty, text);
            return self;
        }
        
        public static T Text<T>(this T self, Func<PropertyContext<string>, IPropertyBuilder<string>> configure)
            where T : Microsoft.Maui.Controls.Span
        {
            var context = new PropertyContext<string>(self, Microsoft.Maui.Controls.Span.TextProperty);
            configure(context).Build();
            return self;
        }
        
        public static T FontAttributes<T>(this T self,
            Microsoft.Maui.Controls.FontAttributes fontAttributes)
            where T : Microsoft.Maui.Controls.Span
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.Span.FontAttributesProperty, fontAttributes);
            return self;
        }
        
        public static T FontAttributes<T>(this T self, Func<PropertyContext<Microsoft.Maui.Controls.FontAttributes>, IPropertyBuilder<Microsoft.Maui.Controls.FontAttributes>> configure)
            where T : Microsoft.Maui.Controls.Span
        {
            var context = new PropertyContext<Microsoft.Maui.Controls.FontAttributes>(self, Microsoft.Maui.Controls.Span.FontAttributesProperty);
            configure(context).Build();
            return self;
        }
        
        public static T FontFamily<T>(this T self,
            string fontFamily)
            where T : Microsoft.Maui.Controls.Span
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.Span.FontFamilyProperty, fontFamily);
            return self;
        }
        
        public static T FontFamily<T>(this T self, Func<PropertyContext<string>, IPropertyBuilder<string>> configure)
            where T : Microsoft.Maui.Controls.Span
        {
            var context = new PropertyContext<string>(self, Microsoft.Maui.Controls.Span.FontFamilyProperty);
            configure(context).Build();
            return self;
        }
        
        public static T FontSize<T>(this T self,
            double fontSize)
            where T : Microsoft.Maui.Controls.Span
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.Span.FontSizeProperty, fontSize);
            return self;
        }
        
        public static T FontSize<T>(this T self, Func<PropertyContext<double>, IPropertyBuilder<double>> configure)
            where T : Microsoft.Maui.Controls.Span
        {
            var context = new PropertyContext<double>(self, Microsoft.Maui.Controls.Span.FontSizeProperty);
            configure(context).Build();
            return self;
        }
        
        public static T FontAutoScalingEnabled<T>(this T self,
            bool fontAutoScalingEnabled)
            where T : Microsoft.Maui.Controls.Span
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.Span.FontAutoScalingEnabledProperty, fontAutoScalingEnabled);
            return self;
        }
        
        public static T FontAutoScalingEnabled<T>(this T self, Func<PropertyContext<bool>, IPropertyBuilder<bool>> configure)
            where T : Microsoft.Maui.Controls.Span
        {
            var context = new PropertyContext<bool>(self, Microsoft.Maui.Controls.Span.FontAutoScalingEnabledProperty);
            configure(context).Build();
            return self;
        }
        
        public static T TextDecorations<T>(this T self,
            Microsoft.Maui.TextDecorations textDecorations)
            where T : Microsoft.Maui.Controls.Span
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.Span.TextDecorationsProperty, textDecorations);
            return self;
        }
        
        public static T TextDecorations<T>(this T self, Func<PropertyContext<Microsoft.Maui.TextDecorations>, IPropertyBuilder<Microsoft.Maui.TextDecorations>> configure)
            where T : Microsoft.Maui.Controls.Span
        {
            var context = new PropertyContext<Microsoft.Maui.TextDecorations>(self, Microsoft.Maui.Controls.Span.TextDecorationsProperty);
            configure(context).Build();
            return self;
        }
        
        public static T LineHeight<T>(this T self,
            double lineHeight)
            where T : Microsoft.Maui.Controls.Span
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.Span.LineHeightProperty, lineHeight);
            return self;
        }
        
        public static T LineHeight<T>(this T self, Func<PropertyContext<double>, IPropertyBuilder<double>> configure)
            where T : Microsoft.Maui.Controls.Span
        {
            var context = new PropertyContext<double>(self, Microsoft.Maui.Controls.Span.LineHeightProperty);
            configure(context).Build();
            return self;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
