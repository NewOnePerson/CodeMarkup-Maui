//
// <auto-generated> CodeMarkup.Maui.Generator.Extensions.Builder
//

#nullable enable
#pragma warning disable CS8601


namespace CodeMarkup.Maui
{
    using CodeMarkup.Maui.Internal;
    
    public static partial class SkewTransformExtension
    {
        public static T AngleX<T>(this T self,
            double angleX)
            where T : Microsoft.Maui.Controls.Shapes.SkewTransform
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.Shapes.SkewTransform.AngleXProperty, angleX);
            return self;
        }
        
        public static T AngleX<T>(this T self, Func<PropertyContext<double>, IPropertyBuilder<double>> configure)
            where T : Microsoft.Maui.Controls.Shapes.SkewTransform
        {
            var context = new PropertyContext<double>(self, Microsoft.Maui.Controls.Shapes.SkewTransform.AngleXProperty);
            configure(context).Build();
            return self;
        }
        
        public static T AngleY<T>(this T self,
            double angleY)
            where T : Microsoft.Maui.Controls.Shapes.SkewTransform
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.Shapes.SkewTransform.AngleYProperty, angleY);
            return self;
        }
        
        public static T AngleY<T>(this T self, Func<PropertyContext<double>, IPropertyBuilder<double>> configure)
            where T : Microsoft.Maui.Controls.Shapes.SkewTransform
        {
            var context = new PropertyContext<double>(self, Microsoft.Maui.Controls.Shapes.SkewTransform.AngleYProperty);
            configure(context).Build();
            return self;
        }
        
        public static T CenterX<T>(this T self,
            double centerX)
            where T : Microsoft.Maui.Controls.Shapes.SkewTransform
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.Shapes.SkewTransform.CenterXProperty, centerX);
            return self;
        }
        
        public static T CenterX<T>(this T self, Func<PropertyContext<double>, IPropertyBuilder<double>> configure)
            where T : Microsoft.Maui.Controls.Shapes.SkewTransform
        {
            var context = new PropertyContext<double>(self, Microsoft.Maui.Controls.Shapes.SkewTransform.CenterXProperty);
            configure(context).Build();
            return self;
        }
        
        public static T CenterY<T>(this T self,
            double centerY)
            where T : Microsoft.Maui.Controls.Shapes.SkewTransform
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.Shapes.SkewTransform.CenterYProperty, centerY);
            return self;
        }
        
        public static T CenterY<T>(this T self, Func<PropertyContext<double>, IPropertyBuilder<double>> configure)
            where T : Microsoft.Maui.Controls.Shapes.SkewTransform
        {
            var context = new PropertyContext<double>(self, Microsoft.Maui.Controls.Shapes.SkewTransform.CenterYProperty);
            configure(context).Build();
            return self;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
