//
// <auto-generated> CodeMarkup.Maui.Generator.Extensions.Builder
//

#nullable enable
#pragma warning disable CS8601


namespace CodeMarkup.Maui
{
    using CodeMarkup.Maui.Internal;
    
    public static partial class ArcSegmentExtension
    {
        public static T Point<T>(this T self,
            Microsoft.Maui.Graphics.Point point)
            where T : Microsoft.Maui.Controls.Shapes.ArcSegment
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.Shapes.ArcSegment.PointProperty, point);
            return self;
        }
        
        public static T Point<T>(this T self, Func<PropertyContext<Microsoft.Maui.Graphics.Point>, IPropertyBuilder<Microsoft.Maui.Graphics.Point>> configure)
            where T : Microsoft.Maui.Controls.Shapes.ArcSegment
        {
            var context = new PropertyContext<Microsoft.Maui.Graphics.Point>(self, Microsoft.Maui.Controls.Shapes.ArcSegment.PointProperty);
            configure(context).Build();
            return self;
        }
        
        public static T Size<T>(this T self,
            Microsoft.Maui.Graphics.Size size)
            where T : Microsoft.Maui.Controls.Shapes.ArcSegment
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.Shapes.ArcSegment.SizeProperty, size);
            return self;
        }
        
        public static T Size<T>(this T self, Func<PropertyContext<Microsoft.Maui.Graphics.Size>, IPropertyBuilder<Microsoft.Maui.Graphics.Size>> configure)
            where T : Microsoft.Maui.Controls.Shapes.ArcSegment
        {
            var context = new PropertyContext<Microsoft.Maui.Graphics.Size>(self, Microsoft.Maui.Controls.Shapes.ArcSegment.SizeProperty);
            configure(context).Build();
            return self;
        }
        
        public static T RotationAngle<T>(this T self,
            double rotationAngle)
            where T : Microsoft.Maui.Controls.Shapes.ArcSegment
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.Shapes.ArcSegment.RotationAngleProperty, rotationAngle);
            return self;
        }
        
        public static T RotationAngle<T>(this T self, Func<PropertyContext<double>, IPropertyBuilder<double>> configure)
            where T : Microsoft.Maui.Controls.Shapes.ArcSegment
        {
            var context = new PropertyContext<double>(self, Microsoft.Maui.Controls.Shapes.ArcSegment.RotationAngleProperty);
            configure(context).Build();
            return self;
        }
        
        public static T SweepDirection<T>(this T self,
            Microsoft.Maui.Controls.SweepDirection sweepDirection)
            where T : Microsoft.Maui.Controls.Shapes.ArcSegment
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.Shapes.ArcSegment.SweepDirectionProperty, sweepDirection);
            return self;
        }
        
        public static T SweepDirection<T>(this T self, Func<PropertyContext<Microsoft.Maui.Controls.SweepDirection>, IPropertyBuilder<Microsoft.Maui.Controls.SweepDirection>> configure)
            where T : Microsoft.Maui.Controls.Shapes.ArcSegment
        {
            var context = new PropertyContext<Microsoft.Maui.Controls.SweepDirection>(self, Microsoft.Maui.Controls.Shapes.ArcSegment.SweepDirectionProperty);
            configure(context).Build();
            return self;
        }
        
        public static T IsLargeArc<T>(this T self,
            bool isLargeArc)
            where T : Microsoft.Maui.Controls.Shapes.ArcSegment
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.Shapes.ArcSegment.IsLargeArcProperty, isLargeArc);
            return self;
        }
        
        public static T IsLargeArc<T>(this T self, Func<PropertyContext<bool>, IPropertyBuilder<bool>> configure)
            where T : Microsoft.Maui.Controls.Shapes.ArcSegment
        {
            var context = new PropertyContext<bool>(self, Microsoft.Maui.Controls.Shapes.ArcSegment.IsLargeArcProperty);
            configure(context).Build();
            return self;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
