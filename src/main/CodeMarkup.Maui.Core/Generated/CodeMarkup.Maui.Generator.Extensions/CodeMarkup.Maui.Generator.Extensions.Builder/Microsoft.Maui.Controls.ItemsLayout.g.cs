//
// <auto-generated> CodeMarkup.Maui.Generator.Extensions.Builder
//

#nullable enable
#pragma warning disable CS8601


namespace CodeMarkup.Maui
{
    using CodeMarkup.Maui.Internal;
    
    public static partial class ItemsLayoutExtension
    {
        public static T SnapPointsAlignment<T>(this T self,
            Microsoft.Maui.Controls.SnapPointsAlignment snapPointsAlignment)
            where T : Microsoft.Maui.Controls.ItemsLayout
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.ItemsLayout.SnapPointsAlignmentProperty, snapPointsAlignment);
            return self;
        }
        
        public static T SnapPointsAlignment<T>(this T self, Func<PropertyContext<Microsoft.Maui.Controls.SnapPointsAlignment>, IPropertyBuilder<Microsoft.Maui.Controls.SnapPointsAlignment>> configure)
            where T : Microsoft.Maui.Controls.ItemsLayout
        {
            var context = new PropertyContext<Microsoft.Maui.Controls.SnapPointsAlignment>(self, Microsoft.Maui.Controls.ItemsLayout.SnapPointsAlignmentProperty);
            configure(context).Build();
            return self;
        }
        
        public static T SnapPointsType<T>(this T self,
            Microsoft.Maui.Controls.SnapPointsType snapPointsType)
            where T : Microsoft.Maui.Controls.ItemsLayout
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.ItemsLayout.SnapPointsTypeProperty, snapPointsType);
            return self;
        }
        
        public static T SnapPointsType<T>(this T self, Func<PropertyContext<Microsoft.Maui.Controls.SnapPointsType>, IPropertyBuilder<Microsoft.Maui.Controls.SnapPointsType>> configure)
            where T : Microsoft.Maui.Controls.ItemsLayout
        {
            var context = new PropertyContext<Microsoft.Maui.Controls.SnapPointsType>(self, Microsoft.Maui.Controls.ItemsLayout.SnapPointsTypeProperty);
            configure(context).Build();
            return self;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
