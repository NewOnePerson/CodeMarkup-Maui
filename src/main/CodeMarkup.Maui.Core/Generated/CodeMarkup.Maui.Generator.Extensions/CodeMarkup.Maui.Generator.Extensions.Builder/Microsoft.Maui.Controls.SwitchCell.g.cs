//
// <auto-generated> CodeMarkup.Maui.Generator.Extensions.Builder
//

#nullable enable
#pragma warning disable CS8601


namespace CodeMarkup.Maui
{
    using CodeMarkup.Maui.Internal;
    
    public static partial class SwitchCellExtension
    {
        public static T OnColor<T>(this T self,
            Microsoft.Maui.Graphics.Color onColor)
            where T : Microsoft.Maui.Controls.SwitchCell
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.SwitchCell.OnColorProperty, onColor);
            return self;
        }
        
        public static T OnColor<T>(this T self, Func<PropertyContext<Microsoft.Maui.Graphics.Color>, IPropertyBuilder<Microsoft.Maui.Graphics.Color>> configure)
            where T : Microsoft.Maui.Controls.SwitchCell
        {
            var context = new PropertyContext<Microsoft.Maui.Graphics.Color>(self, Microsoft.Maui.Controls.SwitchCell.OnColorProperty);
            configure(context).Build();
            return self;
        }
        
        public static T On<T>(this T self,
            bool on)
            where T : Microsoft.Maui.Controls.SwitchCell
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.SwitchCell.OnProperty, on);
            return self;
        }
        
        public static T On<T>(this T self, Func<PropertyContext<bool>, IPropertyBuilder<bool>> configure)
            where T : Microsoft.Maui.Controls.SwitchCell
        {
            var context = new PropertyContext<bool>(self, Microsoft.Maui.Controls.SwitchCell.OnProperty);
            configure(context).Build();
            return self;
        }
        
        public static T Text<T>(this T self,
            string text)
            where T : Microsoft.Maui.Controls.SwitchCell
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.SwitchCell.TextProperty, text);
            return self;
        }
        
        public static T Text<T>(this T self, Func<PropertyContext<string>, IPropertyBuilder<string>> configure)
            where T : Microsoft.Maui.Controls.SwitchCell
        {
            var context = new PropertyContext<string>(self, Microsoft.Maui.Controls.SwitchCell.TextProperty);
            configure(context).Build();
            return self;
        }
        
        public static T OnOnChanged<T>(this T self, System.EventHandler<Microsoft.Maui.Controls.ToggledEventArgs> handler)
            where T : Microsoft.Maui.Controls.SwitchCell
        {
            self.OnChanged += handler;
            return self;
        }
        
        public static T OnOnChanged<T>(this T self, System.Action<T> action)
            where T : Microsoft.Maui.Controls.SwitchCell
        {
            self.OnChanged += (o, arg) => action(self);
            return self;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
