//
// <auto-generated> CodeMarkup.Maui.Generator.Extensions.Builder
//

#nullable enable
#pragma warning disable CS8601


namespace CodeMarkup.Maui
{
    using CodeMarkup.Maui.Internal;
    
    public static partial class BackButtonBehaviorExtension
    {
        public static T Command<T>(this T self,
            System.Windows.Input.ICommand command)
            where T : Microsoft.Maui.Controls.BackButtonBehavior
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.BackButtonBehavior.CommandProperty, command);
            return self;
        }
        
        public static T Command<T>(this T self, Func<PropertyContext<System.Windows.Input.ICommand>, IPropertyBuilder<System.Windows.Input.ICommand>> configure)
            where T : Microsoft.Maui.Controls.BackButtonBehavior
        {
            var context = new PropertyContext<System.Windows.Input.ICommand>(self, Microsoft.Maui.Controls.BackButtonBehavior.CommandProperty);
            configure(context).Build();
            return self;
        }
        
        public static T CommandParameter<T>(this T self,
            object commandParameter)
            where T : Microsoft.Maui.Controls.BackButtonBehavior
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.BackButtonBehavior.CommandParameterProperty, commandParameter);
            return self;
        }
        
        public static T CommandParameter<T>(this T self, Func<PropertyContext<object>, IPropertyBuilder<object>> configure)
            where T : Microsoft.Maui.Controls.BackButtonBehavior
        {
            var context = new PropertyContext<object>(self, Microsoft.Maui.Controls.BackButtonBehavior.CommandParameterProperty);
            configure(context).Build();
            return self;
        }
        
        public static T IconOverride<T>(this T self,
            Microsoft.Maui.Controls.ImageSource iconOverride)
            where T : Microsoft.Maui.Controls.BackButtonBehavior
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.BackButtonBehavior.IconOverrideProperty, iconOverride);
            return self;
        }
        
        public static T IconOverride<T>(this T self, Func<PropertyContext<Microsoft.Maui.Controls.ImageSource>, IPropertyBuilder<Microsoft.Maui.Controls.ImageSource>> configure)
            where T : Microsoft.Maui.Controls.BackButtonBehavior
        {
            var context = new PropertyContext<Microsoft.Maui.Controls.ImageSource>(self, Microsoft.Maui.Controls.BackButtonBehavior.IconOverrideProperty);
            configure(context).Build();
            return self;
        }
        
        public static T IsEnabled<T>(this T self,
            bool isEnabled)
            where T : Microsoft.Maui.Controls.BackButtonBehavior
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.BackButtonBehavior.IsEnabledProperty, isEnabled);
            return self;
        }
        
        public static T IsEnabled<T>(this T self, Func<PropertyContext<bool>, IPropertyBuilder<bool>> configure)
            where T : Microsoft.Maui.Controls.BackButtonBehavior
        {
            var context = new PropertyContext<bool>(self, Microsoft.Maui.Controls.BackButtonBehavior.IsEnabledProperty);
            configure(context).Build();
            return self;
        }
        
        public static T IsVisible<T>(this T self,
            bool isVisible)
            where T : Microsoft.Maui.Controls.BackButtonBehavior
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.BackButtonBehavior.IsVisibleProperty, isVisible);
            return self;
        }
        
        public static T IsVisible<T>(this T self, Func<PropertyContext<bool>, IPropertyBuilder<bool>> configure)
            where T : Microsoft.Maui.Controls.BackButtonBehavior
        {
            var context = new PropertyContext<bool>(self, Microsoft.Maui.Controls.BackButtonBehavior.IsVisibleProperty);
            configure(context).Build();
            return self;
        }
        
        public static T TextOverride<T>(this T self,
            string textOverride)
            where T : Microsoft.Maui.Controls.BackButtonBehavior
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.BackButtonBehavior.TextOverrideProperty, textOverride);
            return self;
        }
        
        public static T TextOverride<T>(this T self, Func<PropertyContext<string>, IPropertyBuilder<string>> configure)
            where T : Microsoft.Maui.Controls.BackButtonBehavior
        {
            var context = new PropertyContext<string>(self, Microsoft.Maui.Controls.BackButtonBehavior.TextOverrideProperty);
            configure(context).Build();
            return self;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
