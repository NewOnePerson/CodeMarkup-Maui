//
// <auto-generated> CodeMarkup.Maui.Generator.Extensions.Builder
//

#nullable enable
#pragma warning disable CS8601


namespace CodeMarkup.Maui
{
    using CodeMarkup.Maui.Internal;
    
    public static partial class AppLinkEntryExtension
    {
        public static T AppLinkUri<T>(this T self,
            System.Uri appLinkUri)
            where T : Microsoft.Maui.Controls.AppLinkEntry
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.AppLinkEntry.AppLinkUriProperty, appLinkUri);
            return self;
        }
        
        public static T AppLinkUri<T>(this T self, Func<PropertyContext<System.Uri>, IPropertyBuilder<System.Uri>> configure)
            where T : Microsoft.Maui.Controls.AppLinkEntry
        {
            var context = new PropertyContext<System.Uri>(self, Microsoft.Maui.Controls.AppLinkEntry.AppLinkUriProperty);
            configure(context).Build();
            return self;
        }
        
        public static T Description<T>(this T self,
            string description)
            where T : Microsoft.Maui.Controls.AppLinkEntry
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.AppLinkEntry.DescriptionProperty, description);
            return self;
        }
        
        public static T Description<T>(this T self, Func<PropertyContext<string>, IPropertyBuilder<string>> configure)
            where T : Microsoft.Maui.Controls.AppLinkEntry
        {
            var context = new PropertyContext<string>(self, Microsoft.Maui.Controls.AppLinkEntry.DescriptionProperty);
            configure(context).Build();
            return self;
        }
        
        public static T IsLinkActive<T>(this T self,
            bool isLinkActive)
            where T : Microsoft.Maui.Controls.AppLinkEntry
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.AppLinkEntry.IsLinkActiveProperty, isLinkActive);
            return self;
        }
        
        public static T IsLinkActive<T>(this T self, Func<PropertyContext<bool>, IPropertyBuilder<bool>> configure)
            where T : Microsoft.Maui.Controls.AppLinkEntry
        {
            var context = new PropertyContext<bool>(self, Microsoft.Maui.Controls.AppLinkEntry.IsLinkActiveProperty);
            configure(context).Build();
            return self;
        }
        
        public static T Thumbnail<T>(this T self,
            Microsoft.Maui.Controls.ImageSource thumbnail)
            where T : Microsoft.Maui.Controls.AppLinkEntry
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.AppLinkEntry.ThumbnailProperty, thumbnail);
            return self;
        }
        
        public static T Thumbnail<T>(this T self, Func<PropertyContext<Microsoft.Maui.Controls.ImageSource>, IPropertyBuilder<Microsoft.Maui.Controls.ImageSource>> configure)
            where T : Microsoft.Maui.Controls.AppLinkEntry
        {
            var context = new PropertyContext<Microsoft.Maui.Controls.ImageSource>(self, Microsoft.Maui.Controls.AppLinkEntry.ThumbnailProperty);
            configure(context).Build();
            return self;
        }
        
        public static T Title<T>(this T self,
            string title)
            where T : Microsoft.Maui.Controls.AppLinkEntry
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.AppLinkEntry.TitleProperty, title);
            return self;
        }
        
        public static T Title<T>(this T self, Func<PropertyContext<string>, IPropertyBuilder<string>> configure)
            where T : Microsoft.Maui.Controls.AppLinkEntry
        {
            var context = new PropertyContext<string>(self, Microsoft.Maui.Controls.AppLinkEntry.TitleProperty);
            configure(context).Build();
            return self;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
