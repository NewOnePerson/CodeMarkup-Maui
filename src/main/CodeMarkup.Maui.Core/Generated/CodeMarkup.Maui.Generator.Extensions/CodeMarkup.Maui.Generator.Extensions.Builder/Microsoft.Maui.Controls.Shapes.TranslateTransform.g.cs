//
// <auto-generated> CodeMarkup.Maui.Generator.Extensions.Builder
//

#nullable enable
#pragma warning disable CS8601


namespace CodeMarkup.Maui
{
    using CodeMarkup.Maui.Internal;
    
    public static partial class TranslateTransformExtension
    {
        public static T X<T>(this T self,
            double x)
            where T : Microsoft.Maui.Controls.Shapes.TranslateTransform
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.Shapes.TranslateTransform.XProperty, x);
            return self;
        }
        
        public static T X<T>(this T self, Func<PropertyContext<double>, IPropertyBuilder<double>> configure)
            where T : Microsoft.Maui.Controls.Shapes.TranslateTransform
        {
            var context = new PropertyContext<double>(self, Microsoft.Maui.Controls.Shapes.TranslateTransform.XProperty);
            configure(context).Build();
            return self;
        }
        
        public static T Y<T>(this T self,
            double y)
            where T : Microsoft.Maui.Controls.Shapes.TranslateTransform
        {
            self.SetValueOrAddSetter(Microsoft.Maui.Controls.Shapes.TranslateTransform.YProperty, y);
            return self;
        }
        
        public static T Y<T>(this T self, Func<PropertyContext<double>, IPropertyBuilder<double>> configure)
            where T : Microsoft.Maui.Controls.Shapes.TranslateTransform
        {
            var context = new PropertyContext<double>(self, Microsoft.Maui.Controls.Shapes.TranslateTransform.YProperty);
            configure(context).Build();
            return self;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
