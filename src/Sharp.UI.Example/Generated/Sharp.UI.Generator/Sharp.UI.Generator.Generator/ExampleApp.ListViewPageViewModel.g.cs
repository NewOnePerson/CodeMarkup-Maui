//
// <auto-generated>
//

#pragma warning disable CS8669


namespace ExampleApp
{  
    using Sharp.UI;

    public partial class ListViewPageViewModel
    {
        // ----- constructors -----

        public ListViewPageViewModel(out ListViewPageViewModel listViewPageViewModel) : this()
        {
            listViewPageViewModel = this;
        }

        // ----- bindable properties -----

        public static readonly Microsoft.Maui.Controls.BindableProperty SimpleDataProperty =
            BindableProperty.Create(
                nameof(SimpleData),
                typeof(System.Collections.Generic.List<ExampleApp.DataModel>),
                typeof(ExampleApp.ListViewPageViewModel),
                default(System.Collections.Generic.List<ExampleApp.DataModel>));

        public System.Collections.Generic.List<ExampleApp.DataModel> SimpleData
        {
            get => (System.Collections.Generic.List<ExampleApp.DataModel>)GetValue(SimpleDataProperty);
            set => SetValue(SimpleDataProperty, value);
        }

        // ----- set value method -----

        public new void SetValue(Microsoft.Maui.Controls.BindableProperty property, object value)
        {
            var mauiValue = MauiWrapper.Value<object>(value);
            ((Microsoft.Maui.Controls.BindableObject)this).SetValue(property, mauiValue);
        }

        public new void SetValue(Microsoft.Maui.Controls.BindablePropertyKey propertyKey, object value)
        {
            var mauiValue = MauiWrapper.Value<object>(value);
            ((Microsoft.Maui.Controls.BindableObject)this).SetValue(propertyKey, mauiValue);
        }
    }
}

#pragma warning restore CS8669
