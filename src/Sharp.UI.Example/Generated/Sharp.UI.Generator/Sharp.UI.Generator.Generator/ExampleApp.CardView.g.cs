//
// <auto-generated>
//

#pragma warning disable CS8669


using System.Collections;
using System.Collections.ObjectModel;


namespace ExampleApp
{  
    using Sharp.UI;

    public partial class CardView : IEnumerable
    {
        // ----- constructors -----

        public CardView(out CardView cardView) : this()
        {
            cardView = this;
        }

        [Obsolete("This constructor is deprecated, use e=>e.FluentMethod(), inside curly braces.")]
        public CardView(System.Action<CardView> configure) : this()
        {
            configure(this);
        }

        [Obsolete("This constructor is deprecated, use e=>e.Assign(out symbol).OtherFluentMethod(), inside curly braces.")]
        public CardView(out CardView cardView, System.Action<CardView> configure) : this()
        {
            cardView = this;
            configure(this);
        }

        // ----- single item container -----

        public new IEnumerator GetEnumerator() { yield return this.ContentView; }
        public new void Add(Microsoft.Maui.Controls.View contentview) => this.ContentView = contentview;

        public void Add(Func<ExampleApp.CardView, ExampleApp.CardView> configure) { configure(this); }

        // ----- bindable properties -----

        public static readonly Microsoft.Maui.Controls.BindableProperty CardTitleProperty =
            BindableProperty.Create(
                nameof(CardTitle),
                typeof(string),
                typeof(ExampleApp.CardView),
                default(string));

        public string CardTitle
        {
            get => (string)GetValue(CardTitleProperty);
            set => SetValue(CardTitleProperty, value);
        }

        public static readonly Microsoft.Maui.Controls.BindableProperty CardDescriptionProperty =
            BindableProperty.Create(
                nameof(CardDescription),
                typeof(string),
                typeof(ExampleApp.CardView),
                default(string));

        public string CardDescription
        {
            get => (string)GetValue(CardDescriptionProperty);
            set => SetValue(CardDescriptionProperty, value);
        }

        public static readonly Microsoft.Maui.Controls.BindableProperty CardColorProperty =
            BindableProperty.Create(
                nameof(CardColor),
                typeof(Microsoft.Maui.Graphics.Color),
                typeof(ExampleApp.CardView),
                default(Microsoft.Maui.Graphics.Color));

        public Microsoft.Maui.Graphics.Color CardColor
        {
            get => (Microsoft.Maui.Graphics.Color)GetValue(CardColorProperty);
            set => SetValue(CardColorProperty, value);
        }

        public static readonly Microsoft.Maui.Controls.BindableProperty BorderColorProperty =
            BindableProperty.Create(
                nameof(BorderColor),
                typeof(Microsoft.Maui.Graphics.Color),
                typeof(ExampleApp.CardView),
                default(Microsoft.Maui.Graphics.Color));

        public Microsoft.Maui.Graphics.Color BorderColor
        {
            get => (Microsoft.Maui.Graphics.Color)GetValue(BorderColorProperty);
            set => SetValue(BorderColorProperty, value);
        }

        public static readonly Microsoft.Maui.Controls.BindableProperty DescriptionStyleProperty =
            BindableProperty.Create(
                nameof(DescriptionStyle),
                typeof(Sharp.UI.Style),
                typeof(ExampleApp.CardView),
                default(Sharp.UI.Style));

        public Sharp.UI.Style DescriptionStyle
        {
            get => (Sharp.UI.Style)GetValue(DescriptionStyleProperty);
            set => SetValue(DescriptionStyleProperty, value);
        }

        public static readonly Microsoft.Maui.Controls.BindableProperty ContentViewProperty =
            BindableProperty.Create(
                nameof(ContentView),
                typeof(Microsoft.Maui.Controls.View),
                typeof(ExampleApp.CardView),
                default(Microsoft.Maui.Controls.View));

        public Microsoft.Maui.Controls.View ContentView
        {
            get => (Microsoft.Maui.Controls.View)GetValue(ContentViewProperty);
            set => SetValue(ContentViewProperty, value);
        }

        public static readonly Microsoft.Maui.Controls.BindableProperty ButtonTitleProperty =
            BindableProperty.Create(
                nameof(ButtonTitle),
                typeof(string),
                typeof(ExampleApp.CardView),
                default(string));

        public string ButtonTitle
        {
            get => (string)GetValue(ButtonTitleProperty);
            set => SetValue(ButtonTitleProperty, value);
        }

        // ----- set value method -----

        public new void SetValue(Microsoft.Maui.Controls.BindableProperty property, object value)
        {
            var mauiValue = MauiWrapper.Value<object>(value);
            ((Microsoft.Maui.Controls.BindableObject)this).SetValue(property, mauiValue);
        }

        public new void SetValue(Microsoft.Maui.Controls.BindablePropertyKey propertyKey, object value)
        {
            var mauiValue = MauiWrapper.Value<object>(value);
            ((Microsoft.Maui.Controls.BindableObject)this).SetValue(propertyKey, mauiValue);
        }
    }
}

#pragma warning restore CS8669
