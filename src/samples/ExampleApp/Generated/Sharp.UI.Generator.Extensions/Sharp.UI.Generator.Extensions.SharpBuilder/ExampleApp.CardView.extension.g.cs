//
// <auto-generated> Sharp.UI.Generator.Extensions.SharpBuilder
//

#nullable enable
#pragma warning disable CS8601


namespace ExampleApp
{
    using Sharp.UI;

    using Sharp.UI.Internal;

    public static partial class CardViewExtension
    {
        public static T OnClicked<T>(this T obj, System.EventHandler handler)
            where T : ExampleApp.CardView
        {
            obj.Clicked += handler;
            return obj;
        }
        
        public static T OnClicked<T>(this T obj, System.Action<T> action)
            where T : ExampleApp.CardView
        {
            obj.Clicked += (o, arg) => action(obj);
            return obj;
        }
        
        public static T CardTitle<T>(this T obj,
            string cardTitle)
            where T : ExampleApp.CardView
        {
            obj.SetValueOrSetter(ExampleApp.CardView.CardTitleProperty, cardTitle);
            return obj;
        }
        
        public static T CardTitle<T>(this T obj,
            System.Func<ValueBuilder<string>, ValueBuilder<string>> buidValue)
            where T : ExampleApp.CardView
        {
            var builder = buidValue(new ValueBuilder<string>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(ExampleApp.CardView.CardTitleProperty, builder.GetValue());
            return obj;
        }
        
        public static T CardTitle<T>(this T obj,
            System.Func<BindingBuilder<string>, BindingBuilder<string>> buidBinding)
            where T : ExampleApp.CardView
        {
            var builder = buidBinding(new BindingBuilder<string>(obj, ExampleApp.CardView.CardTitleProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T CardDescription<T>(this T obj,
            string cardDescription)
            where T : ExampleApp.CardView
        {
            obj.SetValueOrSetter(ExampleApp.CardView.CardDescriptionProperty, cardDescription);
            return obj;
        }
        
        public static T CardDescription<T>(this T obj,
            System.Func<ValueBuilder<string>, ValueBuilder<string>> buidValue)
            where T : ExampleApp.CardView
        {
            var builder = buidValue(new ValueBuilder<string>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(ExampleApp.CardView.CardDescriptionProperty, builder.GetValue());
            return obj;
        }
        
        public static T CardDescription<T>(this T obj,
            System.Func<BindingBuilder<string>, BindingBuilder<string>> buidBinding)
            where T : ExampleApp.CardView
        {
            var builder = buidBinding(new BindingBuilder<string>(obj, ExampleApp.CardView.CardDescriptionProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T CardColor<T>(this T obj,
            Microsoft.Maui.Graphics.Color cardColor)
            where T : ExampleApp.CardView
        {
            obj.SetValueOrSetter(ExampleApp.CardView.CardColorProperty, cardColor);
            return obj;
        }
        
        public static T CardColor<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Graphics.Color>, ValueBuilder<Microsoft.Maui.Graphics.Color>> buidValue)
            where T : ExampleApp.CardView
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Graphics.Color>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(ExampleApp.CardView.CardColorProperty, builder.GetValue());
            return obj;
        }
        
        public static T CardColor<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Graphics.Color>, BindingBuilder<Microsoft.Maui.Graphics.Color>> buidBinding)
            where T : ExampleApp.CardView
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Graphics.Color>(obj, ExampleApp.CardView.CardColorProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T BorderColor<T>(this T obj,
            Microsoft.Maui.Graphics.Color borderColor)
            where T : ExampleApp.CardView
        {
            obj.SetValueOrSetter(ExampleApp.CardView.BorderColorProperty, borderColor);
            return obj;
        }
        
        public static T BorderColor<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Graphics.Color>, ValueBuilder<Microsoft.Maui.Graphics.Color>> buidValue)
            where T : ExampleApp.CardView
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Graphics.Color>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(ExampleApp.CardView.BorderColorProperty, builder.GetValue());
            return obj;
        }
        
        public static T BorderColor<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Graphics.Color>, BindingBuilder<Microsoft.Maui.Graphics.Color>> buidBinding)
            where T : ExampleApp.CardView
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Graphics.Color>(obj, ExampleApp.CardView.BorderColorProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T DescriptionStyle<T>(this T obj,
            Microsoft.Maui.Controls.Style descriptionStyle)
            where T : ExampleApp.CardView
        {
            obj.SetValueOrSetter(ExampleApp.CardView.DescriptionStyleProperty, descriptionStyle);
            return obj;
        }
        
        public static T DescriptionStyle<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Controls.Style>, ValueBuilder<Microsoft.Maui.Controls.Style>> buidValue)
            where T : ExampleApp.CardView
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Controls.Style>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(ExampleApp.CardView.DescriptionStyleProperty, builder.GetValue());
            return obj;
        }
        
        public static T DescriptionStyle<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Controls.Style>, BindingBuilder<Microsoft.Maui.Controls.Style>> buidBinding)
            where T : ExampleApp.CardView
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Controls.Style>(obj, ExampleApp.CardView.DescriptionStyleProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T ContentView<T>(this T obj,
            Microsoft.Maui.Controls.View contentView)
            where T : ExampleApp.CardView
        {
            obj.SetValueOrSetter(ExampleApp.CardView.ContentViewProperty, contentView);
            return obj;
        }
        
        public static T ContentView<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Controls.View>, ValueBuilder<Microsoft.Maui.Controls.View>> buidValue)
            where T : ExampleApp.CardView
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Controls.View>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(ExampleApp.CardView.ContentViewProperty, builder.GetValue());
            return obj;
        }
        
        public static T ContentView<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Controls.View>, BindingBuilder<Microsoft.Maui.Controls.View>> buidBinding)
            where T : ExampleApp.CardView
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Controls.View>(obj, ExampleApp.CardView.ContentViewProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T ButtonTitle<T>(this T obj,
            string buttonTitle)
            where T : ExampleApp.CardView
        {
            obj.SetValueOrSetter(ExampleApp.CardView.ButtonTitleProperty, buttonTitle);
            return obj;
        }
        
        public static T ButtonTitle<T>(this T obj,
            System.Func<ValueBuilder<string>, ValueBuilder<string>> buidValue)
            where T : ExampleApp.CardView
        {
            var builder = buidValue(new ValueBuilder<string>());
            if (builder.ValueIsSet()) obj.SetValueOrSetter(ExampleApp.CardView.ButtonTitleProperty, builder.GetValue());
            return obj;
        }
        
        public static T ButtonTitle<T>(this T obj,
            System.Func<BindingBuilder<string>, BindingBuilder<string>> buidBinding)
            where T : ExampleApp.CardView
        {
            var builder = buidBinding(new BindingBuilder<string>(obj, ExampleApp.CardView.ButtonTitleProperty));
            builder.BindProperty();
            return obj;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
