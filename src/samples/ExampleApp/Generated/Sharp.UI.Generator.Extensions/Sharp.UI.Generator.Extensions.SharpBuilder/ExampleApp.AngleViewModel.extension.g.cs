//
// <auto-generated> Sharp.UI.Generator.Extensions.SharpBuilder
//

#nullable enable
#pragma warning disable CS8601


namespace ExampleApp
{
    using Sharp.UI;
    using Sharp.UI.Internal;

    public static partial class AngleViewModelExtension
    {
        public static T RawAngle<T>(this T self,
            double rawAngle)
            where T : ExampleApp.AngleViewModel
        {
            self.SetValueOrAddSetter(ExampleApp.AngleViewModel.RawAngleProperty, rawAngle);
            return self;
        }
        
        public static T RawAngle<T>(this T self,
            System.Func<ValueBuilder<double>, ValueBuilder<double>> buildValue)
            where T : ExampleApp.AngleViewModel
        {
            var builder = buildValue(new ValueBuilder<double>());
            if (builder.ValueIsSet()) self.SetValueOrAddSetter(ExampleApp.AngleViewModel.RawAngleProperty, builder.GetValue());
            return self;
        }
        
        public static T RawAngle<T>(this T self,
            System.Func<BindingBuilder<double>, BindingBuilder<double>> buildBinding)
            where T : ExampleApp.AngleViewModel
        {
            var builder = buildBinding(new BindingBuilder<double>(self, ExampleApp.AngleViewModel.RawAngleProperty));
            builder.BindProperty();
            return self;
        }
        
        public static T Angle<T>(this T self,
            double angle)
            where T : ExampleApp.AngleViewModel
        {
            self.SetValueOrAddSetter(ExampleApp.AngleViewModel.AngleProperty, angle);
            return self;
        }
        
        public static T Angle<T>(this T self,
            System.Func<ValueBuilder<double>, ValueBuilder<double>> buildValue)
            where T : ExampleApp.AngleViewModel
        {
            var builder = buildValue(new ValueBuilder<double>());
            if (builder.ValueIsSet()) self.SetValueOrAddSetter(ExampleApp.AngleViewModel.AngleProperty, builder.GetValue());
            return self;
        }
        
        public static T Angle<T>(this T self,
            System.Func<BindingBuilder<double>, BindingBuilder<double>> buildBinding)
            where T : ExampleApp.AngleViewModel
        {
            var builder = buildBinding(new BindingBuilder<double>(self, ExampleApp.AngleViewModel.AngleProperty));
            builder.BindProperty();
            return self;
        }
        
        public static T MaximumAngle<T>(this T self,
            double maximumAngle)
            where T : ExampleApp.AngleViewModel
        {
            self.SetValueOrAddSetter(ExampleApp.AngleViewModel.MaximumAngleProperty, maximumAngle);
            return self;
        }
        
        public static T MaximumAngle<T>(this T self,
            System.Func<ValueBuilder<double>, ValueBuilder<double>> buildValue)
            where T : ExampleApp.AngleViewModel
        {
            var builder = buildValue(new ValueBuilder<double>());
            if (builder.ValueIsSet()) self.SetValueOrAddSetter(ExampleApp.AngleViewModel.MaximumAngleProperty, builder.GetValue());
            return self;
        }
        
        public static T MaximumAngle<T>(this T self,
            System.Func<BindingBuilder<double>, BindingBuilder<double>> buildBinding)
            where T : ExampleApp.AngleViewModel
        {
            var builder = buildBinding(new BindingBuilder<double>(self, ExampleApp.AngleViewModel.MaximumAngleProperty));
            builder.BindProperty();
            return self;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
