//
// <auto-generated>
//

#pragma warning disable CS8669


namespace Sharp.UI.Example
{
    public partial class TemplatedCardView
    {
        // ----- constructors -----
        

        public TemplatedCardView() { }


        public TemplatedCardView(out TemplatedCardView templatedCardView) 
        {
            templatedCardView = this;
        }

        public TemplatedCardView(Action<TemplatedCardView> configure) 
        {
            configure(this);
        }

        public TemplatedCardView(out TemplatedCardView templatedCardView, Action<TemplatedCardView> configure) 
        {
            templatedCardView = this;
            configure(this);
        }

        public static readonly BindableProperty CardTitleProperty = BindableProperty.Create(nameof(CardTitle), typeof(String), typeof(Sharp.UI.Example.TemplatedCardView), default(String));

        public String CardTitle
        {
            get => (String)GetValue(CardTitleProperty);
            set => SetValue(CardTitleProperty, value);
        }
        
        public static readonly BindableProperty CardDescriptionProperty = BindableProperty.Create(nameof(CardDescription), typeof(String), typeof(Sharp.UI.Example.TemplatedCardView), default(String));

        public String CardDescription
        {
            get => (String)GetValue(CardDescriptionProperty);
            set => SetValue(CardDescriptionProperty, value);
        }
        
        public static readonly BindableProperty CardColorProperty = BindableProperty.Create(nameof(CardColor), typeof(Color), typeof(Sharp.UI.Example.TemplatedCardView), default(Color));

        public Color CardColor
        {
            get => (Color)GetValue(CardColorProperty);
            set => SetValue(CardColorProperty, value);
        }
        
        public static readonly BindableProperty BorderColorProperty = BindableProperty.Create(nameof(BorderColor), typeof(Color), typeof(Sharp.UI.Example.TemplatedCardView), default(Color));

        public Color BorderColor
        {
            get => (Color)GetValue(BorderColorProperty);
            set => SetValue(BorderColorProperty, value);
        }
        
        // ----- binding context -----

        public new object BindingContext
        {
            get => base.BindingContext;
            set
            {
                var mauiObject = MauiWrapper.GetObject<object>(value);
                base.BindingContext = mauiObject;
            }
        }
        

    }
}

#pragma warning restore CS8669
