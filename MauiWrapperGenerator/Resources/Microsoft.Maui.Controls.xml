<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Maui.Controls</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Maui.Controls.Accelerator">
            <summary>Represents a shortcut key for a <see cref="T:Microsoft.Maui.Controls.MenuItem" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Accelerator.Modifiers">
            <summary>For internal use only.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Accelerator.Keys">
            <summary>For internal use only.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Accelerator.FromString(System.String)">
            <param name="text">A string that represents an accelerator key combination.</param><summary>Returns a new <see cref="T:Microsoft.Maui.Controls.Accelerator" /> for the text.</summary><returns>The new <see cref="T:Microsoft.Maui.Controls.Accelerator" /> for the text.</returns><remarks>
          <para>
            <paramref name="text" /> may contain a combination of "CTRL", "CMD", "ALT", "SHIFT", "FN", or "WIN", in any combination of upper or lower case letters, as well as any available keys on the platform. The returned <see cref="T:Microsoft.Maui.Controls.Accelerator" /> has its <see cref="P:Microsoft.Maui.Controls.Accelerator.Modifiers" /> array filled with the specifed modifiers, and its <see cref="P:Microsoft.Maui.Controls.Accelerator.Keys" /> array filled with the remaining keys.</para>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Accelerator.ToString">
            <summary>Returns a text representation of the accelerator.</summary><returns>The text representation of the accelerator.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Accelerator.Equals(System.Object)">
            <param name="obj">The object to compare against.</param><summary>Compares <see langword="this" /> accelerator to <paramref name="obj" /> and returns <see langword="true" /> if <paramref name="obj" /> is a of type <see cref="T:Microsoft.Maui.Controls.Accelerator" /> and is equal to this one. Otherwise, returns <see langword="false" />.</summary><returns>
          <see langword="true" /> if <paramref name="obj" /> is a of type <see cref="T:Microsoft.Maui.Controls.Accelerator" /> and is equal to this one. Otherwise, returns <see langword="false" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Accelerator.GetHashCode">
            <summary>Returns the hashcode for the lower case string that represents the shortcut key.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.AcceleratorTypeConverter">
            <summary>
            Class that the XAML parser uses to convert strings to <see cref="T:Microsoft.Maui.Controls.Accelerator" /> objects.
            </summary>
            <remarks>
            The given string value may contain a combination of "CTRL", "CMD", "ALT", "SHIFT", "FN", or "WIN",
            in any combination of upper or lower case letters, as well as any available keys on the platform.
            The returned <see cref="T:Microsoft.Maui.Controls.Accelerator" /> has its <see cref="P:Microsoft.Maui.Controls.Accelerator.Modifiers" /> array filled with the specified modifiers,
            and its <see cref="P:Microsoft.Maui.Controls.Accelerator.Keys" /> array filled with the remaining keys.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.ActionSheetArguments">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.ActionSheetArguments.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <param name="title">For internal use by the Microsoft.Maui.Controls platform.</param><param name="cancel">For internal use by the Microsoft.Maui.Controls platform.</param><param name="destruction">For internal use by the Microsoft.Maui.Controls platform.</param><param name="buttons">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.ActionSheetArguments.Buttons">
            <summary>
                Gets titles of any buttons on the action sheet that aren't <see cref="P:Microsoft.Maui.Controls.Internals.ActionSheetArguments.Cancel" /> or <see cref="P:Microsoft.Maui.Controls.Internals.ActionSheetArguments.Destruction" />. Can
                be <c>null</c>.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.ActionSheetArguments.Cancel">
            <summary>
                Gets the text for a cancel button. Can be null.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.ActionSheetArguments.Destruction">
            <summary>
                Gets the text for a destructive button. Can be null.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.ActionSheetArguments.Result">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><value>For internal use by the Microsoft.Maui.Controls platform.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.ActionSheetArguments.Title">
            <summary>
                Gets the title for the action sheet. Can be null.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.ActionSheetArguments.SetResult(System.String)">
            <param name="result">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.AlertArguments">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.AlertArguments.#ctor(System.String,System.String,System.String,System.String)">
            <param name="title">For internal use by the Microsoft.Maui.Controls platform.</param><param name="message">For internal use by the Microsoft.Maui.Controls platform.</param><param name="accept">For internal use by the Microsoft.Maui.Controls platform.</param><param name="cancel">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.AlertArguments.Accept">
            <summary>
                Gets the text for the accept button. Can be null.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.AlertArguments.Cancel">
            <summary>
                Gets the text of the cancel button.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.AlertArguments.Message">
            <summary>
                Gets the message for the alert. Can be null.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.AlertArguments.Result">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><value>For internal use by the Microsoft.Maui.Controls platform.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.AlertArguments.Title">
            <summary>
                Gets the title for the alert. Can be null.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.AlertArguments.SetResult(System.Boolean)">
            <param name="result">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.DataTemplateExtensions">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.DataTemplateExtensions.SelectDataTemplate(Microsoft.Maui.Controls.DataTemplate,System.Object,Microsoft.Maui.Controls.BindableObject)">
            <param name="self">For internal use by the Microsoft.Maui.Controls platform.</param><param name="item">For internal use by the Microsoft.Maui.Controls platform.</param><param name="container">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><returns>For internal use by the Microsoft.Maui.Controls platform.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.DataTemplateExtensions.CreateContent(Microsoft.Maui.Controls.DataTemplate,System.Object,Microsoft.Maui.Controls.BindableObject)">
            <param name="self">For internal use by the Microsoft.Maui.Controls platform.</param><param name="item">For internal use by the Microsoft.Maui.Controls platform.</param><param name="container">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><returns>For internal use by the Microsoft.Maui.Controls platform.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.DependencyResolver">
            <summary>Contains static methods that add functions to use for resolving dependencies.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.DependencyResolver.ResolveUsing(System.Func{System.Type,System.Object[],System.Object})">
            <param name="resolver">A function that returns an instance of a type from an array that provides matching types, or <see langword="null" /> if the type is not supported.</param><summary>Specifies a resolution function that attempts to return an instance of a specified type.</summary><remarks>
          <paramref name="resolver" /> must return <see langword="null" /> for types that it does not support, because a return value of <see langword="null" /> passes the type through to Microsoft.Maui.Controls so that it may attempt to resolve the type itself.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.DependencyResolver.ResolveUsing(System.Func{System.Type,System.Object})">
            <param name="resolver">A function that returns an instance of a type, or <see langword="null" /> if the type is not supported.</param><summary>Specifies a resolution function that attempts to return an instance of the specified type.</summary><remarks>
          <para>
            <paramref name="resolver" /> must return <see langword="null" /> for types that it does not support, because a return value of <see langword="null" /> passes the type through to Microsoft.Maui.Controls so that it may attempt to resolve the type itself.</para>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.DeviceOrientationExtensions.IsLandscape(Microsoft.Maui.Devices.DisplayOrientation)">
            <param name="orientation">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><returns>For internal use by the Microsoft.Maui.Controls platform.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.DeviceOrientationExtensions.IsPortrait(Microsoft.Maui.Devices.DisplayOrientation)">
            <param name="orientation">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><returns>For internal use by the Microsoft.Maui.Controls platform.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.ExpressionSearch">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.ExpressionSearch.Default">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><value>For internal use by the Microsoft.Maui.Controls platform.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.AsyncValueExtensions">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.CellExtensions">
            <summary>For internal use by platform renderers.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.CellExtensions.GetPath(Microsoft.Maui.Controls.Cell)">
            <param name="cell">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by platform renderers.</summary><returns>For internal use by the Microsoft.Maui.Controls platform.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.DynamicResource">
            <summary>For internal use by platform renderers.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.DynamicResource.Key">
            <summary>For internal use by platform renderers.</summary><value>For internal use by the Microsoft.Maui.Controls platform.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.DynamicResource.#ctor(System.String)">
            <param name="key">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by platform renderers.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.EffectUtilities">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.EffectUtilities.RegisterEffectControlProvider(Microsoft.Maui.Controls.IEffectControlProvider,Microsoft.Maui.Controls.IElementController,Microsoft.Maui.Controls.IElementController)">
            <param name="self">For internal use by the Microsoft.Maui.Controls platform.</param><param name="oldElement">For internal use by the Microsoft.Maui.Controls platform.</param><param name="newElement">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.EffectUtilities.UnregisterEffectControlProvider(Microsoft.Maui.Controls.IEffectControlProvider,Microsoft.Maui.Controls.IElementController)">
            <param name="self">For internal use by the Microsoft.Maui.Controls platform.</param><param name="element">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.EvalRequested">
            <summary>For internal use by platform renderers.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.EvalRequested.Script">
            <summary>For internal use by platform renderers.</summary><value>For internal use by the Microsoft.Maui.Controls platform.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.EvalRequested.#ctor(System.String)">
            <param name="script">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by platform renderers.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.GIFDecoderFormatException">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.GIFDecoderFormatException.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.GIFDecoderFormatException.#ctor(System.String)">
            <param name="message">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.GIFDecoderFormatException.#ctor(System.String,System.Exception)">
            <param name="message">To be added.</param><param name="innerException">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.GIFDecoderStreamReader">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.GIFDecoderStreamReader.#ctor(System.IO.Stream)">
            <param name="stream">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.GIFDecoderStreamReader.CurrentPosition">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.GIFDecoderStreamReader.CurrentBlockBuffer">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.GIFDecoderStreamReader.CurrentBlockSize">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.GIFDecoderStreamReader.Read">
            <summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.GIFDecoderStreamReader.ReadShort">
            <summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.GIFDecoderStreamReader.ReadString(System.Int32)">
            <param name="length">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.GIFDecoderStreamReader.ReadAsync(System.Byte[],System.Int32)">
            <param name="buffer">To be added.</param><param name="toRead">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.GIFDecoderStreamReader.ReadBlockAsync">
            <summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.GIFDecoderStreamReader.SkipBlockAsync">
            <summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.GIFColorTable">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.GIFColorTable.Data">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.GIFColorTable.SetTransparency(System.Int32)">
            <param name="transparencyIndex">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.GIFColorTable.ResetTransparency">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.GIFColorTable.CreateColorTableAsync(Microsoft.Maui.Controls.Internals.GIFDecoderStreamReader,System.Int16)">
            <param name="stream">To be added.</param><param name="size">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.GIFHeader">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.GIFHeader.TypeIdentifier">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.GIFHeader.Version">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.GIFHeader.Width">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.GIFHeader.Height">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.GIFHeader.BackgroundColorIndex">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.GIFHeader.BackgroundColor">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.GIFHeader.GlobalColorTable">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.GIFHeader.PixelAspectRatio">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.GIFHeader.IsGIFHeader">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.GIFHeader.CreateHeaderAsync(Microsoft.Maui.Controls.Internals.GIFDecoderStreamReader,System.Boolean)">
            <param name="stream">To be added.</param><param name="skipTypeIdentifier">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.GIFBitmap">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.GIFBitmap.Data">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.GIFBitmap.DataPosition">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.GIFBitmap.Bounds">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.GIFBitmap.Dispose">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.GIFBitmap.BackgroundColor">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.GIFBitmap.IsTransparent">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.GIFBitmap.TransparencyIndex">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.GIFBitmap.IsInterlaced">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.GIFBitmap.Delay">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.GIFBitmap.LoopCount">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.GIFBitmap.ColorTable">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.GIFBitmap.CreateBitmapAsync(Microsoft.Maui.Controls.Internals.GIFDecoderStreamReader,Microsoft.Maui.Controls.Internals.GIFHeader,Microsoft.Maui.Controls.Internals.GIFBitmapDecoder,Microsoft.Maui.Controls.Internals.GIFBitmap,System.Boolean)">
            <param name="stream">To be added.</param><param name="header">To be added.</param><param name="decoder">To be added.</param><param name="previousBitmap">To be added.</param><param name="ignoreImageData">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.GIFBitmapDecoder">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.GIFBitmapDecoder.Compose(Microsoft.Maui.Controls.Internals.GIFHeader,Microsoft.Maui.Controls.Internals.GIFBitmap,Microsoft.Maui.Controls.Internals.GIFBitmap)">
            <param name="header">To be added.</param><param name="currentBitmap">To be added.</param><param name="previousBitmap">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.GIFBitmapDecoder.DecodeAsync(Microsoft.Maui.Controls.Internals.GIFDecoderStreamReader,System.Int32,System.Int32)">
            <param name="stream">To be added.</param><param name="width">To be added.</param><param name="height">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.GIFImageParser">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.GIFImageParser.ParseAsync(System.IO.Stream,System.Boolean,System.Boolean)">
            <param name="stream">To be added.</param><param name="skipTypeIdentifier">To be added.</param><param name="ignoreImageData">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.InvalidationTrigger">
            <summary>For internal use by platform renderers.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Internals.InvalidationTrigger.Undefined">
            <summary>For internal use by platform renderers.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Internals.InvalidationTrigger.MeasureChanged">
            <summary>For internal use by platform renderers.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Internals.InvalidationTrigger.HorizontalOptionsChanged">
            <summary>For internal use by platform renderers.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Internals.InvalidationTrigger.VerticalOptionsChanged">
            <summary>For internal use by platform renderers.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Internals.InvalidationTrigger.SizeRequestChanged">
            <summary>For internal use by platform renderers.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Internals.InvalidationTrigger.RendererReady">
            <summary>For internal use by platform renderers.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Internals.InvalidationTrigger.MarginChanged">
            <summary>For internal use by platform renderers.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.NameScope">
            <summary>For internal use by platform renderers.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Internals.NameScope.NameScopeProperty">
            <summary>For internal use by platform renderers.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NameScope.GetNameScope(Microsoft.Maui.Controls.BindableObject)">
            <param name="bindable">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by platform renderers.</summary><returns>For internal use by the Microsoft.Maui.Controls platform.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NameScope.SetNameScope(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.Internals.INameScope)">
            <param name="bindable">For internal use by the Microsoft.Maui.Controls platform.</param><param name="value">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by platform renderers.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.NavigationRequestedEventArgs">
            <summary>For internal use by platform renderers.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NavigationRequestedEventArgs.#ctor(Microsoft.Maui.Controls.Page,System.Boolean)">
            <param name="page">For internal use by the Microsoft.Maui.Controls platform.</param><param name="animated">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NavigationRequestedEventArgs.#ctor(Microsoft.Maui.Controls.Page,Microsoft.Maui.Controls.Page,System.Boolean)">
            <param name="page">For internal use by the Microsoft.Maui.Controls platform.</param><param name="before">For internal use by the Microsoft.Maui.Controls platform.</param><param name="animated">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by platform renderers.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.NavigationRequestedEventArgs.Animated">
            <summary>For internal use by platform renderers.</summary><value>For internal use by the Microsoft.Maui.Controls platform.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.NavigationRequestedEventArgs.BeforePage">
            <summary>For internal use by platform renderers.</summary><value>For internal use by the Microsoft.Maui.Controls platform.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.NavigationRequestedEventArgs.Task">
            <summary>For internal use by platform renderers.</summary><value>For internal use by the Microsoft.Maui.Controls platform.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.NavigationRequestedEventArgs.RequestType">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><value>For internal use by the Microsoft.Maui.Controls platform.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.NavigationRequestType">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Internals.NavigationRequestType.Unknown">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Internals.NavigationRequestType.Push">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Internals.NavigationRequestType.Pop">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Internals.NavigationRequestType.PopToRoot">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Internals.NavigationRequestType.Insert">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Internals.NavigationRequestType.Remove">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.NotifyCollectionChangedEventArgsEx">
            <summary>For internal use by platform renderers.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NotifyCollectionChangedEventArgsEx.#ctor(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <param name="count">For internal use by the Microsoft.Maui.Controls platform.</param><param name="action">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by platform renderers.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NotifyCollectionChangedEventArgsEx.#ctor(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList)">
            <param name="count">For internal use by the Microsoft.Maui.Controls platform.</param><param name="action">For internal use by the Microsoft.Maui.Controls platform.</param><param name="changedItems">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by platform renderers.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NotifyCollectionChangedEventArgsEx.#ctor(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList)">
            <param name="count">For internal use by the Microsoft.Maui.Controls platform.</param><param name="action">For internal use by the Microsoft.Maui.Controls platform.</param><param name="newItems">For internal use by the Microsoft.Maui.Controls platform.</param><param name="oldItems">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by platform renderers.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NotifyCollectionChangedEventArgsEx.#ctor(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList,System.Int32)">
            <param name="count">For internal use by the Microsoft.Maui.Controls platform.</param><param name="action">For internal use by the Microsoft.Maui.Controls platform.</param><param name="newItems">For internal use by the Microsoft.Maui.Controls platform.</param><param name="oldItems">For internal use by the Microsoft.Maui.Controls platform.</param><param name="startingIndex">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by platform renderers.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NotifyCollectionChangedEventArgsEx.#ctor(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Int32)">
            <param name="count">For internal use by the Microsoft.Maui.Controls platform.</param><param name="action">For internal use by the Microsoft.Maui.Controls platform.</param><param name="changedItems">For internal use by the Microsoft.Maui.Controls platform.</param><param name="startingIndex">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by platform renderers.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NotifyCollectionChangedEventArgsEx.#ctor(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Int32,System.Int32)">
            <param name="count">For internal use by the Microsoft.Maui.Controls platform.</param><param name="action">For internal use by the Microsoft.Maui.Controls platform.</param><param name="changedItems">For internal use by the Microsoft.Maui.Controls platform.</param><param name="index">For internal use by the Microsoft.Maui.Controls platform.</param><param name="oldIndex">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by platform renderers.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NotifyCollectionChangedEventArgsEx.#ctor(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction,System.Object)">
            <param name="count">For internal use by the Microsoft.Maui.Controls platform.</param><param name="action">For internal use by the Microsoft.Maui.Controls platform.</param><param name="changedItem">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by platform renderers.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NotifyCollectionChangedEventArgsEx.#ctor(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32)">
            <param name="count">For internal use by the Microsoft.Maui.Controls platform.</param><param name="action">For internal use by the Microsoft.Maui.Controls platform.</param><param name="changedItem">For internal use by the Microsoft.Maui.Controls platform.</param><param name="index">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by platform renderers.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NotifyCollectionChangedEventArgsEx.#ctor(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32,System.Int32)">
            <param name="count">For internal use by the Microsoft.Maui.Controls platform.</param><param name="action">For internal use by the Microsoft.Maui.Controls platform.</param><param name="changedItem">For internal use by the Microsoft.Maui.Controls platform.</param><param name="index">For internal use by the Microsoft.Maui.Controls platform.</param><param name="oldIndex">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by platform renderers.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NotifyCollectionChangedEventArgsEx.#ctor(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Object)">
            <param name="count">For internal use by the Microsoft.Maui.Controls platform.</param><param name="action">For internal use by the Microsoft.Maui.Controls platform.</param><param name="newItem">For internal use by the Microsoft.Maui.Controls platform.</param><param name="oldItem">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by platform renderers.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NotifyCollectionChangedEventArgsEx.#ctor(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Object,System.Int32)">
            <param name="count">For internal use by the Microsoft.Maui.Controls platform.</param><param name="action">For internal use by the Microsoft.Maui.Controls platform.</param><param name="newItem">For internal use by the Microsoft.Maui.Controls platform.</param><param name="oldItem">For internal use by the Microsoft.Maui.Controls platform.</param><param name="index">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by platform renderers.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.NotifyCollectionChangedEventArgsEx.Count">
            <summary>For internal use by platform renderers.</summary><value>For internal use by the Microsoft.Maui.Controls platform.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.NotifyCollectionChangedEventArgsExtensions">
            <summary>For internal use by platform renderers.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NotifyCollectionChangedEventArgsExtensions.Apply``1(System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Collections.Generic.IList{``0},System.Collections.Generic.IList{System.Object})">
            <typeparam name="TFrom">For internal use by the Microsoft.Maui.Controls platform.</typeparam><param name="self">For internal use by the Microsoft.Maui.Controls platform.</param><param name="from">For internal use by the Microsoft.Maui.Controls platform.</param><param name="to">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by platform renderers.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NotifyCollectionChangedEventArgsExtensions.Apply(System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Action{System.Object,System.Int32,System.Boolean},System.Action{System.Object,System.Int32},System.Action)">
            <param name="self">For internal use by the Microsoft.Maui.Controls platform.</param><param name="insert">For internal use by the Microsoft.Maui.Controls platform.</param><param name="removeAt">For internal use by the Microsoft.Maui.Controls platform.</param><param name="reset">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by platform renderers.</summary><returns>For internal use by the Microsoft.Maui.Controls platform.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NotifyCollectionChangedEventArgsExtensions.WithCount(System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Int32)">
            <param name="e">For internal use by the Microsoft.Maui.Controls platform.</param><param name="count">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by platform renderers.</summary><returns>For internal use by the Microsoft.Maui.Controls platform.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.PageExtensions">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.PageExtensions.AncestorToRoot(Microsoft.Maui.Controls.Page)">
            <param name="page">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><returns>For internal use by the Microsoft.Maui.Controls platform.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.PreserveAttribute">
            <summary>For internal use by platform renderers.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Internals.PreserveAttribute.AllMembers">
            <summary>For internal use by platform renderers.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Internals.PreserveAttribute.Conditional">
            <summary>For internal use by platform renderers.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.PreserveAttribute.#ctor(System.Boolean,System.Boolean)">
            <param name="allMembers">For internal use by the Microsoft.Maui.Controls platform.</param><param name="conditional">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by platform renderers.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.PreserveAttribute.#ctor">
            <summary>For internal use by platform renderers.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.ProfileDatum">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Internals.ProfileDatum.Name">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Internals.ProfileDatum.Id">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Internals.ProfileDatum.Ticks">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Internals.ProfileDatum.SubTicks">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Internals.ProfileDatum.Depth">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Internals.ProfileDatum.Path">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Internals.ProfileDatum.Line">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.ContentPageEx">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Internals.ContentPageEx.Data">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.ContentPageEx.LoadProfile(Microsoft.Maui.Controls.ContentPage)">
            <param name="page">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.PropertyPropagationExtensions">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.PropertyPropagationExtensions.PropagatePropertyChanged(System.String,Microsoft.Maui.Controls.Element,Microsoft.Maui.Controls.Element)">
            <param name="propertyName">To be added.</param><param name="target">To be added.</param><param name="source">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.ResourceLoader">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.ResourceLoader.ResourceProvider2">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><value>For internal use by the Microsoft.Maui.Controls platform.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.TextTransformUtilites">
            <summary>
            A utilities class for text transformations.
            </summary>
            <remarks>For internal use by the .NET MAUI platform.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.TextTransformUtilites.GetTransformedText(System.String,Microsoft.Maui.TextTransform)">
            <summary>
            Applies the <paramref name="textTransform"/> to <paramref name="source"/>.
            </summary>
            <remarks>For internal use by the .NET MAUI platform mostly.</remarks>
            <param name="source">The text to transform.</param>
            <param name="textTransform">The transform to apply to <paramref name="source"/>.</param>
            <returns>The transformed text.</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.TextTransformUtilites.SetPlainText(Microsoft.Maui.Controls.InputView,System.String)">
            <summary>
            Sets the plain text value to the specified input view.
            </summary>
            <remarks>For internal use by the .NET MAUI platform.</remarks>
            <param name="inputView">The view that will receive the text value.</param>
            <param name="platformText">The text that will be applied to the view.</param>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.NavigationModel.CurrentPage">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><value>For internal use by the Microsoft.Maui.Controls platform.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.NavigationModel.Modals">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><value>For internal use by the Microsoft.Maui.Controls platform.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.NavigationModel.Roots">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><value>For internal use by the Microsoft.Maui.Controls platform.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.NavigationModel.Tree">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><value>For internal use by the Microsoft.Maui.Controls platform.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NavigationModel.Clear">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NavigationModel.InsertPageBefore(Microsoft.Maui.Controls.Page,Microsoft.Maui.Controls.Page)">
            <param name="page">For internal use by the Microsoft.Maui.Controls platform.</param><param name="before">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NavigationModel.Pop(Microsoft.Maui.Controls.Page)">
            <param name="ancestralNav">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><returns>For internal use by the Microsoft.Maui.Controls platform.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NavigationModel.PopModal">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><returns>For internal use by the Microsoft.Maui.Controls platform.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NavigationModel.PopTopPage">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><returns>For internal use by the Microsoft.Maui.Controls platform.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NavigationModel.PopToRoot(Microsoft.Maui.Controls.Page)">
            <param name="ancestralNav">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NavigationModel.Push(Microsoft.Maui.Controls.Page,Microsoft.Maui.Controls.Page)">
            <param name="page">For internal use by the Microsoft.Maui.Controls platform.</param><param name="ancestralNav">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NavigationModel.PushModal(Microsoft.Maui.Controls.Page)">
            <param name="page">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NavigationModel.RemovePage(Microsoft.Maui.Controls.Page)">
            <param name="page">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><returns>For internal use by the Microsoft.Maui.Controls platform.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.NavigationProxy">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.NavigationProxy.Inner">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><value>For internal use by the Microsoft.Maui.Controls platform.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NavigationProxy.InsertPageBefore(Microsoft.Maui.Controls.Page,Microsoft.Maui.Controls.Page)">
            <param name="page">For internal use by the Microsoft.Maui.Controls platform.</param><param name="before">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.NavigationProxy.ModalStack">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><value>For internal use by the Microsoft.Maui.Controls platform.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.NavigationProxy.NavigationStack">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><value>For internal use by the Microsoft.Maui.Controls platform.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NavigationProxy.PopAsync">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><returns>For internal use by the Microsoft.Maui.Controls platform.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NavigationProxy.PopAsync(System.Boolean)">
            <param name="animated">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><returns>For internal use by the Microsoft.Maui.Controls platform.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NavigationProxy.PopModalAsync">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><returns>For internal use by the Microsoft.Maui.Controls platform.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NavigationProxy.PopModalAsync(System.Boolean)">
            <param name="animated">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><returns>For internal use by the Microsoft.Maui.Controls platform.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NavigationProxy.PopToRootAsync">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><returns>For internal use by the Microsoft.Maui.Controls platform.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NavigationProxy.PopToRootAsync(System.Boolean)">
            <param name="animated">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><returns>For internal use by the Microsoft.Maui.Controls platform.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NavigationProxy.PushAsync(Microsoft.Maui.Controls.Page)">
            <param name="root">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><returns>For internal use by the Microsoft.Maui.Controls platform.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NavigationProxy.PushAsync(Microsoft.Maui.Controls.Page,System.Boolean)">
            <param name="root">For internal use by the Microsoft.Maui.Controls platform.</param><param name="animated">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><returns>For internal use by the Microsoft.Maui.Controls platform.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NavigationProxy.PushModalAsync(Microsoft.Maui.Controls.Page)">
            <param name="modal">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><returns>For internal use by the Microsoft.Maui.Controls platform.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NavigationProxy.PushModalAsync(Microsoft.Maui.Controls.Page,System.Boolean)">
            <param name="modal">For internal use by the Microsoft.Maui.Controls platform.</param><param name="animated">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><returns>For internal use by the Microsoft.Maui.Controls platform.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.NavigationProxy.RemovePage(Microsoft.Maui.Controls.Page)">
            <param name="page">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.Performance">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.Performance.Provider">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><value>For internal use by the Microsoft.Maui.Controls platform.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.Performance.SetProvider(Microsoft.Maui.Controls.Internals.IPerformanceProvider)">
            <param name="instance">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.Performance.Start(System.String@,System.String,System.String,System.String)">
            <param name="reference">For internal use by the Microsoft.Maui.Controls platform.</param><param name="tag">For internal use by the Microsoft.Maui.Controls platform.</param><param name="path">For internal use by the Microsoft.Maui.Controls platform.</param><param name="member">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.Performance.Start(System.String,System.String,System.String,System.String)">
            <param name="reference">For internal use by the Microsoft.Maui.Controls platform.</param><param name="tag">For internal use by the Microsoft.Maui.Controls platform.</param><param name="path">For internal use by the Microsoft.Maui.Controls platform.</param><param name="member">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.Performance.Stop(System.String,System.String,System.String,System.String)">
            <param name="reference">For internal use by the Microsoft.Maui.Controls platform.</param><param name="tag">For internal use by the Microsoft.Maui.Controls platform.</param><param name="path">For internal use by the Microsoft.Maui.Controls platform.</param><param name="member">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.PlatformBindingHelpers">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>	
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.Profile">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Internals.Profile.Data">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.Profile.IsEnabled">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.Profile.Enable">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.Profile.Start">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.Profile.Stop">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.Profile.FrameBegin(System.String,System.Int32)">
            <param name="name">To be added.</param><param name="line">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.Profile.FrameEnd(System.String)">
            <param name="name">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.Profile.FramePartition(System.String,System.Int32)">
            <param name="id">For internal use by the Microsoft.Maui.Controls platform.</param><param name="line">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.Profile.Dispose">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.PromptArguments">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.PromptArguments.#ctor(System.String,System.String,System.String,System.String,System.String,System.Int32,Microsoft.Maui.Keyboard,System.String)">
            <param name="title">To be added.</param><param name="message">To be added.</param><param name="accept">To be added.</param><param name="cancel">To be added.</param><param name="placeholder">To be added.</param><param name="maxLength">To be added.</param><param name="keyboard">To be added.</param><param name="initialValue">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.PromptArguments.Title">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.PromptArguments.Message">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.PromptArguments.Accept">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.PromptArguments.Cancel">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.PromptArguments.Placeholder">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.PromptArguments.InitialValue">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.PromptArguments.MaxLength">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.PromptArguments.Keyboard">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.PromptArguments.Result">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.PromptArguments.SetResult(System.String)">
            <param name="text">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.Registrar">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.Registrar.ExtraAssemblies">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><value>For internal use by the Microsoft.Maui.Controls platform.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.Registrar.Registered">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><value>For internal use by the Microsoft.Maui.Controls platform.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.Registrar.RegisterRenderers(Microsoft.Maui.Controls.HandlerAttribute[])">
            <param name="attributes">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.Registrar.RegisterStylesheets(Microsoft.Maui.Controls.InitializationFlags)">
            <param name="flags">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.Registrar.RegisterEffects(System.String,Microsoft.Maui.Controls.ExportEffectAttribute[])">
            <param name="resolutionName">For internal use by the Microsoft.Maui.Controls platform.</param><param name="effectAttributes">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.Registrar.RegisterAll(System.Type[],Microsoft.Maui.IFontRegistrar)">
            <param name="attrTypes">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.Registrar.RegisterAll(System.Type[],Microsoft.Maui.Controls.InitializationFlags,Microsoft.Maui.IFontRegistrar)">
            <param name="attrTypes">To be added.</param><param name="flags">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.ResourcesChangedEventArgs">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Internals.ResourcesChangedEventArgs.StyleSheets">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.ResourcesChangedEventArgs.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <param name="values">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.ResourcesChangedEventArgs.Values">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><value>For internal use by the Microsoft.Maui.Controls platform.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.TableModel">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.TableModel.GetCell(System.Int32,System.Int32)">
            <param name="section">For internal use by the Microsoft.Maui.Controls platform.</param><param name="row">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><returns>For internal use by the Microsoft.Maui.Controls platform.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.TableModel.GetHeaderCell(System.Int32)">
            <param name="section">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><returns>For internal use by the Microsoft.Maui.Controls platform.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.TableModel.GetItem(System.Int32,System.Int32)">
            <param name="section">For internal use by the Microsoft.Maui.Controls platform.</param><param name="row">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><returns>For internal use by the Microsoft.Maui.Controls platform.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.TableModel.GetRowCount(System.Int32)">
            <param name="section">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><returns>For internal use by the Microsoft.Maui.Controls platform.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.TableModel.GetSectionCount">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><returns>For internal use by the Microsoft.Maui.Controls platform.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.TableModel.GetSectionIndexTitles">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><returns>For internal use by the Microsoft.Maui.Controls platform.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.TableModel.GetSectionTitle(System.Int32)">
            <param name="section">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><returns>For internal use by the Microsoft.Maui.Controls platform.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.TableModel.GetSectionTextColor(System.Int32)">
            <param name="section">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><returns>For internal use by the Microsoft.Maui.Controls platform.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.TableModel.RowLongPressed(System.Int32,System.Int32)">
            <param name="section">For internal use by the Microsoft.Maui.Controls platform.</param><param name="row">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.TableModel.RowLongPressed(System.Object)">
            <param name="item">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.TableModel.RowSelected(System.Int32,System.Int32)">
            <param name="section">For internal use by the Microsoft.Maui.Controls platform.</param><param name="row">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Internals.TableModel.RowSelected(System.Object)">
            <param name="item">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Internals.TypedBindingBase">
            <summary>For internal use by platform renderers.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.TypedBindingBase.Converter">
            <summary>For internal use by platform renderers.</summary><value>For internal use by the Microsoft.Maui.Controls platform.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.TypedBindingBase.ConverterParameter">
            <summary>For internal use by platform renderers.</summary><value>For internal use by the Microsoft.Maui.Controls platform.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Internals.TypedBindingBase.Source">
            <summary>For internal use by platform renderers.</summary><value>For internal use by the Microsoft.Maui.Controls platform.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ActivityIndicator">
            <summary>A visual control used to indicate that something is ongoing.</summary><remarks>
      <para>This control gives a visual clue to the user that something is happening, without information about its progress.</para>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/ActivityIndicator.TripleScreenShot.png" />
      </para>
      <example>
        <para>The example below creates a red activity indicator that is animated to imply that an activity is ongoing:</para>
        <code lang="XAML"><![CDATA[<ActivityIndicator Color="Red" IsRunning="true" />]]></code>
      </example>
    </remarks>
            <summary>A visual control used to indicate that something is ongoing.</summary><remarks>
      <para>This control gives a visual clue to the user that something is happening, without information about its progress.</para>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/ActivityIndicator.TripleScreenShot.png" />
      </para>
      <example>
        <para>The example below creates a red activity indicator that is animated to imply that an activity is ongoing:</para>
        <code lang="XAML"><![CDATA[<ActivityIndicator Color="Red" IsRunning="true" />]]></code>
      </example>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ActivityIndicator.IsRunningProperty">
            <summary>Identifies the IsRunning bindable property.</summary><remarks>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ActivityIndicator.ColorProperty">
            <summary>Identifies the Color bindable property.</summary><remarks>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ActivityIndicator.#ctor">
            <summary>Initializes a new instance of the ActivityIndicator class.</summary><remarks>
          <para> The following example shows the initialization of a running ActivityIndicator.
            </para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
var indicator = new ActivityIndicator {
  IsRunning = true,
};
              ]]></code>
          </example>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ActivityIndicator.Color">
            <summary>Gets or sets the <see cref="T:Microsoft.Maui.Graphics.Color" /> of the ActivityIndicator. This is a bindable property.</summary><value>A <see cref="T:Microsoft.Maui.Graphics.Color" /> used to display the ActivityIndicator.</value><remarks>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ActivityIndicator.IsRunning">
            <summary>Gets or sets the value indicating if the ActivityIndicator is running. This is a bindable property.</summary><value>A <see cref="T:System.Boolean" /> indicating if the ActivityIndicator is running.</value><remarks>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ActivityIndicator.On``1">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Controls.AdaptiveTrigger">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.AdaptiveTrigger.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.AdaptiveTrigger.MinWindowHeight">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.AdaptiveTrigger.MinWindowHeightProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.AdaptiveTrigger.MinWindowWidth">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.AdaptiveTrigger.MinWindowWidthProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Animation">
            <summary>
            Encapsulates an animation, a collection of functions that modify properties over a user-perceptible time period.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Controls.Animation.#ctor">
            <summary>
            Creates a new <see cref="T:Microsoft.Maui.Controls.Animation" /> object with default values.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Controls.Animation.#ctor(System.Action{System.Double},System.Double,System.Double,Microsoft.Maui.Easing,System.Action)">
            <summary>
            Creates a new <see cref = "T:Microsoft.Maui.Controls.Animation" /> object with the specified parameters.
            </summary>
            <param name="callback">An action that is called with successive animation values.</param>
            <param name="start"> The fraction into the current animation at which to start the animation.</param>
            <param name="end"> The fraction into the current animation at which to end the animation.</param>
            <param name="easing"> The easing function to use to transition in, out, or in and out of the animation.</param>
            <param name="finished"> An action to call when the animation is finished.</param>
        </member>
        <member name="M:Microsoft.Maui.Controls.Animation.Add(System.Double,System.Double,Microsoft.Maui.Controls.Animation)">
            <summary>
            Adds an <see cref="T:Microsoft.Maui.Controls.Animation"/> object to this <see cref="T:Microsoft.Maui.Controls.Animation"/> that begins at <paramref name="beginAt"/> and finishes at <paramref name="finishAt"/>.
            </summary>
            <param name="beginAt">The fraction into this animation at which the added child animation will begin animating.</param>
            <param name="finishAt">The fraction into this animation at which the added child animation will stop animating.</param>
            <param name="animation">The animation to add.</param>
        </member>
        <member name="M:Microsoft.Maui.Controls.Animation.Commit(Microsoft.Maui.Controls.IAnimatable,System.String,System.UInt32,System.UInt32,Microsoft.Maui.Easing,System.Action{System.Double,System.Boolean},System.Func{System.Boolean})">
            <summary>
            Runs the <paramref name="owner" /> animation with the supplied parameters.
            </summary>
            <param name="owner">The owning animation that will be animated.</param>
            <param name="name">The name, or handle, that is used to access and track the animation and its state.</param>
            <param name="rate">The time, in milliseconds, between frames.</param>
            <param name="length">The number of milliseconds over which to interpolate the animation.</param>
            <param name="easing">The easing function to use to transition in, out, or in and out of the animation.</param>
            <param name="finished">An action to call when the animation is finished.</param>
            <param name="repeat">A function that should return true if the animation should continue.</param>
        </member>
        <member name="M:Microsoft.Maui.Controls.Animation.GetCallback">
            <summary>
            Returns a callback that recursively runs the eased animation step on this <see cref="T:Microsoft.Maui.Controls.Animation" /> object and those of its children that have begun and not finished.
            </summary>
            <returns>A callback that recursively runs the eased animation step on this <see cref="T:Microsoft.Maui.Controls.Animation" /> object and those of its children that have begun and not finished.</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.Animation.Insert(System.Double,System.Double,Microsoft.Maui.Controls.Animation)">
            <summary>
            Adds an <see cref="T:Microsoft.Maui.Controls.Animation" /> object to this <see cref="T:Microsoft.Maui.Controls.Animation" /> that begins at <paramref name="beginAt" /> and finishes at <paramref name="finishAt" />.
            </summary>
            <param name="beginAt">The fraction into this animation at which the added child animation will begin animating.</param>
            <param name="finishAt">The fraction into this animation at which the added child animation will stop animating.</param>
            <param name="animation">The animation to add.</param>
        </member>
        <member name="M:Microsoft.Maui.Controls.Animation.WithConcurrent(Microsoft.Maui.Controls.Animation,System.Double,System.Double)">
            <summary>
            Adds <paramref name="animation" /> to the children of this <see cref="T:Microsoft.Maui.Controls.Animation" /> object and sets the start and end times of <paramref name="animation" /> to <paramref name="beginAt" /> and <paramref name="finishAt" />, respectively.
            </summary>
            <param name="animation">The animation to add.</param>
            <param name="beginAt">The fraction into this animation at which the added child animation will begin animating.</param>
            <param name="finishAt">The fraction into this animation at which the added child animation will stop animating.</param>
        </member>
        <member name="M:Microsoft.Maui.Controls.Animation.WithConcurrent(System.Action{System.Double},System.Double,System.Double,Microsoft.Maui.Easing,System.Double,System.Double)">
            <summary>
            Creates a new <see cref="T:Microsoft.Maui.Controls.Animation" /> object with the specified <paramref name="callback" />, and adds it to the children of this <see cref="T:Microsoft.Maui.Controls.Animation" /> object.
            </summary>
            <param name="callback">An action that is called with successive animation values.</param>
            <param name="start">The fraction into the current animation at which to start the animation.</param>
            <param name="end">The fraction into the current animation at which to end the animation.</param>
            <param name="easing">The easing function to use to transition in, out, or in and out of the animation.</param>
            <param name="beginAt">The fraction into this animation at which the added child animation will begin animating.</param>
            <param name="finishAt">The fraction into this animation at which the added child animation will stop animating.</param>
        </member>
        <member name="P:Microsoft.Maui.Controls.Animation.IsEnabled">
            <summary>
            Specifies if this animation is currently enabled.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.AnimationExtensions">
            <summary>Extension methods for <see cref="T:Microsoft.Maui.Controls.IAnimatable" /> objects.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.AnimationExtensions.AbortAnimation(Microsoft.Maui.Controls.IAnimatable,System.String)">
            <param name="self">The object on which this method will be run.</param><param name="handle">An animation key that must be unique among its sibling and parent animations for the duration of the animation.</param><summary>Stops the animation.</summary><returns>To be added.</returns><remarks>If <paramref name="handle" /> refers to an animation that belongs to this <see cref="T:Microsoft.Maui.Controls.IAnimatable" /> instance, then its tweener handlers are removed, the tweener is stopped, the animation is removed from this <see cref="T:Microsoft.Maui.Controls.IAnimatable" /> instance, and it is marked as finished. If <paramref name="handle" /> refers to one of the kinetics that belong to this <see cref="T:Microsoft.Maui.Controls.IAnimatable" /> instance, then it and its ticker are removed.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.AnimationExtensions.Animate(Microsoft.Maui.Controls.IAnimatable,System.String,Microsoft.Maui.Controls.Animation,System.UInt32,System.UInt32,Microsoft.Maui.Easing,System.Action{System.Double,System.Boolean},System.Func{System.Boolean})">
            <param name="self">The object on which this method will be run.</param><param name="name">An animation key that should be unique among its sibling and parent animations for the duration of the animation.</param><param name="animation">The animation to run.</param><param name="rate">The time, in milliseconds, between frames.</param><param name="length">The number of milliseconds over which to interpolate the animation.</param><param name="easing">The easing function to use to transision in, out, or in and out of the animation.</param><param name="finished">An action to call when the animation is finished.</param><param name="repeat">A function that returns true if the animation should continue.</param><summary>Sets the specified parameters and starts the animation.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.AnimationExtensions.Animate(Microsoft.Maui.Controls.IAnimatable,System.String,System.Action{System.Double},System.Double,System.Double,System.UInt32,System.UInt32,Microsoft.Maui.Easing,System.Action{System.Double,System.Boolean},System.Func{System.Boolean})">
            <param name="self">The object on which this method will be run.</param><param name="name">An animation key that should be unique among its sibling and parent animations for the duration of the animation.</param><param name="callback">An action that is called with successive animation values.</param><param name="start">The fraction into the current animation at which to start the animation.</param><param name="end">The fraction into the current animation at which to stop the animation.</param><param name="rate">The time, in milliseconds, between frames.</param><param name="length">The number of milliseconds over which to interpolate the animation.</param><param name="easing">The easing function to use to transision in, out, or in and out of the animation.</param><param name="finished">An action to call when the animation is finished.</param><param name="repeat">A function that returns true if the animation should continue.</param><summary>Sets the specified parameters and starts the animation.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.AnimationExtensions.Animate(Microsoft.Maui.Controls.IAnimatable,System.String,System.Action{System.Double},System.UInt32,System.UInt32,Microsoft.Maui.Easing,System.Action{System.Double,System.Boolean},System.Func{System.Boolean})">
            <param name="self">The object on which this method will be run.</param><param name="name">An animation key that should be unique among its sibling and parent animations for the duration of the animation.</param><param name="callback">An action that is called with successive animation values.</param><param name="rate">The time, in milliseconds, between frames.</param><param name="length">The number of milliseconds over which to interpolate the animation.</param><param name="easing">The easing function to use to transision in, out, or in and out of the animation.</param><param name="finished">An action to call when the animation is finished.</param><param name="repeat">A function that returns true if the animation should continue.</param><summary>Sets the specified parameters and starts the animation.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.AnimationExtensions.Animate``1(Microsoft.Maui.Controls.IAnimatable,System.String,System.Func{System.Double,``0},System.Action{``0},System.UInt32,System.UInt32,Microsoft.Maui.Easing,System.Action{``0,System.Boolean},System.Func{System.Boolean},Microsoft.Maui.Animations.IAnimationManager)">
            <typeparam name="T">To be added.</typeparam><param name="self">The object on which this method will be run.</param><param name="name">An animation key that should be unique among its sibling and parent animations for the duration of the animation.</param><param name="transform">A function that maps animation times to new time values.</param><param name="callback">An action that is called with successive animation values.</param><param name="rate">The time, in milliseconds, between frames.</param><param name="length">The number of milliseconds over which to interpolate the animation.</param><param name="easing">The easing function to use to transision in, out, or in and out of the animation.</param><param name="finished">An action to call when the animation is finished.</param><param name="repeat">A function that returns true if the animation should continue.</param><summary>Sets the specified parameters and starts the animation.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.AnimationExtensions.AnimateKinetic(Microsoft.Maui.Controls.IAnimatable,System.String,System.Func{System.Double,System.Double,System.Boolean},System.Double,System.Double,System.Action,Microsoft.Maui.Animations.IAnimationManager)">
            <param name="self">The object on which this method will be run.</param><param name="name">An animation key that should be unique among its sibling and parent animations for the duration of the animation.</param><param name="callback">An action that is called with successive animation values.</param><param name="velocity">The amount that the animation progresses in each animation step. For example, a velocity of <c>1</c> progresses at the default speed.</param><param name="drag">The amount that the progression speed is reduced per frame. Can be negative.</param><param name="finished">An action to call when the animation is finished.</param><summary>Sets the specified parameters and starts the kinetic animation.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.AnimationExtensions.AnimationIsRunning(Microsoft.Maui.Controls.IAnimatable,System.String)">
            <param name="self">The object on which this method will be run.</param><param name="handle">An animation key that must be unique among its sibling and parent animations for the duration of the animation.</param><summary>Returns a Boolean value that indicates whether or not the animation that is specified by <paramref name="handle" /> is running.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.AnimationExtensions.Interpolate(System.Double,System.Double,System.Double,System.Boolean)">
            <param name="start">The fraction into the current animation at which to start the animation.</param><param name="end">The fraction into the current animation at which to stop the animation.</param><param name="reverseVal">The inverse scale factor to use if <paramref name="reverse" /> is <see langword="true" />.</param><param name="reverse">Whether to use the inverse scale factor in <paramref name="reverseVal" /> to deinterpolate.</param><summary>Returns a function that performs a linear interpolation between <paramref name="start" /> and <paramref name="end" />.</summary><returns>A function that performs a linear interpolation between <paramref name="start" /> and <paramref name="end" />. Application developers can pass values between 0.0f and 1.0f to this function in order to recieve a value that is offset from <paramref name="start" /> or <paramref name="end" />, depending on the value of <paramref name="reverse" />, by the passed value times the distance between <paramref name="start" /> and <paramref name="end" />.</returns><remarks>If <paramref name="reverse" /> is <see langword="true" />, then the interpolation happens between <paramref name="start" /> and <paramref name="reverseVal" />.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.AnimationExtensions.Batch(Microsoft.Maui.Controls.IAnimatable)">
            <param name="self">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Application">
            <summary>Class that represents a cross-platform mobile application.</summary><remarks>
      <para>The <see cref="T:Microsoft.Maui.Controls.Application" /> class is the core of a Microsoft.Maui.Controls application. It sets the root page of the application, persists primitive type data across invocations of the application in the <see cref="P:Microsoft.Maui.Controls.Application.Properties" /> dictionary, and provides events to respond to pushing and popping of modal views. Visual studio creates this class for the developer in the appropriate project in a new Microsoft.Maui.Controls solution.</para>
      <example>
        <para>Both Visual Studio for Mac and Visual Studio create a XAML and a code-behind file for the application when the developer creates a new Microsoft.Maui.Controls solution. The following example shows a typical <c>Application</c> class, with an entry in its resource dictionary.</para>
        <code lang="XAML"><![CDATA[
<Application xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="App1.App">
  <Application.Resources>
     <Color x:Key="ButtonBackgroundColor">Red</Color>
  </Application.Resources>
</Application>]]></code>
        <code lang="csharp lang-csharp"><![CDATA[
public partial class App : Application
{
    public App()
    {
        InitializeComponent();

        MainPage = new MainPage();
    }

    protected override void OnStart()
    {
        // Handle when your app starts
    }

    protected override void OnSleep()
    {
        // Handle when your app sleeps
    }

    protected override void OnResume()
    {
        // Handle when your app resumes
    }
}
        ]]></code>
      </example>
    </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Application.#ctor">
            <summary>Initializes a new <see cref="T:Microsoft.Maui.Controls.Application" /> instance.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Application.Quit">
            <summary>Quits the application.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Application.AppLinks">
            <summary>Gets the object that developers use to register or unregister application links.</summary><value>The object that developers use to register or unregister application links.</value><remarks>It is not possible to unregister an app link on the Android platform.</remarks><related type="article" href="https://developer.xamarin.com/guides/xamarin-forms/platform-features/deep-linking/">Application Indexing and Deep Linking</related>
        </member>
        <member name="M:Microsoft.Maui.Controls.Application.SetCurrentApplication(Microsoft.Maui.Controls.Application)">
            <param name="value">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Application.Current">
            <summary>Gets the current application.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Application.MainPage">
            <summary>Gets or sets the root page of the application.</summary><value>The root page of the application.</value><remarks>This property throws an exception if the application developer attempts to set it to <see langword="null" />.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Application.Properties">
            <summary>Gets a dictionary of persistent properties for this <see cref="T:Microsoft.Maui.Controls.Application" /> object.</summary><value>A dictionary of persistent properties for the application.</value><remarks>
          <para>Developers can use this property to store persistent application state across all application code. This values in the dictionary are preserved on the device when the application is paused or shut down. Note: values saved in the properties dictionary must be primitive types, such as integers or strings. Attempting to save reference types, or collections in particular, can fail silently.</para>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Application.NavigationProxy">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Application.SetAppIndexingProvider(Microsoft.Maui.Controls.IAppIndexingProvider)">
            <param name="provider">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Application.Resources">
            <summary>Gets or sets the resource dictionary for this <see cref="T:Microsoft.Maui.Controls.Application" /> object.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Application.UserAppTheme">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Application.RequestedTheme">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Application.SavePropertiesAsync">
            <summary>Asynchronously persists the <see cref="P:Microsoft.Maui.Controls.Application.Properties" /> dictionary for the application object.</summary><returns>A task that represents the asynchronous save operation.</returns><remarks>
          <para>The developer uses this method to persist the application state that is currently stored in <see cref="P:Microsoft.Maui.Controls.Application.Properties" /> immediately, rather than waiting for a life cycle event to trigger the data to be saved to the device's permanent storage.</para>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Application.On``1">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.Controls.Application.SendOnAppLinkRequestReceived(System.Uri)">
            <param name="uri">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.AppLinkEntry">
            <summary>A deep application link in an app link search index.</summary><remarks>
      <para>For information on setting up deep application linking on the Android platform (and on using deep linking in general), see <format type="text/html"><a href="https://developer.xamarin.com/guides/xamarin-forms/platform-features/deep-linking/">Application Indexing and Deep Linking</a></format>.</para>
    </remarks><related type="article" href="https://developer.xamarin.com/guides/xamarin-forms/platform-features/deep-linking/">Application Indexing and Deep Linking</related>
        </member>
        <member name="M:Microsoft.Maui.Controls.AppLinkEntry.#ctor">
            <summary>Creates a new <see cref="T:Microsoft.Maui.Controls.AppLinkEntry" /> with default values.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.AppLinkEntry.TitleProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.AppLinkEntry.Title" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.AppLinkEntry.DescriptionProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.AppLinkEntry.Description" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.AppLinkEntry.ThumbnailProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.AppLinkEntry.Thumbnail" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.AppLinkEntry.AppLinkUriProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.AppLinkEntry.AppLinkUri" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.AppLinkEntry.IsLinkActiveProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.AppLinkEntry.IsLinkActive" /> property.</summary><remarks>To be added.</remarks><related type="article" href="https://developer.xamarin.com/guides/xamarin-forms/working-with/deep-linking/">Application Indexing and Deep Linking</related>
        </member>
        <member name="P:Microsoft.Maui.Controls.AppLinkEntry.AppLinkUri">
            <summary>Gets or sets an application-specific URI that uniquely describes content within an app.</summary><value>An application-specific URI that uniquely describes content within an app.</value><remarks>To be added.</remarks><related type="article" href="https://developer.xamarin.com/guides/xamarin-forms/working-with/deep-linking/">Application Indexing and Deep Linking</related>
        </member>
        <member name="P:Microsoft.Maui.Controls.AppLinkEntry.Description">
            <summary>Gets or sets a description that appears with the item in search results.</summary><value>The description that appears with the item in search results.</value><remarks>To be added.</remarks><related type="article" href="https://developer.xamarin.com/guides/xamarin-forms/working-with/deep-linking/">Application Indexing and Deep Linking</related>
        </member>
        <member name="P:Microsoft.Maui.Controls.AppLinkEntry.IsLinkActive">
            <summary>Gets or sets a value that tells whether the item that is identified by the link entry is currently open.</summary><value>A value that tells whether the item that is identified by the link entry is currently open.</value><remarks>Application developers can set this value in <see cref="E:Microsoft.Maui.Controls.Application.PageAppearing" /> and <see cref="E:Microsoft.Maui.Controls.Application.PageDisappearing" /> methods to control whether the app link is shown for indexing or Handoff.</remarks><related type="article" href="https://developer.xamarin.com/guides/xamarin-forms/working-with/deep-linking/">Application Indexing and Deep Linking</related>
        </member>
        <member name="P:Microsoft.Maui.Controls.AppLinkEntry.KeyValues">
            <summary>Gets a dictionary of application-specific key-value pairs.</summary><value>A dictionary of standard and application-specific key-value pairs that is used for Handoff on the iOS platform.</value><remarks>The standard keys are <c>contentType</c>, <c>associatedWebPage</c>, and <c>shouldAddToPublicIndex</c>.</remarks><related type="article" href="https://developer.xamarin.com/guides/xamarin-forms/working-with/deep-linking/">Application Indexing and Deep Linking</related>
        </member>
        <member name="P:Microsoft.Maui.Controls.AppLinkEntry.Thumbnail">
            <summary>Gets or sets a small image that appears with the item in search results.</summary><value>A small image that appears with the item in search results</value><remarks>To be added.</remarks><related type="article" href="https://developer.xamarin.com/guides/xamarin-forms/working-with/deep-linking/">Application Indexing and Deep Linking</related>
        </member>
        <member name="P:Microsoft.Maui.Controls.AppLinkEntry.Title">
            <summary>Gets or sets the title of the item.</summary><value>The title of the item.</value><remarks>To be added.</remarks><related type="article" href="https://developer.xamarin.com/guides/xamarin-forms/working-with/deep-linking/">Application Indexing and Deep Linking</related>
        </member>
        <member name="M:Microsoft.Maui.Controls.AppLinkEntry.FromUri(System.Uri)">
            <param name="uri">A URI that can be parsed by the target appliction to recreate a specific state.</param><summary>Creates and returns a new <see cref="T:Microsoft.Maui.Controls.AppLinkEntry" /> for the specified <paramref name="uri" />.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.AppLinkEntry.ToString">
            <summary>Returns a string representation of this <see cref="T:Microsoft.Maui.Controls.AppLinkEntry" />.</summary><returns>A  string representation of this <see cref="T:Microsoft.Maui.Controls.AppLinkEntry" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.AppThemeChangedEventArgs">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.AppThemeChangedEventArgs.#ctor(Microsoft.Maui.ApplicationModel.AppTheme)">
            <param name="appTheme">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.AppThemeChangedEventArgs.RequestedTheme">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.AutomationProperties">
            <summary>Contains both abbreviated and detailed UI information that is supplied to accessibility services.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.AutomationProperties.HelpTextProperty">
            <summary>Backing store for the attached property that contains the detailed description of the UI element and its behavior.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.AutomationProperties.IsInAccessibleTreeProperty">
            <summary>Backing store for the attached property that contains a Boolean value that tells whether the element is available to the accessible app.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.AutomationProperties.LabeledByProperty">
            <summary>Backing store for the attached property that holds a reference to the element that labels the element that is being made accessible.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.AutomationProperties.NameProperty">
            <summary>Backing store for the attached property that contains the brief description of the UI element</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.AutomationProperties.GetHelpText(Microsoft.Maui.Controls.BindableObject)">
            <param name="bindable">The bindable object whose help text to get.</param><summary>Returns the help text, if any, for the bindable object.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.AutomationProperties.GetIsInAccessibleTree(Microsoft.Maui.Controls.BindableObject)">
            <param name="bindable">The bindable object whose status to check.</param><summary>Gets a nullable Boolean value that tells whether the bindable object is available to the accessibility system.</summary><returns>
          <see langword="true" /> if <paramref name="bindable" /> is available to the accessibility system. <see langword="false" /> or <see langword="null" /> if it is not.</returns><remarks>Developers use <see cref="M:Microsoft.Maui.Controls.AutomationProperties.SetIsInAccessibleTree(Microsoft.Maui.Controls.BindableObject,System.Nullable{System.Boolean})" /> to set this attached property to <see langword="true" /> in order to make the bindable object available to the accessibility system.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.AutomationProperties.GetLabeledBy(Microsoft.Maui.Controls.BindableObject)">
            <param name="bindable">The object whose label to find.</param><summary>Returns the element that labels <paramref name="bindable" />, if <paramref name="bindable" /> does not label itself and if another element describes it in the UI.</summary><returns>The element that labels <paramref name="bindable" />, if present.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.AutomationProperties.GetName(Microsoft.Maui.Controls.BindableObject)">
            <param name="bindable">The object whose name to get.</param><summary>Returns the short, developer-specified, introductory name of the element, such as "Progress Indicator" or "Button".</summary><returns>The short, introdctory name of the element.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.AutomationProperties.SetHelpText(Microsoft.Maui.Controls.BindableObject,System.String)">
            <param name="bindable">The object whose help text to set.</param><param name="value">The new help text value.</param><summary>Sets the help text for <paramref name="bindable" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.AutomationProperties.SetIsInAccessibleTree(Microsoft.Maui.Controls.BindableObject,System.Nullable{System.Boolean})">
            <param name="bindable">The object ot add or remove from the accessibility system.</param><param name="value">
          <see langword="true" /> to make <paramref name="bindable" /> visible to the accessibility system. <see langword="false" /> to remove it from the system.</param><summary>Sets a Boolean value that tells whether the bindable object is available to the accessibility system.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.AutomationProperties.SetLabeledBy(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.VisualElement)">
            <param name="bindable">The object whose label to set.</param><param name="value">The visual element that will name <paramref name="bindable" />, or <see langword="null" /> to make <paramref name="bindable" /> its own label.</param><summary>Sets another element, such as a <see cref="T:Microsoft.Maui.Controls.Label" /> as the label for <paramref name="bindable" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.AutomationProperties.SetName(Microsoft.Maui.Controls.BindableObject,System.String)">
            <param name="bindable">The object whose name to set.</param><param name="value">The new name.</param><summary>Sets the short, developer-specified, introductory name of the element, such as "Progress Indicator" or "Button".</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.BackButtonPressedEventArgs">
            <summary>Internal use only. Contains arguments for the event that is raised when a back button is pressed.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.BackButtonPressedEventArgs.Handled">
            <summary>Internal use only. Gets or sets a value that indicates whether the back button event has already been handled.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.BaseMenuItem">
            <summary>Base class for menu items.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.BindableLayout">
            <summary>Static class specifying the attached properties that allow a <see cref="T:Microsoft.Maui.Controls.ILayout" /> work with a data-bound <see cref="T:System.Collections.IEnumerable" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.BindableLayout.ItemsSourceProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.BindableLayout.ItemTemplateProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.BindableLayout.ItemTemplateSelectorProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.BindableLayout.EmptyViewProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.BindableLayout.EmptyViewTemplateProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.BindableLayout.SetItemsSource(Microsoft.Maui.Controls.BindableObject,System.Collections.IEnumerable)">
            <param name="b">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.BindableLayout.GetItemsSource(Microsoft.Maui.Controls.BindableObject)">
            <param name="b">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.BindableLayout.SetItemTemplate(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.DataTemplate)">
            <param name="b">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.BindableLayout.GetItemTemplate(Microsoft.Maui.Controls.BindableObject)">
            <param name="b">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.BindableLayout.SetItemTemplateSelector(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.DataTemplateSelector)">
            <param name="b">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.BindableLayout.GetItemTemplateSelector(Microsoft.Maui.Controls.BindableObject)">
            <param name="b">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.BindableLayout.GetEmptyView(Microsoft.Maui.Controls.BindableObject)">
            <param name="b">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.BindableLayout.SetEmptyView(Microsoft.Maui.Controls.BindableObject,System.Object)">
            <param name="b">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.BindableLayout.GetEmptyViewTemplate(Microsoft.Maui.Controls.BindableObject)">
            <param name="b">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.BindableLayout.SetEmptyViewTemplate(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.DataTemplate)">
            <param name="b">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.BindableObject">
            <summary>Provides a mechanism by which application developers can propagate changes that are made to data in one object to another, by enabling validation, type coercion, and an event system. <see cref="T:Microsoft.Maui.Controls.BindableProperty" />.</summary><remarks>
      <para>The <see cref="T:Microsoft.Maui.Controls.BindableObject" /> class provides a data storage mechanism that enables the application developer to synchronize data between objects in response to changes, for example, between the View and View Model in the MVVM design pattern. All of the visual elements in the <see cref="N:Microsoft.Maui.Controls" /> namespace inherit from <see cref="T:Microsoft.Maui.Controls.BindableObject" /> class, so they can all be used to bind the data behind their user interface elements to View Models that are supplied by the application developer.</para>
      <example>
        <para>To bind the data behind a property in a <see cref="T:Microsoft.Maui.Controls.BindableObject" />, typically a view, to a property in the View Model, application developers should do the following.</para>
        <para> First, the developer creates a pair of properties on the view, one of which is a <see cref="T:Microsoft.Maui.Controls.BindableProperty" />, and the other of which is a property of whatever type is required. In the code below, <c>MockBindableObject</c> stands in for what would typically be a user interface object in production code. Application developers should note the use of <see cref="M:Microsoft.Maui.Controls.BindableObject.SetValue(Microsoft.Maui.Controls.BindableProperty,System.Object)" /> and <see cref="M:Microsoft.Maui.Controls.BindableObject.GetValue(Microsoft.Maui.Controls.BindableProperty)" /> to get and set the value on the bound property; The property of the desired type provides the interface that the target of the bound property will implement.</para>
        <code lang="csharp lang-csharp"><![CDATA[
class MockBindableObject : BindableObject
{
    // App developers should use the method below in production code for 
    // better performance
    public static readonly BindableProperty BoundNameProperty =
         BindableProperty.Create ("Foo", typeof (string),
                                  typeof (MockBindableObject),
                                  default(string));
    
    // App developers should use the method below during development for
    // design-time error checking as the codebase evolves.
    // public static readonly BindableProperty FooProperty 
    //     = BindableProperty.Create<MockBindableObject, string> (
    //         o => o.Foo, default (string)
    //     );
    
    public string BoundName
    {
        get { return (string) GetValue (BoundNameProperty); }
        set { SetValue (BoundNameProperty, value); }
    }
}
    ]]></code>
        <para>Second, the developer creates the implementation for the bound property in a class that implements the <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> interface. In the MVVM design pattern, this is typically done by the View Model. Application developers should implement the <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> interface on classes that they want to use as View Models. In the example below, app developers should take note of the idiomatic way that the <c>Name</c> property is implemented to, first, ensure that the property actually changed and return if it did not, and only then assign the value and call the <see cref="M:Microsoft.Maui.Controls.BindableObject.OnPropertyChanged(System.String)" /> method. Additionally, the <c>Name</c> property in the example below merely wraps the <c>name</c> field. In practice, the application developer may choose a different model in which to store application data.</para>
        <code lang="csharp lang-csharp"><![CDATA[
class MockViewModel : INotifyPropertyChanged
{
    string name;
    
    public string Name
    {
        get { return name; }
        set
        {
            // OnPropertyChanged should not be called if the property value
            // does not change.
            if (name == value)
                return;
            name = value;
            OnPropertyChanged ();
        }
    }
    
    public event PropertyChangedEventHandler PropertyChanged;
    
    void OnPropertyChanged (string propertyName = null)
    {
        PropertyChangedEventHandler handler = PropertyChanged;
        if (handler != null)
            handler (this, new PropertyChangedEventArgs (propertyName));
    }
}]]></code>
        <para>Third, and finally, the application developer binds an instance of a BindableObject to an instance that implements INotifyPropertyChanged. In the vocabulary of the MVVM design pattern, this is "binding an instance of the View to an instance of a View Model." Once this step is complete, changes in the data are propagated between the View and View Model in a way that is determined by the value of the <see cref="T:Microsoft.Maui.Controls.BindingMode" /> enumeration, if any, that was passed during the binding step.</para>
        <para>The code below, when included in a project that reference the classes above, creates an instance of both <c>MockBindable</c> and <c>MockViewModel</c>, performs some intitialization, sets the binding, and then demonstrates a one-way binding. The code below runs without throwing an exception.</para>
        <code lang="csharp lang-csharp"><![CDATA[
public static void OneWayDemo ()
{
    var view = new MockBindableObject ();
    var viewModel = new MockViewModel ();
    
    // Pre-load the ViewModel, for demonstration purposes
    viewModel.Name = "Testing";
    
    // Create a one-way (default) binding
    view.SetBinding (MockBindableObject.BoundNameProperty, new Binding ("Name"));
    
    // App developers should only set the binding context after all
    // calls to SetBinding() have been made, for performance reasons.
    view.BindingContext = viewModel;
    
    // In a one way binding, the ViewModel value will be used to update
    // the values in the View during initialization
    if (view.BoundName != "Testing")
        throw new Exception ();
    
    view.BoundName = "gnitseT";
    
    // in a one way binding, changes to the View will NOT update the ViewModel
    if (viewModel.Name == "gnitseT")
        throw new Exception ();
}]]></code>
      </example>
    </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.BindableObject.Dispatcher">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.BindableObject.#ctor">
            <summary>Initializes a new instance of the BindableObject class.</summary><remarks>The <see cref="T:Microsoft.Maui.Controls.BindableObject" /> class is abstract, and this constructor is protected. It is invoked by child constructors.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.BindableObject.BindingContextProperty">
            <summary>Implements the bound property whose interface is provided by the <see cref="P:Microsoft.Maui.Controls.BindableObject.BindingContext" /> property.</summary><remarks>
          Typically, the runtime performance is better if  <see cref="P:Microsoft.Maui.Controls.BindableObject.BindingContext" /> is set after all calls to <see cref="M:Microsoft.Maui.Controls.BindableObject.SetBinding(Microsoft.Maui.Controls.BindableProperty,Microsoft.Maui.Controls.BindingBase)" /> have been made.
          <para>The following example shows how to set a binding to the BindingContext:</para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
class PersonView : ContentView 
{
  public PersonView ()
  {
    var label = new Label ();
    label.SetBinding (Label.TextProperty, "Name");
    Content = label;
  }
}
    
var stack = new StackLayout {
  Orientation = StackOrientation.Vertical,  
};
    
var jane = new PersonView ();
jane.SetBinding (BindableObject.BindingContext, "Jane");
stack.Children.Add (jane);
    
var john = new PersonView ();
john.SetBinding (BindableObject.BindingContext, "John");
stack.Children.Add (john);
    
stack.BindingContext = new {Jane = new {Name = "Jane Doe"}, John = new {Name = "John Doe"}};
        ]]></code>
          </example>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.BindableObject.BindingContext">
            <summary>Gets or sets object that contains the properties that will be targeted by the bound properties that belong to this <see cref="T:Microsoft.Maui.Controls.BindableObject" />.</summary><value>An <see cref="T:System.Object" /> that contains the properties that will be targeted by the bound properties that belong to this <see cref="T:Microsoft.Maui.Controls.BindableObject" />. This is a bindable property.</value><remarks>
          Typically, the runtime performance is better if  <see cref="P:Microsoft.Maui.Controls.BindableObject.BindingContext" /> is set after all calls to <see cref="M:Microsoft.Maui.Controls.BindableObject.SetBinding(Microsoft.Maui.Controls.BindableProperty,Microsoft.Maui.Controls.BindingBase)" /> have been made.
          <para>The following example shows how to apply a BindingContext and a Binding to a Label (inherits from BindableObject):</para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
var label = new Label ();
label.SetBinding (Label.TextProperty, "Name");
label.BindingContext = new {
    Name = "John Doe",
    Company = "Xamarin"
};

Debug.WriteLine (label.Text); // prints "John Doe"
        ]]></code>
          </example>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.BindableObject.ClearValue(Microsoft.Maui.Controls.BindableProperty)">
            <param name="property">The BindableProperty to clear.</param><summary>Clears any value set by <see cref="M:Microsoft.Maui.Controls.BindableObject.SetValue*" /> for <paramref name="property" />.</summary><remarks>
          <para>Calling this method on a readonly property will result in an InvalidOperationException.</para>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.BindableObject.ClearValue(Microsoft.Maui.Controls.BindablePropertyKey)">
            <param name="propertyKey">The BindablePropertyKey that identifies the <see cref="T:Microsoft.Maui.Controls.BindableProperty" /> to clear.</param><summary>Clears any value set by <see cref="M:Microsoft.Maui.Controls.BindableObject.SetValue*" /> for the property that is identified by <paramref name="propertyKey" />.</summary><remarks>
          <para>Calling this method on a readonly property will result in an InvalidOperationException.</para>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.BindableObject.GetValue(Microsoft.Maui.Controls.BindableProperty)">
            <param name="property">The BindableProperty for which to get the value.</param><summary>Returns the value that is contained in the BindableProperty.</summary><returns>The value that is contained in the <see cref="T:Microsoft.Maui.Controls.BindableProperty" />.</returns><remarks>
          <para>
            <see cref="M:Microsoft.Maui.Controls.BindableObject.GetValue(Microsoft.Maui.Controls.BindableProperty)" /> and <see cref="M:Microsoft.Maui.Controls.BindableObject.SetValue*" /> are used to access the values of properties that are implemented by a <see cref="T:Microsoft.Maui.Controls.BindableProperty" />. That is, application developers typically provide an interface for a bound property by defining <see langword="public" /> property whose <see langword="get" /> accessor casts  the result of <see cref="M:Microsoft.Maui.Controls.BindableObject.GetValue(Microsoft.Maui.Controls.BindableProperty)" /> to the appropriate type and returns it, and whose <see langword="set" /> accessor uses <see cref="M:Microsoft.Maui.Controls.BindableObject.SetValue*" /> to set the value on the correct property. Application developers should perform no other steps in the public property that defines the interface of the bound property.</para>
          <example>
            <para>The following example shows how to create a bindable property interface for an implementation that will be provided in the target property when the binding is made at run time.</para>
            <code lang="csharp lang-csharp"><![CDATA[
class MyBindable : BindableObject
{
  public static readonly BindableProperty MyProperty = 
    BindableProperty.Create<MyBindable, string> (w => w.My, default(string));
    
  public string My {
    get { return (string)GetValue (MyProperty); }
    set { SetValue (MyProperty, value); } 
  }
}
        ]]></code>
          </example>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.BindableObject.IsSet(Microsoft.Maui.Controls.BindableProperty)">
            <param name="targetProperty">The property to check.</param><summary>Returns <see langword="true" /> if the target property exists and has been set.</summary><returns>
          <see langword="true" /> if the target property exists and has been set. If the property has not been set, returns <see langword="false" />. If the <paramref name="targetProperty" /> is null, an <c>ArgumentNullException</c> is thrown.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.BindableObject.RemoveBinding(Microsoft.Maui.Controls.BindableProperty)">
            <param name="property">The BindableProperty from which to remove bindings.</param><summary>Removes a previously set binding.</summary><remarks>
          <para>This method succeeds even if <paramref name="property" /> is not bound.</para>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.BindableObject.SetBinding(Microsoft.Maui.Controls.BindableProperty,Microsoft.Maui.Controls.BindingBase)">
            <param name="targetProperty">The BindableProperty on which to set a binding.</param><param name="binding">The binding to set.</param><summary>Assigns a binding to a property.</summary><remarks>
          <para>The following example shows how to set a binding to a property:</para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
var label = new Label ();
label.SetBinding (Label.TextProperty, new Binding ("Name"));
label.BindingContext = new {
    Name = "John Doe",
    Company = "Xamarin"
};

Debug.WriteLine (label.Text); // prints "John Doe"
        ]]></code>
          </example>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.BindableObject.SetInheritedBindingContext(Microsoft.Maui.Controls.BindableObject,System.Object)">
            <param name="bindable">The object on which to set the inherited binding context.</param><param name="value">The inherited context to set.</param><summary>Sets the inherited context to a nested element.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.BindableObject.SetValue(Microsoft.Maui.Controls.BindableProperty,System.Object)">
            <param name="property">The BindableProperty on which to assign a value.</param><param name="value">The value to set.</param><summary>Sets the value of the specified property.</summary><remarks>
          <para>
            <see cref="M:Microsoft.Maui.Controls.BindableObject.GetValue(Microsoft.Maui.Controls.BindableProperty)" /> and <see cref="M:Microsoft.Maui.Controls.BindableObject.SetValue*" /> are used to access the values of properties that are implemented by a <see cref="T:Microsoft.Maui.Controls.BindableProperty" />. That is, application developers typically provide an interface for a bound property by defining <see langword="public" /> property whose <see langword="get" /> accessor casts  the result of <see cref="M:Microsoft.Maui.Controls.BindableObject.GetValue(Microsoft.Maui.Controls.BindableProperty)" /> to the appropriate type and returns it, and whose <see langword="set" /> accessor uses <see cref="M:Microsoft.Maui.Controls.BindableObject.SetValue*" /> to set the value on the correct property. Application developers should perform no other steps in the public property that defines the interface of the bound property.</para>
          <example>
            <para>The following example shows how to create a bindable property interface for an implementation that will be provided in the target property when the binding is made at run time.</para>
            <code lang="csharp lang-csharp"><![CDATA[
class MyBindable : BindableObject
{
    public static readonly BindableProperty MyProperty = 
      BindableProperty.Create<MyBindable, string> (w => w.My, default(string));
    
    public string My {
      get { return (string)GetValue (MyProperty); }
      set { SetValue (MyProperty, value); } 
    }
}
          ]]></code>
          </example>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.BindableObject.SetValue(Microsoft.Maui.Controls.BindablePropertyKey,System.Object)">
            <param name="propertyKey">The BindablePropertyKey on which to assign a value.</param><param name="value">The value to set.</param><summary>Sets the value of the propertyKey.</summary><remarks>
          <para>This method and <see cref="T:Microsoft.Maui.Controls.BindablePropertyKey" /> are useful to implement BindableProperties with limited write access. The write access is limited to the scope of the BindablePropertyKey.</para>
          <para>The following example shows how to declare a BindableProperty with "internal" write access.</para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
class MyBindable : BindableObject
{
  internal static readonly BindablePropertyKey MyPropertyKey = 
    BindableProperty.CreateReadOnly<MyBindable, string> (w => w.My, default(string));
  public static readonly BindableProperty MyProperty = MyPropertyKey.BindableProperty;
    
  public string My {
    get { return (string)GetValue (MyProperty); }
    internal set { SetValue (MyPropertyKey, value); } 
  }
}
        ]]></code>
          </example>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.BindableObject.SetValueCore(Microsoft.Maui.Controls.BindableProperty,System.Object,Microsoft.Maui.Controls.Internals.SetValueFlags)">
            <param name="property">For internal use by the Microsoft.Maui.Controls platform.</param><param name="value">For internal use by the Microsoft.Maui.Controls platform.</param><param name="attributes">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.BindableObject.CoerceValue(Microsoft.Maui.Controls.BindableProperty)">
            <param name="property">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.BindableObject.CoerceValue(Microsoft.Maui.Controls.BindablePropertyKey)">
            <param name="propertyKey">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.BindableObjectExtensions">
            <summary>Contains convenience extension methods for <see cref="T:Microsoft.Maui.Controls.BindableObject" />.</summary><remarks>
    </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.BindableObjectExtensions.SetBinding(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.BindableProperty,System.String,Microsoft.Maui.Controls.BindingMode,Microsoft.Maui.Controls.IValueConverter,System.String)">
            <param name="self">The <see cref="T:Microsoft.Maui.Controls.BindableObject" />.</param><param name="targetProperty">The BindableProperty on which to set a binding.</param><param name="path">A <see cref="T:System.String" /> indicating the property path to bind to.</param><param name="mode">The <see cref="T:Microsoft.Maui.Controls.BindingMode" /> for the binding. This parameter is optional. Default is <see cref="F:Microsoft.Maui.Controls.BindingMode.Default" />.</param><param name="converter">An <see cref="T:Microsoft.Maui.Controls.IValueConverter" /> for the binding. This parameter is optional. Default is <see langword="null" />.</param><param name="stringFormat">A string used as stringFormat for the binding. This parameter is optional. Default is <see langword="null" />.</param><summary>Creates and applies a binding to a property.</summary><remarks>
          <para>The following example shows how to use the extension method to set a binding.</para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
public class PersonViewModel
{
    public string Name { get; set; }
    public string Company { get; set; }
}

// ...

var vm = new PersonViewModel {
    Name = "John Doe", 
    Company = "Xamarin"
}

var label = new Label ();
label.SetBinding (Label.TextProperty, "Name"); // "Name" is the property on the view model
label.BindingContext = vm;

Debug.WriteLine (label.Text); // prints "John Doe"
      ]]></code>
          </example>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.BindableObjectExtensions.SetAppThemeColor(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.BindableProperty,Microsoft.Maui.Graphics.Color,Microsoft.Maui.Graphics.Color)">
            <param name="self">To be added.</param><param name="targetProperty">To be added.</param><param name="light">To be added.</param><param name="dark">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.BindableProperty">
            <summary>A BindableProperty is a backing store for properties allowing bindings on <see cref="T:Microsoft.Maui.Controls.BindableObject" />.</summary><remarks>
    </remarks><related type="article" href="https://devblogs.microsoft.com/xamarin/introduction-to-data-binding/">Introduction To Data Binding</related>
        </member>
        <member name="F:Microsoft.Maui.Controls.BindableProperty.UnsetValue">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.BindableProperty.DeclaringType">
            <summary>Gets the type declaring the BindableProperty</summary><value>
        </value><remarks>Unused</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.BindableProperty.DefaultBindingMode">
            <summary>Gets the default BindingMode.</summary><value>
        </value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.BindableProperty.DefaultValue">
            <summary>Gets the default value for the BindableProperty.</summary><value>
        </value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.BindableProperty.IsReadOnly">
            <summary>Gets a value indicating if the BindableProperty is created form a BindablePropertyKey.</summary><value>
        </value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.BindableProperty.PropertyName">
            <summary>Gets the property name.</summary><value>
        </value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.BindableProperty.ReturnType">
            <summary>Gets the type of the BindableProperty.</summary><value>
        </value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.BindableProperty.Create(System.String,System.Type,System.Type,System.Object,Microsoft.Maui.Controls.BindingMode,Microsoft.Maui.Controls.BindableProperty.ValidateValueDelegate,Microsoft.Maui.Controls.BindableProperty.BindingPropertyChangedDelegate,Microsoft.Maui.Controls.BindableProperty.BindingPropertyChangingDelegate,Microsoft.Maui.Controls.BindableProperty.CoerceValueDelegate,Microsoft.Maui.Controls.BindableProperty.CreateDefaultValueDelegate)">
            <param name="propertyName">The name of the BindableProperty.</param><param name="returnType">The type of the property.</param><param name="declaringType">The type of the declaring object.</param><param name="defaultValue">The default value for the property.</param><param name="defaultBindingMode">The BindingMode to use on SetBinding() if no BindingMode is given. This parameter is optional. Default is BindingMode.OneWay.</param><param name="validateValue">A delegate to be run when a value is set. This parameter is optional. Default is null.</param><param name="propertyChanged">A delegate to be run when the value has changed. This parameter is optional. Default is null.</param><param name="propertyChanging">A delegate to be run when the value will change. This parameter is optional. Default is null.</param><param name="coerceValue">A delegate used to coerce the range of a value. This parameter is optional. Default is null.</param><param name="defaultValueCreator">A Func used to initialize default value for reference types.</param><summary>Creates a new instance of the BindableProperty class.</summary><returns>A newly created BindableProperty.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.BindableProperty.CreateAttached(System.String,System.Type,System.Type,System.Object,Microsoft.Maui.Controls.BindingMode,Microsoft.Maui.Controls.BindableProperty.ValidateValueDelegate,Microsoft.Maui.Controls.BindableProperty.BindingPropertyChangedDelegate,Microsoft.Maui.Controls.BindableProperty.BindingPropertyChangingDelegate,Microsoft.Maui.Controls.BindableProperty.CoerceValueDelegate,Microsoft.Maui.Controls.BindableProperty.CreateDefaultValueDelegate)">
            <param name="propertyName">The name of the BindableProperty.</param><param name="returnType">The type of the property.</param><param name="declaringType">The type of the declaring object.</param><param name="defaultValue">The default value for the property.</param><param name="defaultBindingMode">The BindingMode to use on SetBinding() if no BindingMode is given. This parameter is optional. Default is BindingMode.OneWay.</param><param name="validateValue">A delegate to be run when a value is set. This parameter is optional. Default is null.</param><param name="propertyChanged">A delegate to be run when the value has changed. This parameter is optional. Default is null.</param><param name="propertyChanging">A delegate to be run when the value will change. This parameter is optional. Default is null.</param><param name="coerceValue">A delegate used to coerce the range of a value. This parameter is optional. Default is null.</param><param name="defaultValueCreator">A Func used to initialize default value for reference types.</param><summary>Creates a new instance of the BindableProperty class for an attached property.</summary><returns>A newly created attached BindableProperty.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.BindableProperty.CreateAttachedReadOnly(System.String,System.Type,System.Type,System.Object,Microsoft.Maui.Controls.BindingMode,Microsoft.Maui.Controls.BindableProperty.ValidateValueDelegate,Microsoft.Maui.Controls.BindableProperty.BindingPropertyChangedDelegate,Microsoft.Maui.Controls.BindableProperty.BindingPropertyChangingDelegate,Microsoft.Maui.Controls.BindableProperty.CoerceValueDelegate,Microsoft.Maui.Controls.BindableProperty.CreateDefaultValueDelegate)">
            <param name="propertyName">The name of the BindableProperty.</param><param name="returnType">The type of the property.</param><param name="declaringType">The type of the declaring object.</param><param name="defaultValue">The default value for the property.</param><param name="defaultBindingMode">The BindingMode to use on SetBinding() if no BindingMode is given. This parameter is optional. Default is BindingMode.OneWay.</param><param name="validateValue">A delegate to be run when a value is set. This parameter is optional. Default is null.</param><param name="propertyChanged">A delegate to be run when the value has changed. This parameter is optional. Default is null.</param><param name="propertyChanging">A delegate to be run when the value will change. This parameter is optional. Default is null.</param><param name="coerceValue">A delegate used to coerce the range of a value. This parameter is optional. Default is null.</param><param name="defaultValueCreator">A Func used to initialize default value for reference types.</param><summary>Creates a new instance of the BindableProperty class for attached read-only properties.</summary><returns>A newly created attached read-only BindableProperty.</returns><remarks>
          <para>Attached properties are bindable properties that are bound to an object other than their parent. Often, they are used for child items in tables and grids, where data about the location of an item is maintained by its parent, but must be accessed from the child item itself.</para>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.BindableProperty.CreateReadOnly(System.String,System.Type,System.Type,System.Object,Microsoft.Maui.Controls.BindingMode,Microsoft.Maui.Controls.BindableProperty.ValidateValueDelegate,Microsoft.Maui.Controls.BindableProperty.BindingPropertyChangedDelegate,Microsoft.Maui.Controls.BindableProperty.BindingPropertyChangingDelegate,Microsoft.Maui.Controls.BindableProperty.CoerceValueDelegate,Microsoft.Maui.Controls.BindableProperty.CreateDefaultValueDelegate)">
            <param name="propertyName">The name of the BindableProperty.</param><param name="returnType">The type of the property.</param><param name="declaringType">The type of the declaring object.</param><param name="defaultValue">The default value for the property.</param><param name="defaultBindingMode">The BindingMode to use on SetBinding() if no BindingMode is given. This parameter is optional. Default is BindingMode.OneWay.</param><param name="validateValue">A delegate to be run when a value is set. This parameter is optional. Default is null.</param><param name="propertyChanged">A delegate to be run when the value has changed. This parameter is optional. Default is null.</param><param name="propertyChanging">A delegate to be run when the value will change. This parameter is optional. Default is null.</param><param name="coerceValue">A delegate used to coerce the range of a value. This parameter is optional. Default is null.</param><param name="defaultValueCreator">A Func used to initialize default value for reference types.</param><summary>Creates a new instance of the BindablePropertyKey class.</summary><returns>
        </returns><remarks>To be added.</remarks><para>Attached properties are bindable properties that are bound to an object other than their parent. Often, they are used for child items in tables and grids, where data about the location of an item is maintained by its parent, but must be accessed from the child item itself.</para>
        </member>
        <member name="T:Microsoft.Maui.Controls.BindablePropertyConverter">
            <summary>A <see cref="T:System.ComponentModel.TypeConverter" /> for bindable properties.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.BindablePropertyKey">
            <summary>The secret key to a BindableProperty, used to implement a BindableProperty with restricted write access.</summary><remarks>
      <para>The following example shows the creation of a BindablePropertyKey. Write access is <see langword="internal" /> while read access is <see langword="public" />.</para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[
class Bindable : BindableObject
{
  internal static readonly BindablePropertyKey FooPropertyKey = 
    BindableProperty.CreateReadOnly<Bindable, string> (w => w.Foo, default(string));
    
  public static readonly BindableProperty FooProperty = FooPropertyKey.BindableProperty;
    
  public string Foo {
    get { return (string)GetValue (FooProperty); }
    internal set { SetValue (FooPropertyKey, value); } 
  }
}
      ]]></code>
      </example>
    </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.BindablePropertyKey.BindableProperty">
            <summary>Gets the BindableProperty.</summary><value>A BindableProperty used for read access.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Binding">
            <summary>A single 1:1 immutable data binding.</summary><remarks>This class is immutable.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Binding.#ctor">
            <summary>Constructs and initializes a new instance of the <see cref="T:Microsoft.Maui.Controls.Binding" /> class.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Binding.#ctor(System.String,Microsoft.Maui.Controls.BindingMode,Microsoft.Maui.Controls.IValueConverter,System.Object,System.String,System.Object)">
            <summary>Constructs and initializes a new instance of the <see cref="T:Microsoft.Maui.Controls.Binding" /> class.</summary><remarks>To be added.</remarks><param name="path">The property path.</param><param name="mode">The binding mode. This property is optional. Default is <see cref="F:Microsoft.Maui.Controls.BindingMode.Default" />.</param><param name="converter">The converter. This parameter is optional. Default is <see langword="null" />.</param><param name="converterParameter">An user-defined parameter to pass to the converter. This parameter is optional. Default is <see langword="null" />.</param><param name="stringFormat">A String format. This parameter is optional. Default is <see langword="null" />.</param><param name="source">An object used as the source for this binding. This parameter is optional. Default is <see langword="null" />.</param><summary>Constructs and initializes a new instance of the <see cref="T:Microsoft.Maui.Controls.Binding" /> class.</summary><remarks>
          <para>The following example shows how to set a binding to a property with a BindingMode and Converter:</para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
public class PersonViewModel
{
  public string Name { get; set; }
  public string Company { get; set; }
}
    
public class ReverseConverter : IValueConverter
{
  public object Convert (object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)
  {
    var s = value as string;
    if (s == null)
      return value;
    return new string (s.Reverse ().ToArray ());
  }
    
  public object ConvertBack (object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)
  {
    var s = value as string;
    if (s == null)
      return value;
    return new string (s.Reverse ().ToArray ());
  }
}
    
var label = new Label ();
PersonViewModel person;
label.BindingContext = person = new PersonViewModel { Name = "John Doe", Company= "Xamarin" };
label.SetBinding (Label.TextProperty, new Binding ("Name", mode: BindingMode.TwoWay, converter: new ReverseConverter ()));
Debug.WriteLine (label.Text); //prints "eoD nhoJ". ReverseConverter.Convert () is invoked in this case.
    
label.Text = "ooF";
Debug.WriteLine (person.Name); //prints "Foo". ReverseConverter.ConvertBack () is invoked in this case. The label Text change is propagated back as the BindingMode is TwoWay.
        ]]></code>
          </example>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Binding.Converter">
            <summary>Gets or sets the converter to be used for this binding ?</summary><value>An IValueConverter, or <see langword="null" />.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Binding.ConverterParameter">
            <summary>Gets or sets the parameter passed as argument to the converter.</summary><value>An object, or <see langword="null" />.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Binding.Path">
            <summary>Gets or sets the path of the property</summary><value>A string indicating the path to the property.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Binding.Source">
            <summary>Gets or sets the source of the binding.</summary><value>An object used as the binding source.</value><remarks>If the Source is not null, the BindingContext is ignored, and the Source is used instead. This allows to set a source for a single Binding, and not for all the Bindings applied to the BindableObject.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Binding.DoNothing">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Binding.UpdateSourceEventName">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.BindingBase">
            <summary>An abstract class that provides a <see cref="T:Microsoft.Maui.Controls.BindingMode" /> and a formatting option.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.BindingBase.Mode">
            <summary>Gets or sets the mode for this binding.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.BindingBase.StringFormat">
            <summary>Gets or sets the string format for this binding.</summary><value>
          A string specifying the format for the value of this binding.
        </value><remarks>
          <para>
            Used for providing a display format for the binding value or compositing the value with other
            text. Implementors of <see cref="T:Microsoft.Maui.Controls.BindingBase" /> decide how the string format is utilized, but
            all support standard <see cref="M:System.String.Format*" /> conventions.
          </para>
          <para>
            <see cref="T:Microsoft.Maui.Controls.Binding" /> allows for one argument for its singular value.
          </para>
          <example>
            <para>
              A simple example showing compositing text and determining the display format for the value with a
              <see cref="T:Microsoft.Maui.Controls.Binding" /></para>
            <code language="C#"><![CDATA[
Label label = new Label();
label.AddBinding (new Binding (Label.TextProperty, "Price") {
  StringFormat = "Price: {0:C2}"
});
]]></code>
          </example>
        </remarks><altmember cref="M:System.String.Format*" />
        </member>
        <member name="P:Microsoft.Maui.Controls.BindingBase.TargetNullValue">
            <summary>Gets or sets the value to supply for a bound property when the target of the binding is <see langword="null" />.</summary><value>The value to supply for a bound property when the target of the binding is <see langword="null" />.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.BindingBase.FallbackValue">
            <summary>Gets or sets the value to use instead of the default value for the property, if no specified value exists.</summary><value>The value to use instead of the default value for the property, if no specified value exists</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.BindingBase.DisableCollectionSynchronization(System.Collections.IEnumerable)">
            <param name="collection">The collection on which to stop synchronization.</param><summary>Stops synchronization on the <paramref name="collection" />.</summary><remarks>See <see cref="M:Microsoft.Maui.Controls.BindingBase.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,Microsoft.Maui.Controls.CollectionSynchronizationCallback)" /> for more information on enabling and disabling synchronization of collections in multithreaded environments.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.BindingBase.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,Microsoft.Maui.Controls.CollectionSynchronizationCallback)">
            <param name="collection">The collection that will be read or updated.</param><param name="context">The context or lock object that will be passed to <paramref name="callback" />. May be <see langword="null" />.</param><param name="callback">The synchronization callback.</param><summary>Starts synchronization on the <paramref name="collection" /> by using <paramref name="callback" /> and <paramref name="context" />.</summary><remarks>
          <para>Application developers implement <paramref name="callback" /> and pass it to the <see cref="M:Microsoft.Maui.Controls.BindingBase.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,Microsoft.Maui.Controls.CollectionSynchronizationCallback)" /> method to enable correct multithreaded access to <paramref name="collection" />. After synchronization is enabled, the Microsoft.Maui.Controls framework passes an access method, <paramref name="context" />, and a <see langword="bool" /> that indicates whether write access is needed, to the application developer's implementation of <see cref="T:Microsoft.Maui.Controls.CollectionSynchronizationCallback" /> each time that the framework needs to modify the collection in a multithreaded environment. The application developer's implementation should decide, based on the <paramref name="context" /> object (which may be merely a locking object or the object on which the collection lives) and the value of the <paramref name="writeAccess" /><see langword="bool" /> parameter, whether or not to <c>lock</c> while calling <paramref name="accessMethod" />.</para>
          <para>Because Microsoft.Maui.Controls maintains a weak reference to <paramref name="collection" />, application developers do not need to call <see cref="M:Microsoft.Maui.Controls.BindingBase.DisableCollectionSynchronization(System.Collections.IEnumerable)" /> to aid in garbage collection.</para>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.BindingExpression.Apply(System.Boolean)">
            <summary>
                Applies the binding expression to a previously set source and target.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Controls.BindingExpression.Apply(System.Object,Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.BindableProperty)">
            <summary>
                Applies the binding expression to a new source or target.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Controls.BindingExpression.ApplyCore(System.Object,Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.BindableProperty,System.Boolean)">
            <summary>
                Applies the binding expression to a previously set source or target.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.BindingMode">
            <summary>The direction of changes propagation for bindings.</summary><remarks>
      <para>The following examples shows some BindingMode use cases.</para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[
public class PersonViewModel
{
  public string Name { get; set; }
  public string Company { get; set; }
}
    
Label label;
PersonViewModel viewmodel;
    
//BindingMode.OneWay
label = new Label ();
label.BindingContext = viewmodel = new PersonViewModel ();
label.SetBinding<PersonViewModel> (Label.TextProperty, vm => vm.Name, mode: BindingMode.OneWay);
    
viewmodel.Name = "John Doe";
Debug.WriteLine (label.Text); //prints ""
label.Text = "Foo";
Debug.WriteLine (viewmodel.Name); //prints "John Doe"
    

//BindingMode.TwoWay
label = new Label ();
label.BindingContext = viewmodel = new PersonViewModel ();
label.SetBinding<PersonViewModel> (Label.TextProperty, vm => vm.Name, mode: BindingMode.TwoWay);
    
viewmodel.Name = "John Doe";
Debug.WriteLine (label.Text); //prints "John Doe"
label.Text = "Foo";
Debug.WriteLine (viewmodel.Name); //prints "Foo"
    

//BindingMode.OneWayToSource
label = new Label ();
label.BindingContext = viewmodel = new PersonViewModel ();
label.SetBinding<PersonViewModel> (Label.TextProperty, vm => vm.Name, mode: BindingMode.OneWayToSource);
    
viewmodel.Name = "John Doe";
Debug.WriteLine (label.Text); //prints ""
label.Text = "Foo";
Debug.WriteLine (viewmodel.Name); //prints "Foo"
    ]]></code>
      </example>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.BindingMode.Default">
            <summary>When used in Bindings, indicates that the Binding should use the <see cref="P:Microsoft.Maui.Controls.BindableProperty.DefaultBindingMode" />. When used in BindableProperty declaration, defaults to BindingMode.OneWay.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.BindingMode.TwoWay">
            <summary>Indicates that the binding should propagates changes from source (usually the View Model) to target (the BindableObject) in both directions.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.BindingMode.OneWay">
            <summary>Indicates that the binding should only propagate changes from source (usually the View Model) to target (the BindableObject). This is the default mode for most BindableProperty values.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.BindingMode.OneWayToSource">
            <summary>Indicates that the binding should only propagate changes from target (the BindableObject) to source (usually the View Model). This is mainly used for read-only BindableProperty values.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.BindingMode.OneTime">
            <summary>Indicates that the binding will be applied only when the binding context changes and the value will not be monitored for changes with <c>INotifyPropertyChanged</c>.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.BoundsConstraint">
            <summary>A bounds layout constraint used by <see cref="T:Microsoft.Maui.Controls.Compatibility.RelativeLayout" />s.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.BoundsConstraint.FromExpression(System.Linq.Expressions.Expression{System.Func{Microsoft.Maui.Graphics.Rect}},System.Collections.Generic.IEnumerable{Microsoft.Maui.Controls.View})">
            <param name="expression">The expression from which to compile the constraint.</param><param name="parents">The parents to consider when compiling the constraint.</param><summary>Returns a <see cref="T:Microsoft.Maui.Controls.BoundsConstraint" /> object that contains the compiled version of <paramref name="expression" /> and is relative to either <paramref name="parents" /> or the views referred to in <paramref name="expression" />.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.BoxView">
            <summary>A <see cref="T:Microsoft.Maui.Controls.View" /> used to draw a solid colored rectangle.</summary><remarks>
      <para>BoxView is a useful stand-in for images or custom elements when doing initial prototyping. BoxView has a default size request of 40x40. If you need a different size, assign the <see cref="P:Microsoft.Maui.Controls.VisualElement.WidthRequest" /> and <see cref="P:Microsoft.Maui.Controls.VisualElement.HeightRequest" /> properties.</para>
      <example>
        <para>The example below creates a red <see cref="T:Microsoft.Maui.Controls.BoxView" /> with the default width and height.</para>
        <code lang="XAML"><![CDATA[<BoxView Color="Red" />]]></code>
      </example>
      <para>The following example shows a basic use:</para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[
using System;
using Microsoft.Maui.Controls;
    
namespace FormsGallery
{
    class BoxViewDemoPage : ContentPage
    {
        public BoxViewDemoPage()
        {
            Label header = new Label
            {
                Text = "BoxView",
                Font = Font.BoldSystemFontOfSize(50),
                HorizontalOptions = LayoutOptions.Center
            };
    
            BoxView boxView = new BoxView
            {
                Color = Color.Accent,
                WidthRequest = 150,
                HeightRequest = 150,
                HorizontalOptions = LayoutOptions.Center,
                VerticalOptions = LayoutOptions.CenterAndExpand
            };
    
            // Accomodate iPhone status bar.
            this.Padding = new Thickness(10, Device.OnPlatform(20, 0, 0), 10, 5);
    
            // Build the page.
            this.Content = new StackLayout
            {
                Children = 
                {
                    header,
                    boxView
                }
            };
        }
    }
}
]]></code>
      </example>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/BoxView.TripleScreenShot.png" />
      </para>
    </remarks>
            <summary>A <see cref="T:Microsoft.Maui.Controls.View" /> used to draw a solid colored rectangle.</summary><remarks>
      <para>BoxView is a useful stand-in for images or custom elements when doing initial prototyping. BoxView has a default size request of 40x40. If you need a different size, assign the <see cref="P:Microsoft.Maui.Controls.VisualElement.WidthRequest" /> and <see cref="P:Microsoft.Maui.Controls.VisualElement.HeightRequest" /> properties.</para>
      <example>
        <para>The example below creates a red <see cref="T:Microsoft.Maui.Controls.BoxView" /> with the default width and height.</para>
        <code lang="XAML"><![CDATA[<BoxView Color="Red" />]]></code>
      </example>
      <para>The following example shows a basic use:</para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[
using System;
using Microsoft.Maui.Controls;
    
namespace FormsGallery
{
    class BoxViewDemoPage : ContentPage
    {
        public BoxViewDemoPage()
        {
            Label header = new Label
            {
                Text = "BoxView",
                Font = Font.BoldSystemFontOfSize(50),
                HorizontalOptions = LayoutOptions.Center
            };
    
            BoxView boxView = new BoxView
            {
                Color = Color.Accent,
                WidthRequest = 150,
                HeightRequest = 150,
                HorizontalOptions = LayoutOptions.Center,
                VerticalOptions = LayoutOptions.CenterAndExpand
            };
    
            // Accomodate iPhone status bar.
            this.Padding = new Thickness(10, Device.OnPlatform(20, 0, 0), 10, 5);
    
            // Build the page.
            this.Content = new StackLayout
            {
                Children = 
                {
                    header,
                    boxView
                }
            };
        }
    }
}
]]></code>
      </example>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/BoxView.TripleScreenShot.png" />
      </para>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.BoxView.ColorProperty">
            <summary>Identifies the Color bindable property.</summary><remarks>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.BoxView.CornerRadiusProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.BoxView.CornerRadius" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.BoxView.#ctor">
            <summary>Initializes a new instance of the BoxView class.</summary><remarks>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.BoxView.Color">
            <summary>Gets or sets the color which will fill the rectangle. This is a bindable property.</summary><value>The color that is used to fill the rectangle.</value><remarks>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.BoxView.CornerRadius">
            <summary>Gets or sets the corner radius for the box view.</summary><value>The corner radius for the box view.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.BoxView.On``1">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Controls.Brush">
            <summary>To be added.</summary><remarks>To be added.</remarks>
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Default">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.IsEmpty">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Brush.IsNullOrEmpty(Microsoft.Maui.Controls.Brush)">
            <param name="brush">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.AliceBlue">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.AntiqueWhite">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Aqua">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Aquamarine">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Azure">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Beige">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Bisque">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Black">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.BlanchedAlmond">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Blue">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.BlueViolet">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Brown">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.BurlyWood">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.CadetBlue">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Chartreuse">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Chocolate">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Coral">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.CornflowerBlue">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Cornsilk">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Crimson">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Cyan">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.DarkBlue">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.DarkCyan">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.DarkGoldenrod">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.DarkGray">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.DarkGreen">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.DarkKhaki">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.DarkMagenta">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.DarkOliveGreen">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.DarkOrange">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.DarkOrchid">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.DarkRed">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.DarkSalmon">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.DarkSeaGreen">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.DarkSlateBlue">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.DarkSlateGray">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.DarkTurquoise">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.DarkViolet">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.DeepPink">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.DeepSkyBlue">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.DimGray">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.DodgerBlue">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Firebrick">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.FloralWhite">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.ForestGreen">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Fuchsia">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Gainsboro">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.GhostWhite">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Gold">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Goldenrod">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Gray">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Green">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.GreenYellow">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Honeydew">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.HotPink">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.IndianRed">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Indigo">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Ivory">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Khaki">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Lavender">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.LavenderBlush">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.LawnGreen">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.LemonChiffon">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.LightBlue">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.LightCoral">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.LightCyan">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.LightGoldenrodYellow">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.LightGray">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.LightGreen">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.LightPink">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.LightSalmon">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.LightSeaGreen">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.LightSkyBlue">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.LightSlateGray">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.LightSteelBlue">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.LightYellow">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Lime">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.LimeGreen">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Linen">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Magenta">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Maroon">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.MediumAquamarine">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.MediumBlue">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.MediumOrchid">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.MediumPurple">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.MediumSeaGreen">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.MediumSlateBlue">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.MediumSpringGreen">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.MediumTurquoise">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.MediumVioletRed">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.MidnightBlue">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.MintCream">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.MistyRose">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Moccasin">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.NavajoWhite">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Navy">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.OldLace">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Olive">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.OliveDrab">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Orange">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.OrangeRed">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Orchid">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.PaleGoldenrod">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.PaleGreen">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.PaleTurquoise">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.PaleVioletRed">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.PapayaWhip">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.PeachPuff">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Peru">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Pink">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Plum">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.PowderBlue">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Purple">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Red">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.RosyBrown">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.RoyalBlue">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.SaddleBrown">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Salmon">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.SandyBrown">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.SeaGreen">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.SeaShell">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Sienna">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Silver">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.SkyBlue">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.SlateBlue">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.SlateGray">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Snow">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.SpringGreen">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.SteelBlue">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Tan">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Teal">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Thistle">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Tomato">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Transparent">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Turquoise">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Violet">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Wheat">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.White">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.WhiteSmoke">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.Yellow">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Brush.YellowGreen">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.BrushTypeConverter">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.BrushTypeConverter.LinearGradient">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.BrushTypeConverter.RadialGradient">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.BrushTypeConverter.Rgb">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.BrushTypeConverter.Rgba">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.BrushTypeConverter.Hsl">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.BrushTypeConverter.Hsla">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Button">
            <summary>
            A button <see cref="T:Microsoft.Maui.Controls.View" /> that reacts to touch events.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Button.CommandProperty">
            <summary>
            The backing store for the <see cref="P:Microsoft.Maui.Controls.Button.Command" /> bindable property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Button.CommandParameterProperty">
            <summary>
            The backing store for the <see cref="P:Microsoft.Maui.Controls.Button.CommandParameter" /> bindable property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Button.ContentLayoutProperty">
            <summary>
            The backing store for the <see cref="P:Microsoft.Maui.Controls.Button.ContentLayout" /> bindable property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Button.TextProperty">
            <summary>
            The backing store for the <see cref="P:Microsoft.Maui.Controls.Button.Text" /> bindable property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Button.TextColorProperty">
            <summary>
            The backing store for the <see cref="P:Microsoft.Maui.Controls.Button.TextColor" /> bindable property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Button.CharacterSpacingProperty">
            <summary>
            The backing store for the <see cref="P:Microsoft.Maui.Controls.Button.CharacterSpacing" /> bindable property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Button.FontFamilyProperty">
            <summary>
            The backing store for the <see cref="P:Microsoft.Maui.Controls.Button.FontFamily" /> bindable property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Button.FontSizeProperty">
            <summary>
            The backing store for the <see cref="P:Microsoft.Maui.Controls.Button.FontSize" /> bindable property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Button.TextTransformProperty">
            <summary>
            The backing store for the <see cref="P:Microsoft.Maui.Controls.Button.TextTransform" /> bindable property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Button.FontAttributesProperty">
            <summary>
            The backing store for the <see cref="P:Microsoft.Maui.Controls.Button.FontAttributes" /> bindable property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Button.FontAutoScalingEnabledProperty">
            <summary>
            The backing store for the <see cref="P:Microsoft.Maui.Controls.Button.FontAutoScalingEnabled" /> bindable property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Button.BorderWidthProperty">
            <summary>
            The backing store for the <see cref="P:Microsoft.Maui.Controls.Button.BorderWidth"/> bindable property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Button.BorderColorProperty">
            <summary>
            The backing store for the <see cref="P:Microsoft.Maui.Controls.Button.BorderColor" /> bindable property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Button.CornerRadiusProperty">
            <summary>
            The backing store for the <see cref="P:Microsoft.Maui.Controls.Button.CornerRadius"/> bindable property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Button.ImageSourceProperty">
            <summary>
            The backing store for the <see cref="P:Microsoft.Maui.Controls.Button.ImageSource" /> bindable property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Button.PaddingProperty">
            <summary>
            The backing store for the <see cref="P:Microsoft.Maui.Controls.Button.Padding" /> bindable property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Button.LineBreakModeProperty">
            <summary>
            The backing store for the <see cref="P:Microsoft.Maui.Controls.Button.LineBreakMode"/> bindable property.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Button.Padding">
            <summary>
            Gets or sets the padding for the button. This is a bindable property.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Button.LineBreakMode">
            <summary>
            Determines how <see cref="P:Microsoft.Maui.Controls.Button.Text"/> is shown when the length is overflowing the size of this button.
            This is a bindable property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Button.IsPressedProperty">
            <summary>
            The backing store for the <see cref="P:Microsoft.Maui.Controls.Button.IsPressed"/> bindable property.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Button.BorderColor">
            <summary>
            Gets or sets a color that describes the border stroke color of the button. This is a bindable property.
            </summary>
            <remarks>This property has no effect if <see cref="P:Microsoft.Maui.Controls.IBorderElement.BorderWidth" /> is set to 0. On Android this property will not have an effect unless <see cref="P:Microsoft.Maui.Controls.VisualElement.BackgroundColor" /> is set to a non-default color.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Button.CornerRadius">
            <summary>
            Gets or sets the corner radius for the button, in device-independent units. This is a bindable property.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Button.BorderWidth">
            <summary>
            Gets or sets the width of the border, in device-independent units. This is a bindable property.
            </summary>
            <remarks>Set this value to a non-zero value in order to have a visible border.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Button.ContentLayout">
            <summary>
            Gets or sets an object that controls the position of the button image and the spacing between the button's image and the button's text.
            This is a bindable property.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Button.Command">
            <summary>
            Gets or sets the command to invoke when the button is activated. This is a bindable property.
            </summary>
            <remarks>This property is used to associate a command with an instance of a button. This property is most often set in the MVVM pattern to bind callbacks back into the ViewModel. <see cref="P:Microsoft.Maui.Controls.VisualElement.IsEnabled" /> is controlled by the <see cref="M:Microsoft.Maui.Controls.Command.CanExecute(System.Object)"/> if set.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Button.CommandParameter">
            <summary>
            Gets or sets the parameter to pass to the <see cref="P:Microsoft.Maui.Controls.Button.Command"/> property.
            The default value is <see langword="null"/>. This is a bindable property.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Button.ImageSource">
            <summary>
            Allows you to display a bitmap image on the Button. This is a bindable property.
            </summary>
            <remarks>For more options have a look at <see cref="T:Microsoft.Maui.Controls.ImageButton"/>.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Button.Text">
            <summary>
            Gets or sets the text displayed as the content of the button.
            The default value is <see langword="null"/>. This is a bindable property.
            </summary>
            <remarks>Changing the text of a button will trigger a layout cycle.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Button.TextColor">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Maui.Graphics.Color" /> for the text of the button. This is a bindable property.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Button.CharacterSpacing">
            <summary>
            Gets or sets the spacing between each of the characters of <see cref="P:Microsoft.Maui.Controls.Button.Text"/> when displayed on the button.
            This is a bindable property.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Controls.Button.SendClicked">
            <summary>
            Internal method to trigger the <see cref="E:Microsoft.Maui.Controls.Button.Clicked"/> event.
            Should not be called manually outside of .NET MAUI.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Button.IsPressed">
            <summary>
            Gets whether or not the button is currently pressed.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Controls.Button.SendPressed">
            <summary>
            Internal method to trigger the <see cref="E:Microsoft.Maui.Controls.Button.Pressed"/> event.
            Should not be called manually outside of .NET MAUI.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Controls.Button.SendReleased">
            <summary>
            Internal method to trigger the <see cref="E:Microsoft.Maui.Controls.Button.Released"/> event.
            Should not be called manually outside of .NET MAUI.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Button.FontAttributes">
            <summary>
            Gets or sets a value that indicates whether the font for the text of this button is bold, italic, or neither.
            This is a bindable property.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Button.FontFamily">
            <summary>
            Gets or sets the font family for the text of this entry. This is a bindable property.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Button.FontSize">
            <summary>
            Gets or sets the size of the font for the text of this entry. This is a bindable property.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Button.FontAutoScalingEnabled">
            <summary>
            Determines whether or not the font of this entry should scale automatically according to the operating system settings. Default value is <see langword="true"/>.
            This is a bindable property.
            </summary>
            <remarks>Typically this should always be enabled for accessibility reasons.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Button.TextTransform">
            <summary>
            Applies text transformation to the <see cref="P:Microsoft.Maui.Controls.Button.Text"/> displayed on this button.
            This is a bindable property.
            </summary>
        </member>
        <member name="E:Microsoft.Maui.Controls.Button.Clicked">
            <summary>
            Occurs when the button is clicked/tapped.
            </summary>
        </member>
        <member name="E:Microsoft.Maui.Controls.Button.Pressed">
            <summary>
            Occurs when the button is pressed.
            </summary>
        </member>
        <member name="E:Microsoft.Maui.Controls.Button.Released">
            <summary>
            Occurs when the button is released.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Controls.Button.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Maui.Controls.Button"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Controls.Button.On``1">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.Controls.Button.UpdateFormsText(System.String,Microsoft.Maui.TextTransform)">
            <summary>
            Applies the <see cref="P:Microsoft.Maui.Controls.Button.TextTransform"/> to <see cref="P:Microsoft.Maui.Controls.Button.Text"/>.
            </summary>
            <remarks>For internal use by the .NET MAUI platform mostly.</remarks>
            <param name="source">The text to transform.</param>
            <param name="textTransform">The transform to apply to <paramref name="source"/>.</param>
            <returns>The transformed text.</returns>
        </member>
        <member name="T:Microsoft.Maui.Controls.Button.ButtonContentLayout">
            <summary>
            Represents the layout of the button content whenever an image is shown.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.Button.ButtonContentLayout.ImagePosition">
            <summary>
            Enumerates values that determine the position of the image on the button.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Controls.Button.ButtonContentLayout.#ctor(Microsoft.Maui.Controls.Button.ButtonContentLayout.ImagePosition,System.Double)">
            <summary>
            Initializes a new instance of the this class.
            </summary>
            <param name="position">The position of the image.</param>
            <param name="spacing">The spacing for the button content.</param>
        </member>
        <member name="P:Microsoft.Maui.Controls.Button.ButtonContentLayout.Position">
            <summary>
            Gets the position of the image on the button.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Button.ButtonContentLayout.Spacing">
            <summary>
            Gets the spacing for the button content.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Controls.Button.ButtonContentLayout.ToString">
            <summary>
            Gets the string representation of this object.
            </summary>
            <returns>Prints out the values of <see cref="P:Microsoft.Maui.Controls.Button.ButtonContentLayout.Position"/> and <see cref="P:Microsoft.Maui.Controls.Button.ButtonContentLayout.Spacing"/>.</returns>
        </member>
        <member name="T:Microsoft.Maui.Controls.Button.ButtonContentTypeConverter">
            <summary>
            A converter to convert a string to a <see cref="T:Microsoft.Maui.Controls.Button.ButtonContentLayout"/> object.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Button.ControlsButtonMapper">
            <summary>
            The property mapper that maps the abstract properties to the platform-specific methods for further processing.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Controls.Button.MapContentLayout(Microsoft.Maui.Handlers.IButtonHandler,Microsoft.Maui.Controls.Button)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.Controls.Button.ContentLayout"/> property to the platform implementation.
            </summary>
            <param name="handler">The handler associated to this control.</param>
            <param name="button">The abstract control that is being mapped.</param>
        </member>
        <member name="F:Microsoft.Maui.Controls.ButtonElement.CommandProperty">
            <summary>
            The backing store for the <see cref="P:Microsoft.Maui.Controls.Internals.IButtonElement.Command" /> bindable property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.ButtonElement.CommandParameterProperty">
            <summary>
            The backing store for the <see cref="P:Microsoft.Maui.Controls.Internals.IButtonElement.CommandParameter" /> bindable property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.ButtonElement.PressedVisualState">
            <summary>
            The string identifier for the pressed visual state of this control.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Controls.ButtonElement.CommandChanged(Microsoft.Maui.Controls.Internals.IButtonElement)">
            <summary>
            A method to signal that the <see cref="P:Microsoft.Maui.Controls.Internals.IButtonElement.Command"/> property has been changed.
            </summary>
            <param name="sender">The object initiating this event.</param>
        </member>
        <member name="M:Microsoft.Maui.Controls.ButtonElement.CommandCanExecuteChanged(System.Object,System.EventArgs)">
            <summary>
            A method to signal that the <see cref="M:Microsoft.Maui.Controls.Command.CanExecute(System.Object)"/> might have changed and needs to be reevaluated.
            </summary>
            <param name="sender">The object initiating this event.</param>
            <param name="e">Arguments associated with this event.</param>
        </member>
        <member name="M:Microsoft.Maui.Controls.ButtonElement.ElementClicked(Microsoft.Maui.Controls.VisualElement,Microsoft.Maui.Controls.Internals.IButtonElement)">
            <summary>
            A method to signal that this element was clicked/tapped.
            By calling this, the <see cref="P:Microsoft.Maui.Controls.Internals.IButtonElement.Command"/> and clicked events are triggered.
            </summary>
            <param name="visualElement">The element that was interacted with.</param>
            <param name="ButtonElementManager">The button element implementation to trigger the commands and events on.</param>
        </member>
        <member name="M:Microsoft.Maui.Controls.ButtonElement.ElementPressed(Microsoft.Maui.Controls.VisualElement,Microsoft.Maui.Controls.Internals.IButtonElement)">
            <summary>
            A method to signal that this element was pressed.
            By calling this, <see cref="P:Microsoft.Maui.Controls.Internals.IButtonElement.IsPressed"/> is set to <see langword="true"/>, the visual state is changed and events are triggered.
            </summary>
            <param name="visualElement">The element that was interacted with.</param>
            <param name="ButtonElementManager">The button element implementation to trigger the commands and events on.</param>
        </member>
        <member name="M:Microsoft.Maui.Controls.ButtonElement.ElementReleased(Microsoft.Maui.Controls.VisualElement,Microsoft.Maui.Controls.Internals.IButtonElement)">
            <summary>
            A method to signal that this element was released.
            By calling this, <see cref="P:Microsoft.Maui.Controls.Internals.IButtonElement.IsPressed"/> is set to <see langword="false"/>, the visual state is changed and events are triggered.
            </summary>
            <param name="visualElement">The element that was interacted with.</param>
            <param name="ButtonElementManager">The button element implementation to trigger the commands and events on.</param>
        </member>
        <member name="T:Microsoft.Maui.Controls.ButtonsMask">
            <Docs>
    <summary>Flag values that represent mouse buttons.</summary>
    <remarks>To be added.</remarks>
  </Docs>
        </member>
        <member name="F:Microsoft.Maui.Controls.ButtonsMask.Primary">
            <Docs>
        <summary>Indicates the primary mouse button. Most commonly, this is the left mouse button.</summary>
      </Docs>
        </member>
        <member name="F:Microsoft.Maui.Controls.ButtonsMask.Secondary">
            <Docs>
        <summary>Indicates the secondary mouse button. Most commonly, this is the right mouse button.</summary>
      </Docs>
        </member>
        <member name="M:Microsoft.Maui.Controls.CarouselPage.#ctor">
            <summary>Initializes a new instance of the CarouselPage class.</summary><remarks>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.CarouselPage.On``1">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Controls.Cell">
            <summary>Provides base class and capabilities for all Microsoft.Maui.Controls cells. Cells are elements meant to be added to <see cref="T:Microsoft.Maui.Controls.ListView" /> or <see cref="T:Microsoft.Maui.Controls.TableView" />.</summary><remarks>
      <para>The subtypes of <see cref="T:Microsoft.Maui.Controls.Cell" /> are:</para>
      <list type="table">
        <listheader>
          <term>Type</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>EntryCell</term>
          <description>A <see cref="T:Microsoft.Maui.Controls.Cell" /> with a label and a single line text entry field.</description>
        </item>
        <item>
          <term>SwitchCell</term>
          <description>A <see cref="T:Microsoft.Maui.Controls.Cell" /> with a label and an on/off switch.</description>
        </item>
        <item>
          <term>TextCell</term>
          <description>A <see cref="T:Microsoft.Maui.Controls.Cell" /> with primary and secondary text.</description>
        </item>
        <item>
          <term>ImageCell</term>
          <description>A <see cref="T:Microsoft.Maui.Controls.TextCell" /> that also includes an image.</description>
        </item>
        <item>
          <term>ViewCell</term>
          <description>A <see cref="T:Microsoft.Maui.Controls.Cell" /> containing a developer-defined <see cref="T:Microsoft.Maui.Controls.View" />.</description>
        </item>
      </list>
      <para>The various subclasses are shown in the following image:</para>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/Cell.Gallery.png" />
      </para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[
Content = new TableView
{
    Root = new TableRoot ("Table Title")
    {
        new TableSection("Section 1 Title")
        {
            new TextCell
            {
                Text = "TextCell Text",
                Detail = "TextCell Detail"
            },
            new ImageCell
            {
                Text = "ImageCell Text",
                Detail = "ImageCell Detail",
                ImageSource = "http://xamarin.com/images/index/ide-xamarin-studio.png"
            },
            new EntryCell
            {
                Label = "EntryCell:",
                Placeholder = "default keyboard",
                Keyboard = Keyboard.Default
            }
        },
        new TableSection("Section 2 Title")
        {
            new EntryCell
            {
                Label = "Another EntryCell:",
                Placeholder = "phone keyboard",
                Keyboard = Keyboard.Telephone
            },
            new SwitchCell
            {
                Text = "SwitchCell:"
            },
            new ViewCell
            {
                View = new StackLayout
                {
                    Orientation = StackOrientation.Horizontal,
                    Children = 
                    {
                        new Label
                        {
                            Text = "Custom Slider View:"
                        },
                        new Slider
                        {
                        }
                    }
                }
            }
        }
    }
}          
          ]]></code>
      </example>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Cell.DefaultCellHeight">
            <summary>The default height of cells.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Cell.IsEnabledProperty">
            <summary>Identifies the IsEnabled bindable property.</summary><remarks>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Cell.#ctor">
            <summary>Initializes a new instance of the Cell class.</summary><remarks>Cell class is abstract, this constructor is never invoked directly.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Cell.ContextActions">
            <summary>Gets a list of menu items to display when the user performs the device-specific context gesture on the Cell.</summary><value>The list of menu items that will be displayed when the user performs the device-specific context gesture on the Cell.</value><remarks>The context gesture on the iOS platform is a left swipe. For Android and Windows Phone operating systems, the context gesture is a press and hold.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Cell.HasContextActions">
            <summary>Gets a value that indicates whether the cell has at least one menu item in its <see cref="P:Microsoft.Maui.Controls.Cell.ContextActions" /> list property.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Cell.IsContextActionsLegacyModeEnabled">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Cell.Height">
            <summary>Gets or sets the height of the Cell.</summary><value>A double that represents the height of the cell.</value><remarks>The <see cref="P:Microsoft.Maui.Controls.Cell.Height" /> property is ignored if the app developer sets the <see cref="P:Microsoft.Maui.Controls.ListView.HasUnevenRows" /> or <see cref="P:Microsoft.Maui.Controls.TableView.HasUnevenRows" /> property on the surrounding <see cref="T:Microsoft.Maui.Controls.View" /> to <see langword="false" />. In that case, the <see cref="P:Microsoft.Maui.Controls.ListView.RowHeight" /> or <see cref="P:Microsoft.Maui.Controls.TableView.RowHeight" /> property is used instead.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Cell.IsEnabled">
            <summary>Gets or sets the IsEnabled state of the Cell. This is a bindable property.</summary><value>A bool. Default is <see langword="true" />.</value><remarks>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Cell.RenderHeight">
            <summary>Gets the height of the rendered cell on the device.</summary><value>
        </value><remarks>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Cell.ForceUpdateSize">
            <summary>Immediately updates the cell's size.</summary><remarks>
          <para>Developers can call this method to update the cell's size, even if the cell is currently visible. Developers should note that this operation can be expensive.</para>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Cell.SendAppearing">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Cell.SendDisappearing">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Cell.ElementConfiguration.On``1">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Controls.EntryCell">
            <summary>A <see cref="T:Microsoft.Maui.Controls.Cell" /> with a label and a single line text entry field.</summary><remarks>
      <para>The following example shows a basic use.</para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[using System;
using Microsoft.Maui.Controls;
    
namespace FormsGallery
{
    class EntryCellDemoPage : ContentPage
    {
        public EntryCellDemoPage()
        {
            Label header = new Label
            {
                Text = "EntryCell",
                FontSize = Device.GetNamedSize (NamedSize.Large, typeof(EntryCell)),
                HorizontalOptions = LayoutOptions.Center
            };
    
            TableView tableView = new TableView
            {
                Intent = TableIntent.Form,
                Root = new TableRoot
                {
                    new TableSection
                    {
                        new EntryCell
                        {
                            Label = "EntryCell:",
                            Placeholder = "Type Text Here"
                        }
                    }
                }
            };
    
            // Accomodate iPhone status bar.
            this.Padding = new Thickness(10, Device.OnPlatform(20, 0, 0), 10, 5);
    
            // Build the page.
            this.Content = new StackLayout
            {
                Children = 
                {
                    header,
                    tableView
                }
            };
        }
    }
}
]]></code>
      </example>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/EntryCell.TripleScreenShot.png" />
      </para>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.EntryCell.TextProperty">
            <summary>Identifies the Text bindable property.</summary><remarks>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.EntryCell.LabelProperty">
            <summary>Identifies the Label bindable property.</summary><remarks>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.EntryCell.PlaceholderProperty">
            <summary>Identifies the Placeholder bindable property,</summary><remarks>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.EntryCell.LabelColorProperty">
            <summary>Identifies the LabelColor bindable property.</summary><remarks>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.EntryCell.KeyboardProperty">
            <summary>Identifies the Keyboard bindable property.</summary><remarks>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.EntryCell.HorizontalTextAlignmentProperty">
            <summary>Identifies the HorizontalTextAlignment bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.EntryCell.VerticalTextAlignmentProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.EntryCell.HorizontalTextAlignment">
            <summary>Gets or sets the horizontal alignement of the Text property. This is a bindable property.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.EntryCell.VerticalTextAlignment">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.EntryCell.Keyboard">
            <summary>Gets or sets the Keyboard to display while editing the EntryCell. This is a bindable property.</summary><value>A <see cref="T:Microsoft.Maui.Keyboard" /> representing the keyboard kind. Default is <see cref="P:Microsoft.Maui.Keyboard.Default" />.</value><remarks>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.EntryCell.Label">
            <summary>Gets or sets the fixed text presented next to the Entry in the EntryCell. This is a bindable property.</summary><value>A <see cref="T:System.String" />.</value><remarks>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.EntryCell.LabelColor">
            <summary>Gets or sets the Color used for rendering the Label property. This is a bindable property.</summary><value>Default is Color.Default.</value><remarks>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.EntryCell.Placeholder">
            <summary>Gets or sets the placeholder text displayed in the Entry when the Text is null or empty. This is a bindable property.</summary><value>
        </value><remarks>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.EntryCell.Text">
            <summary>Gets or sets the content of the Entry of the EntryCell. This is a bindable property.</summary><value>
        </value><remarks>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.EntryCell.SendCompleted">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ImageCell">
            <summary>A <see cref="T:Microsoft.Maui.Controls.TextCell" /> that has an image.</summary><remarks>
      <para>
        <see cref="T:Microsoft.Maui.Controls.ImageCell" /> objects are used to place images and accompanying text into a table.</para>
      <example>
        <para>The following example shows a basic use.</para>
        <code lang="csharp lang-csharp"><![CDATA[using System;
using Microsoft.Maui.Controls;
    
namespace FormsGallery
{
    class ImageCellDemoPage : ContentPage
    {
        public ImageCellDemoPage()
        {
            Label header = new Label
            {
                Text = "ImageCell",
                FontSize = Device.GetNamedSize (NamedSize.Large, typeof(Label)),
                HorizontalOptions = LayoutOptions.Center
            };
    
            TableView tableView = new TableView
            {
                Intent = TableIntent.Form,
                Root = new TableRoot
                {
                    new TableSection
                    {
                        new ImageCell
                        {
                            // Some differences with loading images in initial release.
                            ImageSource =
                                Device.OnPlatform(ImageSource.FromUri(new Uri("http://xamarin.com/images/index/ide-xamarin-studio.png")),
                                                  ImageSource.FromFile("ide_xamarin_studio.png"),
                                                  ImageSource.FromFile("Images/ide-xamarin-studio.png")),
                            Text = "This is an ImageCell",
                            Detail = "This is some detail text",
                        }
                    }
                }
            };
    
            // Accomodate iPhone status bar.
            this.Padding = new Thickness(10, Device.OnPlatform(20, 0, 0), 10, 5);
    
            // Build the page.
            this.Content = new StackLayout
            {
                Children =
                {
                    header,
                    tableView
                }
            };
        }
    }
}]]></code>
      </example>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/ImageCell.TripleScreenShot.png" />
      </para>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ImageCell.ImageSourceProperty">
            <summary>Identifies the ImageSource bindable property.</summary><remarks>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ImageCell.#ctor">
            <summary>Initializes a new instance of the ImageCell class.</summary><remarks>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ImageCell.ImageSource">
            <summary>Gets or sets the ImageSource from which the Image is loaded. This is a bindable property.</summary><value>
        </value><remarks>
        </remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.SwitchCell">
            <summary>A <see cref="T:Microsoft.Maui.Controls.Cell" /> with a label and an on/off switch.</summary><remarks>
      <para>The following example shows a basic use.</para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[using System;
using Microsoft.Maui.Controls;
    
namespace FormsGallery
{
    class SwitchCellDemoPage : ContentPage
    {
        public SwitchCellDemoPage()
        {
            Label header = new Label
            {
                Text = "SwitchCell",
                FontSize = Device.GetNamedSize (NamedSize.Large, typeof(Label)),
                HorizontalOptions = LayoutOptions.Center
            };
    
            TableView tableView = new TableView
            {
                Intent = TableIntent.Form,
                Root = new TableRoot
                {
                    new TableSection
                    {
                        new SwitchCell
                        {
                            Text = "SwitchCell:"
                        }
                    }
                }
            };
    
            // Accomodate iPhone status bar.
            this.Padding = new Thickness(10, Device.OnPlatform(20, 0, 0), 10, 5);
    
            // Build the page.
            this.Content = new StackLayout
            {
                Children =
                {
                    header,
                    tableView
                }
            };
        }
    }
}]]></code>
      </example>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/SwitchCell.TripleScreenShot.png" />
      </para>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SwitchCell.OnProperty">
            <summary>Identifies the <see cref="P:Microsoft.Maui.Controls.SwitchCell.On" /> bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SwitchCell.TextProperty">
            <summary>Identifies the Text bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SwitchCell.OnColorProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.SwitchCell.OnColor" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SwitchCell.OnColor">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SwitchCell.On">
            <summary>Gets or sets the state of the switch. This is a bindable property.</summary><value>Default is <see langword="false" />.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SwitchCell.Text">
            <summary>Gets or sets the text displayed next to the switch. This is a bindable property.</summary><value>
        </value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.TextCell">
            <summary>
              A <see cref="T:Microsoft.Maui.Controls.Cell" /> with primary <see cref="P:Microsoft.Maui.Controls.TextCell.Text" />  and <see cref="P:Microsoft.Maui.Controls.TextCell.Detail" /> text.
            </summary><remarks>
      <para>The following example shows a basic use.</para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[
public class App : Application
{
    public App()
    {
        MainPage = new ContentPage {
            Content = new TableView {
                Intent = TableIntent.Form,
                Root = new TableRoot ("Table Title") {
                    new TableSection ("Section 1 Title") {
                        new TextCell {
                            Text = "TextCell Text",
                            Detail = "TextCell Detail"
                        },
                        new EntryCell {
                            Label = "EntryCell:",
                            Placeholder = "default keyboard",
                            Keyboard = Keyboard.Default
                        }
                    },
                    new TableSection ("Section 2 Title") {
                        new EntryCell {
                            Label = "Another EntryCell:",
                            Placeholder = "phone keyboard",
                            Keyboard = Keyboard.Telephone
                        },
                        new SwitchCell {
                            Text = "SwitchCell:"
                        }
                    }
                }
            }
        }; 
    }
    // OnStart, OnSleep, OnResume overrides omitted...
}]]></code>
      </example>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/TextCell.TripleScreenShot.png" />
      </para>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.TextCell.CommandProperty">
            <summary>Identifies the Command bindable property.</summary><remarks>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.TextCell.CommandParameterProperty">
            <summary>Identifies the CommandParameter bindable property.</summary><remarks>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.TextCell.TextProperty">
            <summary>Identifies the Text bindable property.</summary><remarks>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.TextCell.DetailProperty">
            <summary>Gets or sets the secondary text to be displayed. This is a bindable property.</summary><remarks>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.TextCell.TextColorProperty">
            <summary>Identifies the TextColor bindable property.</summary><remarks>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.TextCell.DetailColorProperty">
            <summary>Identifies the DetailColor bindable property.</summary><remarks>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TextCell.Command">
            <summary>Gets or sets the ICommand to be executed when the TextCell is tapped. This is a bindable property.</summary><value>
        </value><remarks>Setting the Command property has a side effect of changing the Enabled property depending on ICommand.CanExecute.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TextCell.CommandParameter">
            <summary>Gets or sets the parameter passed when invoking the Command. This is a bindable property.</summary><value>
        </value><remarks>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TextCell.Detail">
            <summary>Gets or sets the secondary text to be displayed in the TextCell. This is a bindable property.</summary><value>
        </value><remarks>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TextCell.DetailColor">
            <summary>Gets or sets the color to render the secondary text. This is a bindable property.</summary><value>The color of the text. Color.Default is the default color value.</value><remarks>Not all platforms may support transparent text rendering. Using Color.Default will result in the system theme color being used.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TextCell.Text">
            <summary>Gets or sets the primary text to be displayed. This is a bindable property.</summary><value>
        </value><remarks>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TextCell.TextColor">
            <summary>Gets or sets the color to render the primary text. This is a bindable property.</summary><value>The color of the text.</value><remarks>Not all platforms may support transparent text rendering. Using Color.Default will result in the system theme color being used. Color.Default is the default color value.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ViewCell">
            <summary>A <see cref="T:Microsoft.Maui.Controls.Cell" /> containing a developer-defined <see cref="T:Microsoft.Maui.Controls.View" />.</summary><remarks>
    </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ViewCell.View">
            <summary>Gets or sets the View representing the content of the ViewCell.</summary><value>
        </value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.CheckBox">
            <summary>To be added.</summary><remarks>To be added.</remarks>
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.CheckBox.IsCheckedVisualState">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.CheckBox.IsCheckedProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.CheckBox.ColorProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.CheckBox.Color">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.CheckBox.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.CheckBox.IsChecked">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.CheckBox.On``1">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Controls.CheckedChangedEventArgs">
            <summary>Event Args for <see cref="T:Microsoft.Maui.Controls.CheckBox" />'s <see cref="E:Microsoft.Maui.Controls.CheckBox.CheckedChanged" /> event.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.CheckedChangedEventArgs.#ctor(System.Boolean)">
            <param name="value">Boolean value indicating whether the <see cref="T:Microsoft.Maui.Controls.CheckBox" /> is checked.</param><summary>Creates a new <see cref="T:Microsoft.Maui.Controls.CheckedChangedEventArgs" /> specifying whether the <see cref="T:Microsoft.Maui.Controls.CheckBox" /> is checked.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.CheckedChangedEventArgs.Value">
            <summary>Boolean value indicating whether the <see cref="T:Microsoft.Maui.Controls.CheckBox" /> is checked.</summary><value>
          <see langword="true" /> if checked.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ChildGestureRecognizer">
            <summary>A gesture recognizer for use as a child of another.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ChildGestureRecognizer.GestureRecognizer">
            <summary>Gets or sets the recognizer.</summary><value>The recognizer.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ChildGestureRecognizer.OnPropertyChanged(System.String)">
            <param name="propertyName">The property that changed.</param><summary>Method that is called when the recognizer is changed.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ClickedEventArgs">
            <summary>Event arguments for a click event.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ClickedEventArgs.#ctor(Microsoft.Maui.Controls.ButtonsMask,System.Object)">
            <param name="buttons">The button or buttons that were pressed.</param><param name="commandParameter">The command parameter.</param><summary>Creates a new <see cref="T:Microsoft.Maui.Controls.ClickedEventArgs" /> with the specified values.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ClickedEventArgs.Buttons">
            <summary>Gets the button or buttons that were pressed.</summary><value>The button or buttons that were pressed.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ClickedEventArgs.Parameter">
            <summary>Gets the command parameter.</summary><value>The command parameter.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ClickGestureRecognizer">
            <summary>Recognizer for click gestures.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ClickGestureRecognizer.CommandProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.ClickGestureRecognizer.Command" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ClickGestureRecognizer.CommandParameterProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.ClickGestureRecognizer.CommandParameter" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ClickGestureRecognizer.NumberOfClicksRequiredProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.ClickGestureRecognizer.NumberOfClicksRequired" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ClickGestureRecognizer.ButtonsProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.ClickGestureRecognizer.Buttons" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ClickGestureRecognizer.#ctor">
            <summary>Creates a new <see cref="T:Microsoft.Maui.Controls.ClickGestureRecognizer" /> with default values.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ClickGestureRecognizer.Command">
            <summary>Gets or sets the command to run.</summary><value>The command to run.</value><remarks>
          <para>The command may be null.</para>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ClickGestureRecognizer.CommandParameter">
            <summary>Gets or sets the command parameter.</summary><value>The command parameter.</value><remarks>
          <para>The command parameter may be null.</para>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ClickGestureRecognizer.NumberOfClicksRequired">
            <summary>The number of clicks required to activate the recognizer.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ClickGestureRecognizer.Buttons">
            <summary>Gets or sets flag values that indicate which button or buttons were clicked.</summary><value>Either of the <see cref="F:Microsoft.Maui.Controls.ButtonsMask.Primary" /> or <see cref="F:Microsoft.Maui.Controls.ButtonsMask.Secondary" /> flag values, or both of the values combined together.</value><remarks>
          <para>On a mouse used in the right hand, the left button is typically the primary button. It is the button typically under the index finger. For a mouse used in the left hand, the right button is typically the primary button.</para>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ClickGestureRecognizer.SendClicked(Microsoft.Maui.Controls.View,Microsoft.Maui.Controls.ButtonsMask)">
            <param name="sender">The object that is sending the click event.</param><param name="buttons">The buttons that were involved in the click event.</param><summary>Runs the command for the click, if present, and invokes the click event handler when appropriate.</summary><remarks>Both the command and the event are run, if present.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ColumnDefinition">
            <summary>An <see cref="T:Microsoft.Maui.Controls.IDefinition" /> that defines properties for a column in a <see cref="T:Microsoft.Maui.Controls.Grid" />.</summary><remarks>
      <example>
        <para>The following example demonstrates setting three column widths to each of the three valid <see cref="T:Microsoft.Maui.GridUnitType" /> values:</para>
        <code lang="XAML"><![CDATA[
<Grid.ColumnDefinitions>
    <ColumnDefinition Width="Auto" />
    <ColumnDefinition Width="*" />
    <ColumnDefinition Width="100" />
</Grid.ColumnDefinitions>
]]></code>
      </example>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ColumnDefinition.WidthProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.ColumnDefinition.Width" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColumnDefinition.#ctor">
            <summary>Creates a new <see cref="T:Microsoft.Maui.Controls.ColumnDefinition" /> object with default values.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ColumnDefinition.Width">
            <summary>Gets or sets the width of the column.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ColumnDefinitionCollection">
            <summary>A <see cref="T:Microsoft.Maui.Controls.DefinitionCollection`1" /> for <see cref="T:Microsoft.Maui.Controls.ColumnDefinition" />s.</summary><remarks>
      <para>App developers can specify <see cref="T:Microsoft.Maui.GridUnitType" /> values for the <see cref="P:Microsoft.Maui.Controls.ColumnDefinition.Width" /> property in XAML by nesting <c>ColumnDefinition</c> tags inside tags for the <see cref="P:Microsoft.Maui.Controls.Grid.ColumnDefinitions" /> collection property. The following example demonstrates setting three column widths to each of the three valid <see cref="T:Microsoft.Maui.GridUnitType" /> values:</para>
      <example>
        <code lang="XAML"><![CDATA[
<Grid.ColumnDefinitions>
    <ColumnDefinition Width="Auto" />
    <ColumnDefinition Width="*" />
    <ColumnDefinition Width="100" />
</Grid.ColumnDefinitions>
]]></code>
      </example>
    </remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ColumnDefinitionCollectionTypeConverter">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Command`1.#ctor(System.Action{`0})">
            <param name="execute">An Action to execute when the Command is executed.</param><summary>Initializes a new instance of the Command class.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Command`1.#ctor(System.Action{`0},System.Func{`0,System.Boolean})">
            <param name="execute">An Action&lt;object&gt; to execute when the Command is executed.</param><param name="canExecute">A <see cref="T:System.Func`2" /> indicating if the Command can be executed.</param><summary>Initializes a new instance of the Command class.</summary><remarks>Whenever the value returned by canExecute has changed, a call to <see cref="M:Microsoft.Maui.Controls.Command.ChangeCanExecute" /> is required to trigger <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" />.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Command">
            <summary>Defines an <see cref="T:System.Windows.Input.ICommand" /> implementation that wraps a <see cref="T:System.Action" />.</summary><remarks>
      <para>
              The following example creates a new Command and set it to a button.
              </para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[
var command = new Command (() => Debug.WriteLine ("Command executed"));
var button = new Button {
  Text = "Hit me to execute the command",
  Command = command,
};
]]></code>
      </example>
      <para>
              More useful scenarios takes a parameter
              </para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[
var command = new Command (o => Debug.WriteLine ("Command executed: {0}", o));
var button = new Button {
  Text = "Hit me to execute the command",
  Command = command,
  CommandParameter = "button0",
};
]]></code>
      </example>
    </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Command.#ctor(System.Action{System.Object})">
            <param name="execute">An Action&lt;object&gt; to execute when the Command is executed.</param><summary>Initializes a new instance of the Command class.</summary><remarks>The Action will be executed with a parameter.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Command.#ctor(System.Action)">
            <param name="execute">An Action to execute when the Command is executed.</param><summary>Initializes a new instance of the Command class.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Command.#ctor(System.Action{System.Object},System.Func{System.Object,System.Boolean})">
            <param name="execute">An Action&lt;object&gt; to execute when the Command is executed.</param><param name="canExecute">A <see cref="T:System.Func`2" /> indicating if the Command can be executed.</param><summary>Initializes a new instance of the Command class.</summary><remarks>Whenever the value returned by canExecute has changed, a call to <see cref="M:Microsoft.Maui.Controls.Command.ChangeCanExecute" /> is required to trigger <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" />.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Command.#ctor(System.Action,System.Func{System.Boolean})">
            <param name="execute">An Action to execute when the Command is executed.</param><param name="canExecute">A <see cref="T:System.Func`1" /> indicating if the Command can be executed.</param><summary>Initializes a new instance of the Command class.</summary><remarks>Whenever the value returned by canExecute has changed, a call to <see cref="M:Microsoft.Maui.Controls.Command.ChangeCanExecute" /> is required to trigger <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" />.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Command.CanExecute(System.Object)">
            <param name="parameter">An <see cref="T:System.Object" /> used as parameter to determine if the Command can be executed.</param><summary>Returns a <see cref="T:System.Boolean" /> indicating if the Command can be exectued with the given parameter.</summary><returns>
          <see langword="true" /> if the Command can be executed, <see langword="false" /> otherwise.</returns><remarks>
          <para>If no canExecute parameter was passed to the Command constructor, this method always returns <see langword="true" />.</para>
          <para>If the Command was created with non-generic execute parameter, the parameter of this method is ignored.</para>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Command.Execute(System.Object)">
            <param name="parameter">An <see cref="T:System.Object" /> used as parameter for the execute Action.</param><summary>Invokes the execute Action</summary><remarks>
          <para>If the Command was created with non-generic execute parameter, the parameter of this method is ignored.</para>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Command.ChangeCanExecute">
            <summary>Send a <see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /></summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.CompareStateTrigger">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.CompareStateTrigger.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.CompareStateTrigger.Property">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.CompareStateTrigger.PropertyProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.CompareStateTrigger.Value">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.CompareStateTrigger.ValueProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Handlers.Compatibility.TabbedRenderer.GetIcon(Microsoft.Maui.Controls.Page)">
            <summary>
            Get the icon for the tab bar item of this page
            </summary>
            <returns>
            A tuple containing as item1: the unselected version of the icon, item2: the selected version of the icon (item2 can be null),
            or null if no icon should be set.
            </returns>
        </member>
        <member name="T:Microsoft.Maui.Controls.Compatibility.iOS.Resources.StringResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Compatibility.iOS.Resources.StringResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Compatibility.iOS.Resources.StringResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Compatibility.iOS.Resources.StringResources.Cancel">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Compatibility.iOS.Resources.StringResources.More">
            <summary>
              Looks up a localized string similar to More.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Controls.Compatibility.AbsoluteLayout.On``1">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.Controls.Compatibility.Grid.On``1">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Controls.Compatibility.Grid.GridStructure">
            <summary>
            Creates a snapshot of the Grid row/column structure, optionally with measurement
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Controls.Compatibility.RelativeLayout.On``1">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.Controls.Compatibility.StackLayout.On``1">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Controls.CompressedLayout">
            <summary>Contains attached properties for omitting redundant renderers.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.CompressedLayout.IsHeadlessProperty">
            <summary>Backing store for the attached property that controls whether compressed layout is enabled.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.CompressedLayout.GetIsHeadless(Microsoft.Maui.Controls.BindableObject)">
            <param name="bindable">The <see cref="T:Microsoft.Maui.Controls.BindableObject" /> whose status to check.</param><summary>Gets a Boolean value that tells whether layout compression is enabled for <paramref name="bindable" />.</summary><returns>
          <see langword="true" /> if layout compression is enabled for <paramref name="bindable" />. Otherwise, returns <see langword="false" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.CompressedLayout.SetIsHeadless(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="bindable">The <see cref="T:Microsoft.Maui.Controls.BindableObject" /> on which to enable or disable layout compression</param><param name="value">The new layout compression value. <see langword="true" /> to enable layout compression</param><summary>Turns layout compression on or off for <see langword="bindable" />.</summary><remarks>
          <para>It is an invalid operation to change this value after the view is rendered on the platform.</para>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.CompressedLayout.HeadlessOffsetProperty">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.CompressedLayout.GetHeadlessOffset(Microsoft.Maui.Controls.BindableObject)">
            <param name="bindable">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ConstraintType">
            <summary>Enumeration specifying whether a constraint is constant, relative to a view, or relative to its parent.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ConstraintType.RelativeToParent">
            <summary>A constraint that is relative to a parent element.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.ConstraintType.RelativeToView">
            <summary>A constraint that is relative to a view.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.ConstraintType.Constant">
            <summary>A constant constraint.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.ContentPage">
            <summary>A <see cref="T:Microsoft.Maui.Controls.Page" /> that displays a single view.</summary><remarks>
      <para>This is a Page displaying a single View, often a container like a <see cref="T:Microsoft.Maui.Controls.StackLayout" /> or <see cref="T:Microsoft.Maui.Controls.ScrollView" />.</para>
      <example>
        <para>The example below is taken from the App.cs file that is contained in the default "Hello, Forms!" app. It  uses a <see cref="T:Microsoft.Maui.Controls.ContentPage" /> to display a label, which is a typical, though basic, use of the <see cref="T:Microsoft.Maui.Controls.ContentPage" /> class.</para>
        <code lang="csharp lang-csharp"><![CDATA[
using System;
using Microsoft.Maui.Controls;
    
namespace ContentPageExample
{
    public class App : Application
    {
        public static Page GetMainPage ()
        {    
            return new ContentPage { 
                Content = new Label {
                    Text = "Hello, Forms!",
                    VerticalOptions = LayoutOptions.CenterAndExpand,
                    HorizontalOptions = LayoutOptions.CenterAndExpand,
                },
            };
        }

        public App ()
        {
            MainPage = GetMainPage();
        }
    }
}
          ]]></code>
        <para>The <format type="text/html"><a href="https://docs.microsoft.com/samples/xamarin/xamarin-forms-samples/formsgallery/" target="_blank">FormsGallery</a></format> sample, which can be found on the <format type="text/html"><a href="https://docs.microsoft.com/samples/browse/" target="_blank">Sample Applications</a></format> page, has a ContentPageDemoPage.cs file. This file contains a longer and more complicated example.</para>
      </example>
    </remarks>
            <summary>A <see cref="T:Microsoft.Maui.Controls.Page" /> that displays a single view.</summary><remarks>
      <para>This is a Page displaying a single View, often a container like a <see cref="T:Microsoft.Maui.Controls.StackLayout" /> or <see cref="T:Microsoft.Maui.Controls.ScrollView" />.</para>
      <example>
        <para>The example below is taken from the App.cs file that is contained in the default "Hello, Forms!" app. It  uses a <see cref="T:Microsoft.Maui.Controls.ContentPage" /> to display a label, which is a typical, though basic, use of the <see cref="T:Microsoft.Maui.Controls.ContentPage" /> class.</para>
        <code lang="csharp lang-csharp"><![CDATA[
using System;
using Microsoft.Maui.Controls;
    
namespace ContentPageExample
{
    public class App : Application
    {
        public static Page GetMainPage ()
        {    
            return new ContentPage { 
                Content = new Label {
                    Text = "Hello, Forms!",
                    VerticalOptions = LayoutOptions.CenterAndExpand,
                    HorizontalOptions = LayoutOptions.CenterAndExpand,
                },
            };
        }

        public App ()
        {
            MainPage = GetMainPage();
        }
    }
}
          ]]></code>
        <para>The <format type="text/html"><a href="https://docs.microsoft.com/samples/xamarin/xamarin-forms-samples/formsgallery/" target="_blank">FormsGallery</a></format> sample, which can be found on the <format type="text/html"><a href="https://docs.microsoft.com/samples/browse/" target="_blank">Sample Applications</a></format> page, has a ContentPageDemoPage.cs file. This file contains a longer and more complicated example.</para>
      </example>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ContentPage.ContentProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.ContentPage.Content" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ContentPage.Content">
            <summary>Gets or sets the view that contains the content of the Page.</summary><value>A <see cref="T:Microsoft.Maui.Controls.View" /> subclass, or <see langword="null" />.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ContentPresenter">
            <summary>Layout manager for templated views.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ContentPresenter.ContentProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.ContentPresenter.Content" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ContentPresenter.#ctor">
            <summary>Creates a new empty <see cref="T:Microsoft.Maui.Controls.ContentPresenter" /> with default values</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ContentPresenter.Content">
            <summary>Gets or sets the view whose layout is managed by this <see cref="T:Microsoft.Maui.Controls.ContentPresenter" />.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ContentPropertyAttribute">
            <summary>Indicates the property of the type that is the (default) content property.</summary><remarks>
      <para>XAML processor uses to determine the content property.</para>
      <para>
Decorating types with ContentPropertyAttribute allows shorter XAML syntax. As </para>
      <example>
        <see cref="T:Microsoft.Maui.Controls.ContentView" /> has a ContentProperty attribute applied, this XAML is valid:
<code lang="csharp lang-csharp"><![CDATA[
<ContentView>
  <Label Text="Hello, Forms"/>
</ContentView>
  ]]></code>
This is equivalent to the following, more explicit XAML
<code lang="csharp lang-csharp"><![CDATA[
<ContentView>
  <ContentView.Content>
    <Label Text="Hello, Forms"/>
  </ContentView.Content>
</ContentView>
  ]]></code></example>
    </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ContentPropertyAttribute.#ctor(System.String)">
            <param name="name">The name of the property.</param><summary>Initializes a new instance of the ContentPropertyAttribute class.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ContentPropertyAttribute.Name">
            <summary>Gets the name of the content property</summary><value>A string representing the name of the content property.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ContentView">
            <summary>An element that contains a single child element.</summary><remarks>
      <para>
          The following example shows how to construct a new ContentView with a Label inside.
          </para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[
MainPage = new ContentPage () {
    // Accomodate iPhone status bar.
    Padding = new Thickness(10, Device.OnPlatform(20, 0, 0), 10, 5),
        Content = new ContentView {
            Content = new Label { Text = "I'm Content!" },
    }
};
          ]]></code>
      </example>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/ContentView.TripleScreenShot.png" />
      </para>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ContentView.ContentProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.ContentView.Content" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ContentView.Content">
            <summary>Gets or sets the content of the ContentView.</summary><value>A <see cref="T:Microsoft.Maui.Controls.View" /> that contains the content.</value><remarks>
        </remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ControlTemplate">
            <summary>Template that specifies a group of styles and effects for controls.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ControlTemplate.#ctor">
            <summary>For internal use only.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ControlTemplate.#ctor(System.Type)">
            <param name="type">The type of control for which to create a template.</param><summary>Creates a new control template for the specified control type.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ControlTemplate.#ctor(System.Func{System.Object})">
            <param name="createTemplate">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.DataTemplate">
            <summary>A template for multiple bindings, commonly used by <see cref="T:Microsoft.Maui.Controls.ListView" />s and <see cref="T:Microsoft.Maui.Controls.MultiPage`1" />s.</summary><remarks>In XAML, application developers can nest markup inside a <c>DataTemplate</c> tag to create a <see cref="T:Microsoft.Maui.Controls.View" /> whose members are bound to the properties of data objects that are contained in a <see cref="P:Microsoft.Maui.Controls.MultiPage`1.ItemsSource" /> list.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.DataTemplate.#ctor">
            <summary>For internal use only.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.DataTemplate.#ctor(System.Type)">
            <param name="type">The type of control for which to create a template.</param><summary>Creates a new <see cref="T:Microsoft.Maui.Controls.DataTemplate" /> for type <paramref name="type" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.DataTemplate.#ctor(System.Func{System.Object})">
            <param name="loadTemplate">A custom content generator to be called </param><summary>Creates and initializes a new instance of the <see cref="T:Microsoft.Maui.Controls.DataTemplate" /> class.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DataTemplate.Bindings">
            <summary>Gets a dictionary of bindings, indexed by the bound properties.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DataTemplate.Values">
            <summary>Returns a dictionary of property values for this <see cref="T:Microsoft.Maui.Controls.DataTemplate" />, indexed by property.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.DataTemplate.SetBinding(Microsoft.Maui.Controls.BindableProperty,Microsoft.Maui.Controls.BindingBase)">
            <param name="property">The property to which to bind.</param><param name="binding">The binding to use.</param><summary>Sets the binding for <paramref name="property" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.DataTemplate.SetValue(Microsoft.Maui.Controls.BindableProperty,System.Object)">
            <param name="property">The property to set.</param><param name="value">The new value.</param><summary>Sets the value of <paramref name="property" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.DataTemplateSelector">
            <summary>Selects <see cref="T:Microsoft.Maui.Controls.DataTemplate" /> objects by data type and container.</summary><remarks>
      <para>Application developers override the <see cref="M:Microsoft.Maui.Controls.DataTemplateSelector.OnSelectTemplate(System.Object,Microsoft.Maui.Controls.BindableObject)" /> method to return a unique <see cref="T:Microsoft.Maui.Controls.DataTemplate" /> for a data type and parent container combination. Additionally, because the same exact template instance must be returned for a given piece of data across successive calls to <see cref="M:Microsoft.Maui.Controls.DataTemplateSelector.SelectTemplate(System.Object,Microsoft.Maui.Controls.BindableObject)" />, developers should create and store these <see cref="T:Microsoft.Maui.Controls.DataTemplate" /> in their constructor overrides.</para>
      Developers should note the following items:        <list type="bullet"><item><term>OnSelectTemplate must not return another DataTemplateSelector, and
        </term></item><item><term>The Android platform is limited to 20 templates per list view.</term></item></list>
      <example>The following example shows a basic use:
<code lang="c#"><![CDATA[class MyDataTemplateSelector : DataTemplateSelector
{
    public MyDataTemplateSelector ()
    {
        // Retain instances
        this.templateOne = new DataTemplate (typeof (ViewA));
        this.templateTwo = new DataTemplate (typeof (ViewB));
    }
    
    protected override DataTemplate OnSelectTemplate (object item, BindableObject container)
    {
        if (item is double)
            return this.templateOne;
        return this.templateTwo;
    }
    
    private readonly DataTemplate templateOne;
    private readonly DataTemplate templateTwo;
}]]></code></example>
    </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.DataTemplateSelector.SelectTemplate(System.Object,Microsoft.Maui.Controls.BindableObject)">
            <param name="item">The data for which to return a template.</param><param name="container">An optional container object in which the developer may have opted to store <see cref="T:Microsoft.Maui.Controls.DataTemplateSelector" /> objects.</param><summary>Returns a <see cref="T:Microsoft.Maui.Controls.DataTemplate" /> for <paramref name="item" /> by calling <see cref="M:Microsoft.Maui.Controls.DataTemplateSelector.OnSelectTemplate(System.Object,Microsoft.Maui.Controls.BindableObject)" /> and verifying its result.</summary><returns>
          <para>A developer-defined <see cref="T:Microsoft.Maui.Controls.DataTemplate" /> that can be used to display <paramref name="item" />.</para>
        </returns><remarks>
          <para>Developers should note that the Android platform is limited to 20 templates per list view.</para>
        </remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.DateChangedEventArgs">
            <summary>Event arguments for <see cref="E:Microsoft.Maui.Controls.DatePicker.DateSelected" /> event.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.DateChangedEventArgs.#ctor(System.DateTime,System.DateTime)">
            <param name="oldDate">The old date.</param><param name="newDate">The new date.</param><summary>Creates a new <see cref="T:Microsoft.Maui.Controls.DateChangedEventArgs" /> object that represents a change from <paramref name="oldDate" /> to <paramref name="newDate" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DateChangedEventArgs.NewDate">
            <summary>The date that the user entered.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DateChangedEventArgs.OldDate">
            <summary>The date that was on the element at the time that the user selected it.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.DatePicker">
            <summary>A <see cref="T:Microsoft.Maui.Controls.View" /> that allows date picking.</summary><remarks>
      <para>The visual representation of a DatePicker is very similar to the one of <see cref="T:Microsoft.Maui.Controls.Entry" />, except that a special control for picking a date appears in place of a keyboard.</para>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/DatePicker.TripleScreenShot.png" />
      </para>
      <example>
        <para>The example below creates a working <see cref="T:Microsoft.Maui.Controls.DatePicker" /> that displays the current date and allows the user to select a date between the specified ranges. The value for the <see cref="P:Microsoft.Maui.Controls.DatePicker.Date" /> property is specified with the <c>x:Static</c> markup extension, and the <see cref="P:Microsoft.Maui.Controls.DatePicker.MinimumDate" /> and <see cref="P:Microsoft.Maui.Controls.DatePicker.MaximumDate" /> properties are specified by calling the <see cref="M:System.DateTime.Parse*" /> method with the <c>x:FactoryMethod</c> and `x:Arguments` tags. Note: the example below requires a namespace declaration in the root <c>ContentPage</c> or <c>ContentView</c> tags. In particular, <c>xmlns:sys="clr-namespace:System;assembly=mscorlib"</c> must appear in the attribute list for the root element, so that the XAML parser can resolve the name, <c>sys:DateTime</c>.</para>
        <code lang="XAML"><![CDATA[<StackLayout>
      <DatePicker VerticalOptions="CenterAndExpand" Date="{x:Static sys:DateTime.Now}">
         <DatePicker.Format>yyyy-MM-dd</DatePicker.Format>
         <DatePicker.MinimumDate>
            <sys:DateTime x:FactoryMethod="Parse">
               <x:Arguments>
                  <x:String>Jan 1 2000</x:String>
               </x:Arguments>
            </sys:DateTime>
         </DatePicker.MinimumDate>
         <DatePicker.MaximumDate>
            <sys:DateTime x:FactoryMethod="Parse">
               <x:Arguments>
                  <x:String>Dec 31 2050</x:String>
               </x:Arguments>
            </sys:DateTime>
         </DatePicker.MaximumDate>
      </DatePicker>
   </StackLayout>]]></code>
      </example>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.DatePicker.FormatProperty">
            <summary>Backing store for the Format dependency property.</summary><remarks>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.DatePicker.DateProperty">
            <summary>Backing store for the Date bindable property.</summary><remarks>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.DatePicker.MinimumDateProperty">
            <summary>Backing store for the MinimumDate bindable property.</summary><remarks>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.DatePicker.MaximumDateProperty">
            <summary>Backing store for the MaximumDate bindable property.</summary><remarks>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.DatePicker.TextColorProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.DatePicker.TextColor" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.DatePicker.CharacterSpacingProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.DatePicker.FontFamilyProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.DatePicker.FontFamily" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.DatePicker.FontSizeProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.DatePicker.FontSize" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.DatePicker.FontAttributesProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.DatePicker.FontAttributes" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.DatePicker.#ctor">
            <summary>Initializes a new instance of the DatePicker class.</summary><remarks>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DatePicker.Date">
            <summary>Gets or sets the displayed date. This is a bindable property.</summary><value>The <see cref="T:System.DateTime" /> displayed in the DatePicker.</value><remarks>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DatePicker.Format">
            <summary>The format of the date to display to the user. This is a dependency property.</summary><value>A valid date format.</value><remarks>Format string is the same is passed to DateTime.ToString (string format).</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DatePicker.MaximumDate">
            <summary>The highest date selectable for this DatePicker. This is a bindable property.</summary><value>The maximum <see cref="T:System.DateTime" /> selectable for the DateEntry. Default December 31, 2100.</value><remarks>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DatePicker.MinimumDate">
            <summary>The lowest date selectable for this DatePicker. This is a bindable property.</summary><value>The minimum <see cref="T:System.DateTime" /> selectable for the DateEntry. Default January 1, 1900.</value><remarks>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DatePicker.TextColor">
            <summary>Gets or sets the text color for the date picker.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DatePicker.CharacterSpacing">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DatePicker.FontAttributes">
            <summary>Gets a value that indicates whether the font for the date picker text is bold, italic, or neither.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DatePicker.FontFamily">
            <summary>Gets or sets the font family for the picker text.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DatePicker.FontSize">
            <summary>Gets or sets the size of the font for the text in the picker.</summary><value>A <see langword="double" /> that indicates the size of the font.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.DatePicker.UpdateFormsText(System.String,Microsoft.Maui.TextTransform)">
            <param name="source">To be added.</param><param name="textTransform">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.DatePicker.On``1">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Controls.TextDecorationConverter">
            <summary>A <see cref="T:System.ComponentModel.TypeConverter" /> subclass that can convert between a string and a <see cref="T:Microsoft.Maui.TextDecorations" /> object.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.DependencyAttribute">
            <summary>An attribute that indicates that the specified type provides a concrete implementation of a needed interface.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.DependencyAttribute.#ctor(System.Type)">
            <param name="implementorType">The type of the implementor of the dependency.</param><summary>Creates a new <see cref="T:Microsoft.Maui.Controls.DependencyAttribute" /> with default values.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.DependencyFetchTarget">
            <summary>Enumeration specifying whether <see cref="M:Microsoft.Maui.Controls.DependencyService.Get``1(Microsoft.Maui.Controls.DependencyFetchTarget)" /> should return a reference to a global or new instance.</summary><remarks>
      <para>The following example shows how <see cref="T:Microsoft.Maui.Controls.DependencyFetchTarget" /> can be used to specify a new instance:</para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[
var secondFetch = DependencyService.Get<IDependencyTest> (DependencyFetchTarget.NewInstance);
          ]]></code>
      </example>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.DependencyFetchTarget.GlobalInstance">
            <summary>Return a global instance.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.DependencyFetchTarget.NewInstance">
            <summary>Return a new instance.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.DependencyService">
            <summary>Static class that provides the <see cref="M:Microsoft.Maui.Controls.DependencyService.Get``1(Microsoft.Maui.Controls.DependencyFetchTarget)" /> factory method for retrieving platform-specific implementations of the specified type T.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.DesignMode">
            <summary>Static class that developers can use to determine if the application is running in a previewer.</summary><remarks>This class is managed by the Microsoft.Maui.Controls platform to inform the developer when the application is being run in a previewer.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DesignMode.IsDesignModeEnabled">
            <summary>Indicates whether the application is being run in a previewer.</summary><value>
          <see langword="true" /> if the application is being run in a previewer. <see langword="false" /> if the application is being run on a device or emulator.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Device">
            <summary>A utility class to interact with the current Device/Platform.</summary><remarks>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Device.iOS">
            <summary>The string "iOS", representing the iOS operating system.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Device.Android">
            <summary>The string "Android", representing the Android operating system.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Device.UWP">
            <summary>The string "UWP", representing the UWP operating system.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Device.macOS">
            <summary>The string "macOS", representing the macOS operating system.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Device.GTK">
            <summary>The string "GTK", representing the Linux operating system.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Device.Tizen">
            <summary>The string "Tizen", representing the Tizen operating system.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Device.WPF">
            <summary>The string "WPF", representing the Windows Presentation Foundation framework.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Device.Idiom">
            <summary>Gets the kind of device that Microsoft.Maui.Controls is currently working on.</summary><value>A <see cref="T:Microsoft.Maui.Controls.TargetIdiom" /> that represents the device type.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Device.RuntimePlatform">
            <summary>Gets the kind of device that Microsoft.Maui.Controls is currently working on.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Device.FlowDirection">
            <summary>Gets the flow direction on the device.</summary><value>The flow direction on the device. See Remarks.</value><remarks>
          <para>The following contains a few important points about flow direction from <format type="text/html"><a href="https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/localization/right-to-left">Right-to-Left Localization</a></format>. Developers should consult that document for more information about limitations of right-to-left support, and for requirements to implement right-to-left support on various target platforms.</para>
          <para>The default value of <see cref="T:Microsoft.Maui.FlowDirection" /> for a visual element that has no parent is <see cref="F:Microsoft.Maui.FlowDirection.LeftToRight" />, even on platforms where <see cref="P:Microsoft.Maui.Controls.Device.FlowDirection" /> is <see cref="F:Microsoft.Maui.FlowDirection.RightToLeft" />. Therefore, developers must deliberately opt in to right-to-left layout. Developers can choose right-to-left layout by setting the <see cref="P:Microsoft.Maui.Controls.VisualElement.FlowDirection" /> property of the root element to <see cref="F:Microsoft.Maui.FlowDirection.RightToLeft" /> to chosse right-to-left layout, or to <see cref="F:Microsoft.Maui.FlowDirection.MatchParent" /> to match the device layout.</para>
          <para>All <see cref="T:Microsoft.Maui.Controls.VisualElement" />s that have a parent default to <see cref="F:Microsoft.Maui.FlowDirection.MatchParent" />.</para>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Device.IsInvokeRequired">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Device.BeginInvokeOnMainThread(System.Action)">
            <param name="action">The Action to invoke </param><summary>Invokes an Action on the device main (UI) thread.</summary><remarks>
          <para>This example shows how to set the Text of Label on the main thread, e.g. in response to an async event.
          </para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
Device.BeginInvokeOnMainThread (() => {
  label.Text = "Async operation completed";
});
          ]]></code>
          </example>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Device.InvokeOnMainThreadAsync``1(System.Func{``0})">
            <typeparam name="T">The return type of the Func.</typeparam><param name="func">The Func to invoke.</param><summary>Invokes a Func on the device main (UI) thread.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Device.InvokeOnMainThreadAsync(System.Action)">
            <param name="action">The Action to invoke</param><summary>Invokes an Action on the device main (UI) thread.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Device.InvokeOnMainThreadAsync``1(System.Func{System.Threading.Tasks.Task{``0}})">
            <typeparam name="T">The return type of the Func.</typeparam><param name="funcTask">The Func to invoke.</param><summary>Invokes a Func on the device main (UI) thread.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Device.InvokeOnMainThreadAsync(System.Func{System.Threading.Tasks.Task})">
            <param name="funcTask">The Func to invoke.</param><summary>Invokes a Func on the device main (UI) thread.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Device.GetMainThreadSynchronizationContextAsync">
            <summary>Returns the current <see cref="T:System.Threading.SynchronizationContext" /> from the main thread.</summary><returns>The current <see cref="T:System.Threading.SynchronizationContext" /> from the main thread.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Device.GetNamedSize(Microsoft.Maui.Controls.NamedSize,Microsoft.Maui.Controls.Element)">
            <param name="size">The named size for which to get the numeric size.</param><param name="targetElement">The element for which to calculate the numeric size.</param><summary>Returns a double that represents a font size that corresponds to <paramref name="size" /> on <paramref name="targetElement" />.</summary><returns>A double that represents a font size that corresponds to <paramref name="size" /> on <paramref name="targetElement" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Device.GetNamedSize(Microsoft.Maui.Controls.NamedSize,System.Type)">
            <param name="size">The named size for which to get the numeric size.</param><param name="targetElementType">The element type for which to calculate the numeric size.</param><summary>Returns a double that represents the named size for the font that is used on the element on the native platform.</summary><returns>The named size for the font that is used on the element on the native platform.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Device.StartTimer(System.TimeSpan,System.Func{System.Boolean})">
            <param name="interval">The interval between invocations of the callback.</param><param name="callback">The action to run when the timer elapses.</param><summary>Starts a recurring timer using the device clock capabilities.</summary><remarks>
          <para>While the callback returns <see langword="true" />, the timer will keep recurring.</para>
          <para>If you want the code inside the timer to interact on the UI thread (e.g. setting text of a Label or showing an alert), it should be done within a <see langword="BeginInvokeOnMainThread" /> expression, which will be nested inside the timer (see below).</para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
Device.StartTimer (new TimeSpan (0, 0, 60), () =>
{
    // do something every 60 seconds
    Device.BeginInvokeOnMainThread (() => 
    {
      // interact with UI elements
    });
    return true; // runs again, or false to stop
});
          ]]></code>
          </example>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Device.GetNamedSize(Microsoft.Maui.Controls.NamedSize,System.Type,System.Boolean)">
            <param name="size">For internal use by the Microsoft.Maui.Controls platform.</param><param name="targetElementType">For internal use by the Microsoft.Maui.Controls platform.</param><param name="useOldSizes">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><returns>For internal use by the Microsoft.Maui.Controls platform.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.DeviceStateTrigger">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.DeviceStateTrigger.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DeviceStateTrigger.Device">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.DeviceStateTrigger.DeviceProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.DoubleCollection">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.DoubleCollection.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.DoubleCollectionConverter">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.DataPackage">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.DataPackage.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DataPackage.Properties">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DataPackage.Image">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DataPackage.Text">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DataPackage.View">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.DataPackageOperation">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.DataPackageOperation.None">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.DataPackageOperation.Copy">
            <summary>To be added.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.DataPackagePropertySet">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.DataPackagePropertySet.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DataPackagePropertySet.Count">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DataPackagePropertySet.Keys">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DataPackagePropertySet.Values">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.DataPackagePropertySet.Add(System.String,System.Object)">
            <param name="key">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.DataPackagePropertySet.ContainsKey(System.String)">
            <param name="key">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.DataPackagePropertySet.GetEnumerator">
            <summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.DataPackagePropertySet.TryGetValue(System.String,System.Object@)">
            <param name="key">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.DataPackagePropertySetView">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.DataPackagePropertySetView._dataPackagePropertySet">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.DataPackagePropertySetView.#ctor(Microsoft.Maui.Controls.DataPackagePropertySet)">
            <param name="dataPackagePropertySet">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DataPackagePropertySetView.Keys">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DataPackagePropertySetView.Values">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DataPackagePropertySetView.Count">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.DataPackagePropertySetView.ContainsKey(System.String)">
            <param name="key">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.DataPackagePropertySetView.GetEnumerator">
            <summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.DataPackagePropertySetView.TryGetValue(System.String,System.Object@)">
            <param name="key">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.DataPackageView">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DataPackageView.Properties">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.DataPackageView.GetImageAsync">
            <summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.DataPackageView.GetTextAsync">
            <summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.DragEventArgs">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.DragEventArgs.#ctor(Microsoft.Maui.Controls.DataPackage)">
            <param name="dataPackage">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DragEventArgs.Data">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DragEventArgs.AcceptedOperation">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.DragGestureRecognizer">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.DragGestureRecognizer.CanDragProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.DragGestureRecognizer.DropCompletedCommandProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.DragGestureRecognizer.DropCompletedCommandParameterProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.DragGestureRecognizer.DragStartingCommandProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.DragGestureRecognizer.DragStartingCommandParameterProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.DragGestureRecognizer.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DragGestureRecognizer.CanDrag">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DragGestureRecognizer.DropCompletedCommand">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DragGestureRecognizer.DropCompletedCommandParameter">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DragGestureRecognizer.DragStartingCommand">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DragGestureRecognizer.DragStartingCommandParameter">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.DragStartingEventArgs">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.DragStartingEventArgs.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DragStartingEventArgs.Handled">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DragStartingEventArgs.Cancel">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DragStartingEventArgs.Data">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.DropCompletedEventArgs">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.DropEventArgs">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.DropEventArgs.#ctor(Microsoft.Maui.Controls.DataPackageView)">
            <param name="view">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DropEventArgs.Data">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DropEventArgs.Handled">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.DropGestureRecognizer">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.DropGestureRecognizer.AllowDropProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.DropGestureRecognizer.DragOverCommandProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.DropGestureRecognizer.DragOverCommandParameterProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.DropGestureRecognizer.DragLeaveCommandProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.DropGestureRecognizer.DragLeaveCommandParameterProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.DropGestureRecognizer.DropCommandProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.DropGestureRecognizer.DropCommandParameterProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.DropGestureRecognizer.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DropGestureRecognizer.AllowDrop">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DropGestureRecognizer.DragOverCommand">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DropGestureRecognizer.DragOverCommandParameter">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DropGestureRecognizer.DragLeaveCommand">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DropGestureRecognizer.DragLeaveCommandParameter">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DropGestureRecognizer.DropCommand">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DropGestureRecognizer.DropCommandParameter">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.DropGestureRecognizer.SendDragOver(Microsoft.Maui.Controls.DragEventArgs)">
            <param name="args">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Editor">
            <summary>A control that can edit multiple lines of text.</summary><remarks>
      <para>For single line entries, see <see cref="T:Microsoft.Maui.Controls.Entry" />.</para>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/Editor.TripleScreenShot.png" />
      </para>
    </remarks>
            <summary>A control that can edit multiple lines of text.</summary><remarks>
      <para>For single line entries, see <see cref="T:Microsoft.Maui.Controls.Entry" />.</para>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/Editor.TripleScreenShot.png" />
      </para>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Editor.TextProperty">
            <summary>Identifies the Text bindable property.</summary><remarks>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Editor.FontFamilyProperty">
            <summary>Backing store for the FontFamily property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Editor.FontSizeProperty">
            <summary>Backing store for the FontSize property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Editor.FontAttributesProperty">
            <summary>Backing store for the FontAttributes property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Editor.TextColorProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.InputView.TextColor" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Editor.CharacterSpacingProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Editor.PlaceholderProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.InputView.Placeholder" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Editor.PlaceholderColorProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.InputView.PlaceholderColor" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Editor.IsTextPredictionEnabledProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.Editor.IsTextPredictionEnabled" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Editor.AutoSizeProperty">
            <summary>Backing store for the property that controls whether the editor will change size to accommodate input as the user enters it.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Editor.AutoSize">
            <summary>Gets or sets a value that controls whether the editor will change size to accommodate input as the user enters it.</summary><value>Whether the editor will change size to accommodate input as the user enters it.</value><remarks>Automatic resizing is turned off by default.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Editor.FontAttributes">
            <summary>Gets a value that indicates whether the font for the editor is bold, italic, or neither.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Editor.IsTextPredictionEnabled">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Editor.FontFamily">
            <summary>Gets the font family to which the font for the editor belongs.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Editor.FontSize">
            <summary>Gets the size of the font for the editor.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Editor.#ctor">
            <summary>Initializes a new instance of the Editor class.</summary><remarks>
          <para>
              The following example creates a Editor with a Chat keyboard that fills the available space.
              </para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
var editor = new Editor {
  VerticalOptions = LayoutOptions.FillAndExpand,
  Keyboard = Keyboard.Chat,
};
              ]]></code>
          </example>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Editor.On``1">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.Controls.Editor.SendCompleted">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.EditorAutoSizeOption">
            <summary>Enumerates values that control whether an editor will change size to accommodate input as the user enters it.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.EditorAutoSizeOption.Disabled">
            <summary>Automatic resizing is not enabled. This is the default value.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.EditorAutoSizeOption.TextChanges">
            <summary>Automatic resizing is enabled.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.Effect">
            <summary>A collection of styles and properties that can be added to an element at run time.</summary><remarks>
      <para>Effects are suitable when the developer needs to use platform-specific features to achieve the desired effect. Developers should consider using <see cref="T:Microsoft.Maui.Controls.Behavior" /> if they do not need platform-specific implentations to achieve their desired result.</para>
    </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Effect.Element">
            <summary>Gets the element to which the style is attached.</summary><value>The <see cref="T:Microsoft.Maui.Controls.Element" /> to which the property is attached, if the property is attached. Otherwise, <see langword="null" />.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Effect.IsAttached">
            <summary>Gets a value that tells whether the effect is attached to an element.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Effect.ResolveId">
            <summary>Gets the ID that is used to resolve this effect at runtime.</summary><value>The ID that is used to resolve this effect at runtime.</value><remarks>
          <para>Developers must supply a name to <see cref="T:Microsoft.Maui.Controls.ExportEffectAttribute" /> that is unique over the scope of the name that they supply to <see cref="T:Microsoft.Maui.Controls.ResolutionGroupNameAttribute" />. The <see cref="M:Microsoft.Maui.Controls.Effect.Resolve(System.String)" /> method takes a string that is the concatenation of <paramref name="name" /> (the resolution group name), <c>'.'</c>, and the unique name that was supplied to <see cref="T:Microsoft.Maui.Controls.ExportEffectAttribute" />, and returns the specified effect.</para>
          <example>
            <para>For example, with the declarations:</para>
            <code lang="c#"><![CDATA[
            [assembly: ResolutionGroupName ("com.YourCompany")]
            [assembly: ExportEffect (typeof (ShadowEffect), "ShadowEffect")]]]></code>
            <para>Then the code below will add the effect to a button:</para>
            <code lang="c#"><![CDATA[
            [var button = new Button { Text = "I have a shadow" };
    button.Effects.Add (Effect.Resolve ("com.YourCompany.ShadowEffect"));]]></code>
          </example>
          <para>This property returns the string that developers pass to <see cref="M:Microsoft.Maui.Controls.Effect.Resolve(System.String)" /> to get the effect at runtime.</para>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Effect.Resolve(System.String)">
            <param name="name">The name of the effect to get.</param><summary>Returns an <see cref="T:Microsoft.Maui.Controls.Effect" /> for the specified name, which is of the form <c>ResolutionGroupName.ExportEffect</c>.</summary><returns>The uniquely identified effect.</returns><remarks>The <see cref="M:Microsoft.Maui.Controls.Effect.Resolve(System.String)" /> method takes a string that is the concatenation of a resolution group name (supplied to <see cref="T:Microsoft.Maui.Controls.ResolutionGroupNameAttribute" />), <c>'.'</c>, and the unique name that was supplied to <see cref="T:Microsoft.Maui.Controls.ExportEffectAttribute" />, and returns the specified effect.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.EffectiveFlowDirection">
            <summary>Enumerates flags that indicate whether the layout direction was explicitly set, and whether the layout direction is right-to-left.</summary><remarks>
      <para>
      </para>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.EffectiveFlowDirection.RightToLeft">
            <summary>Indicates that the flow direction is right-to-left.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.EffectiveFlowDirection.Explicit">
            <summary>Indicates that the developer explicitly set the flow direction.</summary>
        </member>
        <member name="M:Microsoft.Maui.Controls.EffectiveFlowDirectionExtensions.IsRightToLeft(Microsoft.Maui.Controls.EffectiveFlowDirection)">
            <param name="self">The enumeration value on which this method operates.</param><summary>Returns <see langword="true" /> if the flow direction is right-to-left. Otherwise, returns <see langword="false" />.</summary><returns>
          <see langword="true" /> if the flow direction is right-to-left. Otherwise, <see langword="false" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.EffectiveFlowDirectionExtensions.IsLeftToRight(Microsoft.Maui.Controls.EffectiveFlowDirection)">
            <param name="self">The enumeration value on which this method operates.</param><summary>Returns <see langword="true" /> if the flow direction is left-to-right. Otherwise, returns <see langword="false" />.</summary><returns>
          <see langword="true" /> if the flow direction is left-to-right. Otherwise, <see langword="false" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.EffectiveFlowDirectionExtensions.IsImplicit(Microsoft.Maui.Controls.EffectiveFlowDirection)">
            <param name="self">The enumeration value on which this method operates.</param><summary>Returns <see langword="false" /> if the developer set the flow direction on the current object. Returns <see langword="true" /> if the flow direction is inherited or was not set by the developer.</summary><returns>
          <see langword="false" /> if the developer set the flow direction on the current object, or <see langword="true" /> if the flow direction is inherited or was not set by the developer.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.EffectiveFlowDirectionExtensions.IsExplicit(Microsoft.Maui.Controls.EffectiveFlowDirection)">
            <param name="self">The enumeration value on which this method operates.</param><summary>Returns <see langword="true" /> if the developer set the flow direction on the current object. Returns <see langword="false" /> if the flow direction is inherited or was not set by the developer.</summary><returns>
          <see langword="true" /> if the developer set the flow direction on the current object, or <see langword="false" /> if the flow direction is inherited or was not set by the developer.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.EffectiveVisualExtensions">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.EffectiveVisualExtensions.IsDefault(Microsoft.Maui.Controls.IVisual)">
            <param name="visual">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.EffectiveVisualExtensions.IsMatchParent(Microsoft.Maui.Controls.IVisual)">
            <param name="visual">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.EffectiveVisualExtensions.IsMaterial(Microsoft.Maui.Controls.IVisual)">
            <param name="visual">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Element">
            <summary>Provides the base class for all Microsoft.Maui.Controls hierarchal elements. This class contains all the methods and properties required to represent an element in the Microsoft.Maui.Controls hierarchy.</summary><remarks>
      <para>Important categories of visual elements are noted in the following table:</para>
      <list type="table">
        <listheader>
          <term>Class</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>
            <see cref="T:Microsoft.Maui.Controls.VisualElement" />
          </term>
          <description>A <see cref="T:Microsoft.Maui.Controls.Element" /> that occupies an area on the screen, has a visual appearance, and can obtain touch input.</description>
        </item>
        <item>
          <term>
            <see cref="T:Microsoft.Maui.Controls.Cell" />
          </term>
          <description>Cells are elements meant to be added to <see cref="T:Microsoft.Maui.Controls.ListView" /> or <see cref="T:Microsoft.Maui.Controls.TableView" />.</description>
        </item>
        <item>
          <term>
            <see cref="T:Microsoft.Maui.Controls.Page" />
          </term>
          <description>A <see cref="T:Microsoft.Maui.Controls.VisualElement" /> that occupies most or all of the screen and contains a single child.</description>
        </item>
        <item>
          <term>
            <see cref="T:Microsoft.Maui.Controls.Layout" />
          </term>
          <description>
            <see cref="T:Microsoft.Maui.Controls.Layout" /> have a single child of type <see cref="T:Microsoft.Maui.Controls.View" />, while subclasses of <see cref="T:Microsoft.Maui.Controls.Layout" /> have a collection of multiple children views, including other layouts.</description>
        </item>
        <item>
          <term>
            Controls and specialized <see cref="T:Microsoft.Maui.Controls.View" />s
          </term>
          <description>The lower part of the diagram shows the Microsoft.Maui.Controls classes for universally-available controls, such as <see cref="T:Microsoft.Maui.Controls.Button" />s and <see cref="T:Microsoft.Maui.Controls.TableView" />s.</description>
        </item>
      </list>
    </remarks>
            <summary>Provides the base class for all Microsoft.Maui.Controls hierarchal elements. This class contains all the methods and properties required to represent an element in the Microsoft.Maui.Controls hierarchy.</summary><remarks>
      <para>Important categories of visual elements are noted in the following table:</para>
      <list type="table">
        <listheader>
          <term>Class</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>
            <see cref="T:Microsoft.Maui.Controls.VisualElement" />
          </term>
          <description>A <see cref="T:Microsoft.Maui.Controls.Element" /> that occupies an area on the screen, has a visual appearance, and can obtain touch input.</description>
        </item>
        <item>
          <term>
            <see cref="T:Microsoft.Maui.Controls.Cell" />
          </term>
          <description>Cells are elements meant to be added to <see cref="T:Microsoft.Maui.Controls.ListView" /> or <see cref="T:Microsoft.Maui.Controls.TableView" />.</description>
        </item>
        <item>
          <term>
            <see cref="T:Microsoft.Maui.Controls.Page" />
          </term>
          <description>A <see cref="T:Microsoft.Maui.Controls.VisualElement" /> that occupies most or all of the screen and contains a single child.</description>
        </item>
        <item>
          <term>
            <see cref="T:Microsoft.Maui.Controls.Layout" />
          </term>
          <description>
            <see cref="T:Microsoft.Maui.Controls.Layout" /> have a single child of type <see cref="T:Microsoft.Maui.Controls.View" />, while subclasses of <see cref="T:Microsoft.Maui.Controls.Layout" /> have a collection of multiple children views, including other layouts.</description>
        </item>
        <item>
          <term>
            Controls and specialized <see cref="T:Microsoft.Maui.Controls.View" />s
          </term>
          <description>The lower part of the diagram shows the Microsoft.Maui.Controls classes for universally-available controls, such as <see cref="T:Microsoft.Maui.Controls.Button" />s and <see cref="T:Microsoft.Maui.Controls.TableView" />s.</description>
        </item>
      </list>
    </remarks>
            <summary>Provides the base class for all Microsoft.Maui.Controls hierarchal elements. This class contains all the methods and properties required to represent an element in the Microsoft.Maui.Controls hierarchy.</summary><remarks>
      <para>Important categories of visual elements are noted in the following table:</para>
      <list type="table">
        <listheader>
          <term>Class</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>
            <see cref="T:Microsoft.Maui.Controls.VisualElement" />
          </term>
          <description>A <see cref="T:Microsoft.Maui.Controls.Element" /> that occupies an area on the screen, has a visual appearance, and can obtain touch input.</description>
        </item>
        <item>
          <term>
            <see cref="T:Microsoft.Maui.Controls.Cell" />
          </term>
          <description>Cells are elements meant to be added to <see cref="T:Microsoft.Maui.Controls.ListView" /> or <see cref="T:Microsoft.Maui.Controls.TableView" />.</description>
        </item>
        <item>
          <term>
            <see cref="T:Microsoft.Maui.Controls.Page" />
          </term>
          <description>A <see cref="T:Microsoft.Maui.Controls.VisualElement" /> that occupies most or all of the screen and contains a single child.</description>
        </item>
        <item>
          <term>
            <see cref="T:Microsoft.Maui.Controls.Layout" />
          </term>
          <description>
            <see cref="T:Microsoft.Maui.Controls.Layout" /> have a single child of type <see cref="T:Microsoft.Maui.Controls.View" />, while subclasses of <see cref="T:Microsoft.Maui.Controls.Layout" /> have a collection of multiple children views, including other layouts.</description>
        </item>
        <item>
          <term>
            Controls and specialized <see cref="T:Microsoft.Maui.Controls.View" />s
          </term>
          <description>The lower part of the diagram shows the Microsoft.Maui.Controls classes for universally-available controls, such as <see cref="T:Microsoft.Maui.Controls.Button" />s and <see cref="T:Microsoft.Maui.Controls.TableView" />s.</description>
        </item>
      </list>
    </remarks>
            <summary>Provides the base class for all Microsoft.Maui.Controls hierarchal elements. This class contains all the methods and properties required to represent an element in the Microsoft.Maui.Controls hierarchy.</summary><remarks>
      <para>Important categories of visual elements are noted in the following table:</para>
      <list type="table">
        <listheader>
          <term>Class</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>
            <see cref="T:Microsoft.Maui.Controls.VisualElement" />
          </term>
          <description>A <see cref="T:Microsoft.Maui.Controls.Element" /> that occupies an area on the screen, has a visual appearance, and can obtain touch input.</description>
        </item>
        <item>
          <term>
            <see cref="T:Microsoft.Maui.Controls.Cell" />
          </term>
          <description>Cells are elements meant to be added to <see cref="T:Microsoft.Maui.Controls.ListView" /> or <see cref="T:Microsoft.Maui.Controls.TableView" />.</description>
        </item>
        <item>
          <term>
            <see cref="T:Microsoft.Maui.Controls.Page" />
          </term>
          <description>A <see cref="T:Microsoft.Maui.Controls.VisualElement" /> that occupies most or all of the screen and contains a single child.</description>
        </item>
        <item>
          <term>
            <see cref="T:Microsoft.Maui.Controls.Layout" />
          </term>
          <description>
            <see cref="T:Microsoft.Maui.Controls.Layout" /> have a single child of type <see cref="T:Microsoft.Maui.Controls.View" />, while subclasses of <see cref="T:Microsoft.Maui.Controls.Layout" /> have a collection of multiple children views, including other layouts.</description>
        </item>
        <item>
          <term>
            Controls and specialized <see cref="T:Microsoft.Maui.Controls.View" />s
          </term>
          <description>The lower part of the diagram shows the Microsoft.Maui.Controls classes for universally-available controls, such as <see cref="T:Microsoft.Maui.Controls.Button" />s and <see cref="T:Microsoft.Maui.Controls.TableView" />s.</description>
        </item>
      </list>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Element.AutomationIdProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.Element.AutomationId" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Element.ClassIdProperty">
            <summary>Identifies the ClassId bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Element.AutomationId">
            <summary>Gets or sets a value that allows the automation framework to find and interact with this element.</summary><value>A value that the automation framework can use to find and interact with this element.</value><remarks>This value may only be set once on an element.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Element.ClassId">
            <summary>Gets or sets a value used to identify a collection of semantically similar elements.</summary><value>A string that represents the collection the element belongs to.</value><remarks>Use the class id property to collect together elements into semantically similar groups for identification in ui testing and in theme engines.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Element.Effects">
            <summary>A list of the effects that are applied to this item.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Element.Id">
            <summary>Gets a value that can be used to uniquely identify an element through the run of an application.</summary><value>A Guid uniquely identifying the element.</value><remarks>This value is generated at runtime and is not stable across runs of your app.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Element.StyleId">
            <summary>Gets or sets a user defined value to uniquely identify the element.</summary><value>A string uniquely identifying the element.</value><remarks>Use the StyleId property to identify individual elements in your application for identification in ui testing and in theme engines.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Element.LogicalChildren">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Element.RealParent">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Element.Parent">
            <summary>Gets or sets the parent element of the element.</summary><value>The element which should be the parent of this element.</value><remarks>Most application authors will not need to set the parent element by hand.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Element.EffectControlProvider">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Element.SetValueFromRenderer(Microsoft.Maui.Controls.BindableProperty,System.Object)">
            <param name="property">For internal use by the Microsoft.Maui.Controls platform.</param><param name="value">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Element.SetValueFromRenderer(Microsoft.Maui.Controls.BindablePropertyKey,System.Object)">
            <param name="property">For internal use by the Microsoft.Maui.Controls platform.</param><param name="value">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Element.EffectIsAttached(System.String)">
            <param name="name">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Element.FindByName(System.String)">
            <param name="name">The name of the element to find.</param><summary>Returns the element that has the specified name.</summary><returns>The element that has the specified name.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Element.RemoveDynamicResource(Microsoft.Maui.Controls.BindableProperty)">
            <param name="property">The BindableProperty from which to remove the DynamicResource.</param><summary>Removes a previously set dynamic resource</summary><remarks>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Element.SetDynamicResource(Microsoft.Maui.Controls.BindableProperty,System.String)">
            <param name="property">The BindableProperty.</param><param name="key">The key of the DynamicResource</param><summary>Sets the BindableProperty property of this element to be updated via the DynamicResource with the provided key.</summary><remarks>
        </remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ElementEventArgs">
            <summary>Provides data for events pertaining to a single <see cref="T:Microsoft.Maui.Controls.Element" />.</summary><remarks>
    </remarks><altmember cref="E:Microsoft.Maui.Controls.Element.ChildAdded" /><altmember cref="E:Microsoft.Maui.Controls.Element.ChildRemoved" /><altmember cref="E:Microsoft.Maui.Controls.Element.DescendantAdded" /><altmember cref="E:Microsoft.Maui.Controls.Element.DescendantRemoved" />
        </member>
        <member name="M:Microsoft.Maui.Controls.ElementEventArgs.#ctor(Microsoft.Maui.Controls.Element)">
            <param name="element">The element relevant to the event.</param><summary>Constructs and initializes a new instance of the <see cref="T:Microsoft.Maui.Controls.ElementEventArgs" /> class.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ElementEventArgs.Element">
            <summary>Gets the element relevant to the event.</summary><value>The element relevant to the event.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ElementTemplate">
            <summary>Base class for <see cref="T:Microsoft.Maui.Controls.DataTemplate" /> and <see cref="T:Microsoft.Maui.Controls.ControlTemplate" /> classes.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ElementTemplate.CreateContent">
            <summary>Used by the XAML infrastructure to load data templates and set up the content of the resulting UI.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Entry">
            <summary>
            Entry is a single line text entry. It is best used for collecting small discrete pieces of information, like usernames and passwords.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Entry.ReturnTypeProperty">
            <summary>
            Backing store for the <see cref="P:Microsoft.Maui.Controls.Entry.ReturnType"/> property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Entry.ReturnCommandProperty">
            <summary>
            Backing store for the <see cref="P:Microsoft.Maui.Controls.Entry.ReturnCommand"/> property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Entry.ReturnCommandParameterProperty">
            <summary>
            Backing store for the <see cref="P:Microsoft.Maui.Controls.Entry.ReturnCommandParameter"/> property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Entry.PlaceholderProperty">
            <inheritdoc cref="F:Microsoft.Maui.Controls.InputView.PlaceholderProperty"/>
        </member>
        <member name="F:Microsoft.Maui.Controls.Entry.PlaceholderColorProperty">
            <inheritdoc cref="F:Microsoft.Maui.Controls.InputView.PlaceholderColorProperty"/>
        </member>
        <member name="F:Microsoft.Maui.Controls.Entry.IsPasswordProperty">
            <summary>
            Backing store for the <see cref="P:Microsoft.Maui.Controls.Entry.IsPassword"/> property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Entry.TextProperty">
            <inheritdoc cref="F:Microsoft.Maui.Controls.InputView.TextProperty"/>
        </member>
        <member name="F:Microsoft.Maui.Controls.Entry.TextColorProperty">
            <inheritdoc cref="F:Microsoft.Maui.Controls.InputView.TextColorProperty"/>
        </member>
        <member name="F:Microsoft.Maui.Controls.Entry.KeyboardProperty">
            <inheritdoc cref="F:Microsoft.Maui.Controls.InputView.KeyboardProperty"/>
        </member>
        <member name="F:Microsoft.Maui.Controls.Entry.CharacterSpacingProperty">
            <inheritdoc cref="F:Microsoft.Maui.Controls.InputView.CharacterSpacingProperty"/>
        </member>
        <member name="F:Microsoft.Maui.Controls.Entry.HorizontalTextAlignmentProperty">
            <summary>
            Backing store for the <see cref="P:Microsoft.Maui.Controls.Entry.HorizontalTextAlignment"/> property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Entry.VerticalTextAlignmentProperty">
            <summary>
            Backing store for the <see cref="P:Microsoft.Maui.Controls.Entry.ReturnType"/> property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Entry.FontFamilyProperty">
            <summary>
            Backing store for the <see cref="P:Microsoft.Maui.Controls.Entry.ReturnType"/> property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Entry.FontSizeProperty">
            <summary>
            Backing store for the <see cref="P:Microsoft.Maui.Controls.Entry.ReturnType"/> property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Entry.FontAttributesProperty">
            <summary>
            Backing store for the <see cref="P:Microsoft.Maui.Controls.Entry.ReturnType"/> property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Entry.FontAutoScalingEnabledProperty">
            <summary>
            Backing store for the <see cref="P:Microsoft.Maui.Controls.Entry.ReturnType"/> property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Entry.IsTextPredictionEnabledProperty">
            <summary>
            Backing store for the <see cref="P:Microsoft.Maui.Controls.Entry.IsTextPredictionEnabled"/> property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Entry.CursorPositionProperty">
            <summary>
            Backing store for the <see cref="P:Microsoft.Maui.Controls.Entry.CursorPosition"/> property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Entry.SelectionLengthProperty">
            <summary>
            Backing store for the <see cref="P:Microsoft.Maui.Controls.Entry.SelectionLength"/> property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Entry.ClearButtonVisibilityProperty">
            <summary>
            Backing store for the <see cref="P:Microsoft.Maui.Controls.Entry.SelectionLength"/> property.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Controls.Entry.#ctor">
            <summary>
            Creates a new <see cref="T:Microsoft.Maui.Controls.Entry"/> object with default values.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Entry.HorizontalTextAlignment">
            <summary>
            Gets or sets the horizontal text alignment. This is a bindable property.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Entry.VerticalTextAlignment">
            <summary>
            Gets or sets the vertical text alignment. This is a bindable property.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Entry.IsPassword">
            <summary>
            Gets or sets a value that indicates if the entry should visually obscure typed text.
            Value is <see langword="true" /> if the element is a password box; otherwise, <see langword="false" />. Default value is <see langword="false" />.
            This is a bindable property.
            </summary>
            <remarks>Toggling this value does not reset the contents of the entry, therefore it is advisable to be careful about setting <see cref="P:Microsoft.Maui.Controls.Entry.IsPassword"/> to false, as it may contain sensitive information.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Entry.FontAttributes">
            <summary>
            Gets or sets a value that indicates whether the font for the text of this entry is bold, italic, or neither.
            This is a bindable property.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Entry.FontFamily">
            <summary>
            Gets or sets the font family for the text of this entry. This is a bindable property.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Entry.FontSize">
            <summary>
            Gets or sets the size of the font for the text of this entry. This is a bindable property.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Entry.FontAutoScalingEnabled">
            <summary>
            Determines whether or not the font of this entry should scale automatically according to the operating system settings. Default value is <see langword="true"/>.
            This is a bindable property.
            </summary>
            <remarks>Typically this should always be enabled for accessibility reasons.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Entry.IsTextPredictionEnabled">
            <summary>
            Determines whether text prediction and automatic text correction is enabled. Default value is <see langword="true"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Entry.ReturnType">
            <summary>
            Determines what the return key on the on-screen keyboard should look like. This is a bindable property.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Entry.CursorPosition">
            <summary>
            Gets or sets the position of the cursor. The value must be more than or equal to 0 and less or equal to the length of <see cref="P:Microsoft.Maui.Controls.InputView.Text"/>.
            This is a bindable property.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Entry.SelectionLength">
            <summary>
            Gets or sets the length of the selection. The selection will start at <see cref="P:Microsoft.Maui.Controls.Entry.CursorPosition"/>.
            This is a bindable property.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Entry.ReturnCommand">
            <summary>
            Gets or sets the command to run when the user presses the return key, either physically or on the on-screen keyboard.
            This is a bindable property.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Entry.ReturnCommandParameter">
            <summary>
            Gets or sets the parameter object for the <see cref="P:Microsoft.Maui.Controls.Entry.ReturnCommand" /> that can be used to provide extra information.
            This is a bindable property.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Entry.ClearButtonVisibility">
            <summary>
            Determines the behavior of the clear text button on this entry. This is a bindable property.
            </summary>
        </member>
        <member name="E:Microsoft.Maui.Controls.Entry.Completed">
            <summary>
            Occurs when the user finalizes the text in an entry with the return key.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Controls.Entry.SendCompleted">
            <summary>
            Internal method to trigger <see cref="E:Microsoft.Maui.Controls.Entry.Completed"/> and <see cref="P:Microsoft.Maui.Controls.Entry.ReturnCommand"/>.
            Should not be called manually outside of .NET MAUI.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Controls.Entry.On``1">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Controls.ExportEffectAttribute">
            <summary>Attribute that identifies a <see cref="T:Microsoft.Maui.Controls.Effect" /> with a unique identifier that can be used with <see cref="M:Microsoft.Maui.Controls.Effect.Resolve(System.String)" /> to locate an effect.</summary><remarks>
      <para>Developers must supply a name that is unique over the scope of the value that was supplied to <see cref="T:Microsoft.Maui.Controls.ResolutionGroupNameAttribute" />. The <see cref="M:Microsoft.Maui.Controls.Effect.Resolve(System.String)" /> method takes a string that is the concatenation of the the resolution group name that was provided to <see cref="T:Microsoft.Maui.Controls.ResolutionGroupNameAttribute" />, '<c>.</c>', and the name that was supplied to <see cref="T:Microsoft.Maui.Controls.ExportEffectAttribute" />, and returns an effect that will have the type <paramref name="effectType" />.</para>
      <example>
        <para>For example, with the declarations:</para>
        <code lang="csharp lang-csharp"><![CDATA[[assembly: ResolutionGroupName ("com.YourCompany")]
[assembly: ExportEffect (typeof (ShadowEffect), "ShadowEffect")]]]></code>
        <para>Then the code below will add the effect to a button:</para>
        <code lang="csharp lang-csharp"><![CDATA[var button = new Button { Text = "I have a shadow" };
button.Effects.Add (Effect.Resolve ("com.YourCompany.ShadowEffect"));]]></code>
      </example>
    </remarks><altmember cref="T:Microsoft.Maui.Controls.ResolutionGroupNameAttribute" />
        </member>
        <member name="M:Microsoft.Maui.Controls.ExportEffectAttribute.#ctor(System.Type,System.String)">
            <param name="effectType">The type of the marked <see cref="T:Microsoft.Maui.Controls.Effect" />.</param><param name="uniqueName">A unique name for the <see cref="T:Microsoft.Maui.Controls.Effect" />.</param><summary>Creates a new <see cref="T:Microsoft.Maui.Controls.ExportEffectAttribute" />.</summary><remarks>
          <para>Developers must supply a <paramref name="uniqueName" /> that is unique over the scope of the value that was supplied to <see cref="T:Microsoft.Maui.Controls.ResolutionGroupNameAttribute" />. The <see cref="M:Microsoft.Maui.Controls.Effect.Resolve(System.String)" /> method takes a string that is the concatenation of the the resolution group name that was provided to <see cref="T:Microsoft.Maui.Controls.ResolutionGroupNameAttribute" />, '<c>.</c>', and the name that was supplied to <see cref="T:Microsoft.Maui.Controls.ExportEffectAttribute" />, and returns an effect that will have the type <paramref name="effectType" />.</para>
          <example>
            <para>For example, with the declarations:</para>
            <code lang="csharp lang-csharp"><![CDATA[[assembly: ResolutionGroupName ("com.YourCompany")]
[assembly: ExportEffect (typeof (ShadowEffect), "ShadowEffect")]]]></code>
            <para>Then the code below will add the effect to a button:</para>
            <code lang="csharp lang-csharp"><![CDATA[var button = new Button { Text = "I have a shadow" };
button.Effects.Add (Effect.Resolve ("com.YourCompany.ShadowEffect"));]]></code>
          </example>
        </remarks><altmember cref="T:Microsoft.Maui.Controls.ResolutionGroupNameAttribute" />
        </member>
        <member name="T:Microsoft.Maui.Controls.ExportFontAttribute">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ExportFontAttribute.Alias">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ExportFontAttribute.#ctor(System.String)">
            <param name="fontFileName">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ExportFontAttribute.FontFileName">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.FileImageSource">
            <summary>An <see cref="T:Microsoft.Maui.Controls.ImageSource" /> that reads an image from a file.</summary><remarks>To be added.</remarks>
            <summary>An <see cref="T:Microsoft.Maui.Controls.ImageSource" /> that reads an image from a file.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.FileImageSource.FileProperty">
            <summary>Backing store for the <see cref="T:Microsoft.Maui.Controls.FileImageSource.File" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.FileImageSource.IsEmpty">
            <summary>Indicates whether the <see cref="P:Microsoft.Maui.Controls.FileImageSource.File" /> property is null or empty.</summary><value>
          <see langword="true" /> if null or empty.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.FileImageSource.File">
            <summary>Gets or sets the file from which this <see cref="T:Microsoft.Maui.Controls.FileImageSource" /> will load an image.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.FileImageSource.Cancel">
            <summary>Request a cancel of the ImageSource loading.</summary><returns>An awaitable Task.</returns><remarks>overridden for FileImageSource. FileImageSource are not cancellable, so this will always returns a completed Task with <see langword="false" /> as Result.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.FileImageSource.ToString">
            <summary>Returns the path to the file for the image, prefixed with the string, "File: ".</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.FileImageSourceConverter">
            <summary>A <see cref="T:System.ComponentModel.TypeConverter" /> that converts to <see cref="T:Microsoft.Maui.Controls.FileImageSource" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.FlyoutHeaderBehavior">
            <summary>Enumeration of modes followed by the <see cref="P:Microsoft.Maui.Controls.Shell.FlyoutHeader" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.FlyoutHeaderBehavior.Default">
            <summary>The default behavior is to remain fixed in the flyout while the content below may scroll.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.FlyoutHeaderBehavior.Fixed">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.FlyoutHeaderBehavior.Scroll">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.FlyoutHeaderBehavior.CollapseOnScroll">
            <summary>Collapses the flyout header when scrolling occurs.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.FlyoutLayoutBehavior">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.FlyoutLayoutBehavior.Default">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.FlyoutLayoutBehavior.SplitOnLandscape">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.FlyoutLayoutBehavior.Split">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.FlyoutLayoutBehavior.Popover">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.FlyoutLayoutBehavior.SplitOnPortrait">
            <summary>To be added.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.FlyoutPage">
            <summary>To be added.</summary><remarks>To be added.</remarks>
            <summary>To be added.</summary><remarks>To be added.</remarks>
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.FlyoutPage.IsGestureEnabledProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.FlyoutPage.IsPresentedProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.FlyoutPage.FlyoutLayoutBehaviorProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.FlyoutPage.Detail">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.FlyoutPage.IsGestureEnabled">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.FlyoutPage.IsPresented">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.FlyoutPage.Flyout">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.FlyoutPage.FlyoutLayoutBehavior">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.FlyoutPage.ShouldShowToolbarButton">
            <summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.FlyoutPage.UpdateFlyoutLayoutBehavior">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.FlyoutPage.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.FlyoutPage.On``1">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Controls.FocusEventArgs">
            <summary>Event args for <see cref="T:Microsoft.Maui.Controls.VisualElement" />'s <see cref="E:Microsoft.Maui.Controls.VisualElement.Focused" /> and <see cref="E:Microsoft.Maui.Controls.VisualElement.Unfocused" /> events.</summary><remarks>
    </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.FocusEventArgs.#ctor(Microsoft.Maui.Controls.VisualElement,System.Boolean)">
            <param name="visualElement">The <see cref="T:Microsoft.Maui.Controls.VisualElement" /> whose focused was changed.</param><param name="isFocused">Whether or not the <paramref name="visualElement" /> was focused.</param><summary>Constructs and initializes a new instance of the <see cref="T:Microsoft.Maui.Controls.FocusEventArgs" /> class.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.FocusEventArgs.IsFocused">
            <summary>Gets whether or not the <see cref="P:Microsoft.Maui.Controls.FocusEventArgs.VisualElement" /> was focused.</summary><value>
          <see langword="true" /> if the view was focused, <see langword="false" /> otherwise.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.FocusEventArgs.VisualElement">
            <summary>Gets the <see cref="T:Microsoft.Maui.Controls.VisualElement" /> who's focused was changed.</summary><value>The <see cref="T:Microsoft.Maui.Controls.VisualElement" /> who's focused was changed.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.FontAttributes">
            <summary>Enumerates values that describe font styles.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.FontAttributes.None">
            <summary>The font is unmodified.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.FontAttributes.Bold">
            <summary>The font is bold.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.FontAttributes.Italic">
            <summary>The font is italic.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.FontAttributesConverter">
            <summary>Converts a string into a <see cref="T:Microsoft.Maui.Controls.FontAttributes" /> object.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.FontElement.FontFamilyProperty">
            <summary>
            The backing store for the <see cref="P:Microsoft.Maui.Controls.Internals.IFontElement.FontFamily" /> bindable property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.FontElement.FontSizeProperty">
            <summary>
            The backing store for the <see cref="P:Microsoft.Maui.Controls.Internals.IFontElement.FontSize" /> bindable property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.FontElement.FontAttributesProperty">
            <summary>
            The backing store for the <see cref="P:Microsoft.Maui.Controls.Internals.IFontElement.FontAttributes" /> bindable property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.FontElement.FontAutoScalingEnabledProperty">
            <summary>
            The backing store for the <see cref="P:Microsoft.Maui.Controls.Internals.IFontElement.FontAutoScalingEnabled" /> bindable property.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.FontImageSource">
            <summary>To be added.</summary><remarks>To be added.</remarks>
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.FontImageSource.IsEmpty">
            <summary>Indicates whether the <see cref="P:Microsoft.Maui.Controls.FontImageSource" /> property is null or empty.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.FontImageSource.ColorProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.FontImageSource.Color" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.FontImageSource.Color">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.FontImageSource.FontFamilyProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.FontImageSource.FontFamily" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.FontImageSource.FontFamily">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.FontImageSource.GlyphProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.FontImageSource.Glyph" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.FontImageSource.Glyph">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.FontImageSource.SizeProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.FontImageSource.Size" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.FontImageSource.Size">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.FontSizeConverter">
            <summary>Converts a string into a font size.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.FormattedString">
            <summary>Represents a text with attributes applied to some parts.</summary><remarks>
    </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.FormattedString.#ctor">
            <summary>Initializes a new instance of the FormattedString class.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.FormattedString.Spans">
            <summary>Gets the collection of spans.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.FormattedString.ToString">
            <summary>Returns the text of the formatted string as an unformatted string.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Frame">
            <summary>An element containing a single child, with some framing options.</summary><remarks>
      <para>Frame have a default <see cref="P:Microsoft.Maui.Controls.Layout.Padding" /> of 20.</para>
      <para>
          The following example shows how to construct a new Frame with an Outline color.
          </para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[
        MainPage = new ContentPage () {
          Content = new Frame {
            Content = new Label { Text = "I'm Framous!" },
            BorderColor = Color.Silver,
            VerticalOptions = LayoutOptions.CenterAndExpand,
            HorizontalOptions = LayoutOptions.Center
          }
        };
          ]]></code>
      </example>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/Frame.iOS_Android_UWP.png" />
      </para>
    </remarks>
            <summary>An element containing a single child, with some framing options.</summary><remarks>
      <para>Frame have a default <see cref="P:Microsoft.Maui.Controls.Layout.Padding" /> of 20.</para>
      <para>
          The following example shows how to construct a new Frame with an Outline color.
          </para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[
        MainPage = new ContentPage () {
          Content = new Frame {
            Content = new Label { Text = "I'm Framous!" },
            BorderColor = Color.Silver,
            VerticalOptions = LayoutOptions.CenterAndExpand,
            HorizontalOptions = LayoutOptions.Center
          }
        };
          ]]></code>
      </example>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/Frame.iOS_Android_UWP.png" />
      </para>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Frame.BorderColorProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.Frame.BorderColor" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Frame.HasShadowProperty">
            <summary>Identifies the HasShadow bindable property.</summary><remarks>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Frame.CornerRadiusProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.Frame.CornerRadius" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Frame.#ctor">
            <summary>Initializes a new instance of the Frame class.</summary><remarks>A Frame has a default <see cref="P:Microsoft.Maui.Controls.Layout.Padding" /> of 20.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Frame.HasShadow">
            <summary>Gets or sets a flag indicating if the Frame has a shadow displayed. This is a bindable property.</summary><value>A <see cref="T:System.Boolean" /> indicating whether or not the Frame has a shadow. Default is <see langword="true" />.</value><remarks>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Frame.BorderColor">
            <summary>Gets or sets the border color for the frame.</summary><value>The border color for the frame.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Frame.CornerRadius">
            <summary>Gets or sets the corner radius of the frame.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Frame.On``1">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Controls.GestureElement">
            <summary>An element that can respond to gestures.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.GestureElement.#ctor">
            <summary>Creates a new <see cref="T:Microsoft.Maui.Controls.GestureElement" /> object with default values.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.GestureElement.GestureRecognizers">
            <summary>Gets the list of recognizers that belong to the element.</summary><value>The list of recognizers that belong to the element.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.GestureRecognizer">
            <summary>The base class for all gesture recognizers.</summary><remarks>
    </remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.GestureState">
            <summary>Enumeration specifying the various states of a gesture.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.GestureState.Began">
            <summary>The gesture has begun and has not ended, failed, or been cancelled.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.GestureState.Update">
            <summary>The gesture state is being updated.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.GestureState.Ended">
            <summary>The gesture has ended.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.GestureState.Failed">
            <summary>The gesture was not recognized.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.GestureState.Cancelled">
            <summary>The gesture was cancelled.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.GestureState.Possible">
            <summary>The gesture is in progress and may still become recognizable.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.GradientBrush">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.GradientBrush.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.GradientBrush.GradientStopsProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.GradientBrush.GradientStops">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.GradientStop">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.GradientStop.ColorProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.GradientStop.Color">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.GradientStop.OffsetProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.GradientStop.Offset">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.GradientStop.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.GradientStop.#ctor(Microsoft.Maui.Graphics.Color,System.Single)">
            <param name="color">To be added.</param><param name="offset">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.GradientStop.Equals(System.Object)">
            <param name="obj">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.GradientStop.GetHashCode">
            <summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.GradientStopCollection">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.HandlerAttribute">
            <summary>An abstract attribute whose subclasses specify the platform-specific renderers for Microsoft.Maui.Controls abstract controls.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.HandlerAttribute.Priority">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.HandlerAttribute.ShouldRegister">
            <summary>Returns a Boolean value that indicates whether the runtime should automatically register the handler for the target.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.Ellipse">
            <summary>To be added.</summary><remarks>To be added.</remarks>
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.Ellipse.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.Line">
            <summary>To be added.</summary><remarks>To be added.</remarks>
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.Line.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.Line.X1Property">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.Line.Y1Property">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.Line.X2Property">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.Line.Y2Property">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.Line.X1">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.Line.Y1">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.Line.X2">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.Line.Y2">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.Path">
            <summary>To be added.</summary><remarks>To be added.</remarks>
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.Path.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.Path.DataProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.Path.RenderTransformProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.Path.Data">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.Path.RenderTransform">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.Polygon">
            <summary>To be added.</summary><remarks>To be added.</remarks>
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.Polygon.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.Polygon.PointsProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.Polygon.FillRuleProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.Polygon.Points">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.Polygon.FillRule">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.Polyline">
            <summary>To be added.</summary><remarks>To be added.</remarks>
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.Polyline.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.Polyline.PointsProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.Polyline.FillRuleProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.Polyline.Points">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.Polyline.FillRule">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.Rectangle">
            <summary>To be added.</summary><remarks>To be added.</remarks>
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.Rectangle.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.Rectangle.RadiusXProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.Rectangle.RadiusYProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.Rectangle.RadiusX">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.Rectangle.RadiusY">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.Shape">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.Shape.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.Shape.FillProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.Shape.StrokeProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.Shape.StrokeThicknessProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.Shape.StrokeDashArrayProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.Shape.StrokeDashOffsetProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.Shape.StrokeLineCapProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.Shape.StrokeLineJoinProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.Shape.StrokeMiterLimitProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.Shape.AspectProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.Shape.Fill">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.Shape.Stroke">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.Shape.StrokeThickness">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.Shape.StrokeDashArray">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.Shape.StrokeDashOffset">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.Shape.StrokeLineCap">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.Shape.StrokeLineJoin">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.Shape.StrokeMiterLimit">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.Shape.Aspect">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.ArcSegment">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.ArcSegment.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.ArcSegment.#ctor(Microsoft.Maui.Graphics.Point,Microsoft.Maui.Graphics.Size,System.Double,Microsoft.Maui.Controls.SweepDirection,System.Boolean)">
            <param name="point">To be added.</param><param name="size">To be added.</param><param name="rotationAngle">To be added.</param><param name="sweepDirection">To be added.</param><param name="isLargeArc">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.ArcSegment.PointProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.ArcSegment.SizeProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.ArcSegment.RotationAngleProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.ArcSegment.SweepDirectionProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.ArcSegment.IsLargeArcProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.ArcSegment.Point">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.ArcSegment.Size">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.ArcSegment.RotationAngle">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.ArcSegment.SweepDirection">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.ArcSegment.IsLargeArc">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.BezierSegment">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.BezierSegment.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.BezierSegment.#ctor(Microsoft.Maui.Graphics.Point,Microsoft.Maui.Graphics.Point,Microsoft.Maui.Graphics.Point)">
            <param name="point1">To be added.</param><param name="point2">To be added.</param><param name="point3">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.BezierSegment.Point1Property">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.BezierSegment.Point2Property">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.BezierSegment.Point3Property">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.BezierSegment.Point1">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.BezierSegment.Point2">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.BezierSegment.Point3">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.CompositeTransform">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.CompositeTransform.CenterXProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.CompositeTransform.CenterYProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.CompositeTransform.ScaleXProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.CompositeTransform.ScaleYProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.CompositeTransform.SkewXProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.CompositeTransform.SkewYProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.CompositeTransform.RotationProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.CompositeTransform.TranslateXProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.CompositeTransform.TranslateYProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.CompositeTransform.CenterX">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.CompositeTransform.CenterY">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.CompositeTransform.ScaleX">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.CompositeTransform.ScaleY">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.CompositeTransform.SkewX">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.CompositeTransform.SkewY">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.CompositeTransform.Rotation">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.CompositeTransform.TranslateX">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.CompositeTransform.TranslateY">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.EllipseGeometry">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.EllipseGeometry.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.EllipseGeometry.#ctor(Microsoft.Maui.Graphics.Point,System.Double,System.Double)">
            <param name="center">To be added.</param><param name="radiusX">To be added.</param><param name="radiusY">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.EllipseGeometry.CenterProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.EllipseGeometry.RadiusXProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.EllipseGeometry.RadiusYProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.EllipseGeometry.Center">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.EllipseGeometry.RadiusX">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.EllipseGeometry.RadiusY">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.FillRule">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.FillRule.EvenOdd">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.FillRule.Nonzero">
            <summary>To be added.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.Geometry">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.GeometryCollection">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.GeometryGroup">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.GeometryGroup.ChildrenProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.GeometryGroup.FillRuleProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.GeometryGroup.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.GeometryGroup.Children">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.GeometryGroup.FillRule">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.GeometryHelper">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.GeometryHelper.FlattenGeometry(Microsoft.Maui.Controls.Shapes.Geometry,System.Double)">
            <param name="geoSrc">To be added.</param><param name="tolerance">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.GeometryHelper.FlattenGeometry(Microsoft.Maui.Controls.Shapes.PathGeometry,Microsoft.Maui.Controls.Shapes.Geometry,System.Double,Microsoft.Maui.Controls.Shapes.Matrix)">
            <param name="pathGeoDst">To be added.</param><param name="geoSrc">To be added.</param><param name="tolerance">To be added.</param><param name="matxPrevious">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.GeometryHelper.FlattenCubicBezier(System.Collections.Generic.List{Microsoft.Maui.Graphics.Point},Microsoft.Maui.Graphics.Point,Microsoft.Maui.Graphics.Point,Microsoft.Maui.Graphics.Point,Microsoft.Maui.Graphics.Point,System.Double)">
            <param name="points">To be added.</param><param name="ptStart">To be added.</param><param name="ptCtrl1">To be added.</param><param name="ptCtrl2">To be added.</param><param name="ptEnd">To be added.</param><param name="tolerance">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.GeometryHelper.FlattenQuadraticBezier(System.Collections.Generic.List{Microsoft.Maui.Graphics.Point},Microsoft.Maui.Graphics.Point,Microsoft.Maui.Graphics.Point,Microsoft.Maui.Graphics.Point,System.Double)">
            <param name="points">To be added.</param><param name="ptStart">To be added.</param><param name="ptCtrl">To be added.</param><param name="ptEnd">To be added.</param><param name="tolerance">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.GeometryHelper.FlattenArc(System.Collections.Generic.List{Microsoft.Maui.Graphics.Point},Microsoft.Maui.Graphics.Point,Microsoft.Maui.Graphics.Point,System.Double,System.Double,System.Double,System.Boolean,System.Boolean,System.Double)">
            <param name="points">To be added.</param><param name="pt1">To be added.</param><param name="pt2">To be added.</param><param name="radiusX">To be added.</param><param name="radiusY">To be added.</param><param name="angleRotation">To be added.</param><param name="isLargeArc">To be added.</param><param name="isCounterclockwise">To be added.</param><param name="tolerance">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.IGeometry">
            <summary>
            Enable you to describe the geometry of a 2D shape.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.LineGeometry">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.LineGeometry.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.LineGeometry.#ctor(Microsoft.Maui.Graphics.Point,Microsoft.Maui.Graphics.Point)">
            <param name="startPoint">To be added.</param><param name="endPoint">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.LineGeometry.StartPointProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.LineGeometry.EndPointProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.LineGeometry.StartPoint">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.LineGeometry.EndPoint">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.LineSegment">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.LineSegment.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.LineSegment.#ctor(Microsoft.Maui.Graphics.Point)">
            <param name="point">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.LineSegment.PointProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.LineSegment.Point">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.Matrix">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.Matrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <param name="m11">To be added.</param><param name="m12">To be added.</param><param name="m21">To be added.</param><param name="m22">To be added.</param><param name="offsetX">To be added.</param><param name="offsetY">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.Matrix.Identity">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.Matrix.SetIdentity">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.Matrix.IsIdentity">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.Matrix.Multiply(Microsoft.Maui.Controls.Shapes.Matrix,Microsoft.Maui.Controls.Shapes.Matrix)">
            <param name="trans1">To be added.</param><param name="trans2">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.Matrix.Append(Microsoft.Maui.Controls.Shapes.Matrix)">
            <param name="matrix">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.Matrix.Prepend(Microsoft.Maui.Controls.Shapes.Matrix)">
            <param name="matrix">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.Matrix.Rotate(System.Double)">
            <param name="angle">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.Matrix.RotatePrepend(System.Double)">
            <param name="angle">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.Matrix.RotateAt(System.Double,System.Double,System.Double)">
            <param name="angle">To be added.</param><param name="centerX">To be added.</param><param name="centerY">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)">
            <param name="angle">To be added.</param><param name="centerX">To be added.</param><param name="centerY">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.Matrix.Scale(System.Double,System.Double)">
            <param name="scaleX">To be added.</param><param name="scaleY">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.Matrix.ScalePrepend(System.Double,System.Double)">
            <param name="scaleX">To be added.</param><param name="scaleY">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)">
            <param name="scaleX">To be added.</param><param name="scaleY">To be added.</param><param name="centerX">To be added.</param><param name="centerY">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)">
            <param name="scaleX">To be added.</param><param name="scaleY">To be added.</param><param name="centerX">To be added.</param><param name="centerY">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.Matrix.Skew(System.Double,System.Double)">
            <param name="skewX">To be added.</param><param name="skewY">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.Matrix.SkewPrepend(System.Double,System.Double)">
            <param name="skewX">To be added.</param><param name="skewY">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.Matrix.Translate(System.Double,System.Double)">
            <param name="offsetX">To be added.</param><param name="offsetY">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.Matrix.TranslatePrepend(System.Double,System.Double)">
            <param name="offsetX">To be added.</param><param name="offsetY">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.Matrix.Transform(Microsoft.Maui.Graphics.Point)">
            <param name="point">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.Matrix.Transform(Microsoft.Maui.Graphics.Point[])">
            <param name="points">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.Matrix.Determinant">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.Matrix.HasInverse">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.Matrix.Invert">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.Matrix.M11">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.Matrix.M12">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.Matrix.M21">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.Matrix.M22">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.Matrix.OffsetX">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.Matrix.OffsetY">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.Matrix.CreateTranslation(System.Double,System.Double)">
            <summary>
            Sets the transformation to the given translation specified by the offset vector.
            </summary>
            <param name='offsetX'>The offset in X</param>
            <param name='offsetY'>The offset in Y</param>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.MatrixTransform">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.MatrixTransform.MatrixProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.MatrixTransform.Matrix">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.MatrixTypeConverter">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.PathFigure">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.PathFigure.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.PathFigure.SegmentsProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.PathFigure.StartPointProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.PathFigure.IsClosedProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.PathFigure.IsFilledProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.PathFigure.Segments">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.PathFigure.StartPoint">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.PathFigure.IsClosed">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.PathFigure.IsFilled">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.PathFigure.BatchBegin">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.PathFigure.BatchCommit">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.PathFigureCollection">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.PathFigureCollectionConverter">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.PathFigureCollectionConverter.ParseStringToPathFigureCollection(Microsoft.Maui.Controls.Shapes.PathFigureCollection,System.String)">
            <param name="pathFigureCollection">To be added.</param><param name="pathString">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.PathGeometry">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.PathGeometry.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.PathGeometry.#ctor(Microsoft.Maui.Controls.Shapes.PathFigureCollection)">
            <param name="figures">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.PathGeometry.#ctor(Microsoft.Maui.Controls.Shapes.PathFigureCollection,Microsoft.Maui.Controls.Shapes.FillRule)">
            <param name="figures">To be added.</param><param name="fillRule">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.PathGeometry.FiguresProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.PathGeometry.FillRuleProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.PathGeometry.Figures">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.PathGeometry.FillRule">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.PathGeometryConverter">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.PathSegment">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.PathSegment.BatchBegin">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.PathSegment.BatchCommit">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.PathSegmentCollection">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.PenLineCap">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.PenLineCap.Flat">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.PenLineCap.Square">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.PenLineCap.Round">
            <summary>To be added.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.PenLineJoin">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.PenLineJoin.Miter">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.PenLineJoin.Bevel">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.PenLineJoin.Round">
            <summary>To be added.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.PointCollectionConverter">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.PolyBezierSegment">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.PolyBezierSegment.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.PolyBezierSegment.#ctor(Microsoft.Maui.Controls.PointCollection)">
            <param name="points">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.PolyBezierSegment.PointsProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.PolyBezierSegment.Points">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.PolyLineSegment">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.PolyLineSegment.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.PolyLineSegment.#ctor(Microsoft.Maui.Controls.PointCollection)">
            <param name="points">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.PolyLineSegment.PointsProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.PolyLineSegment.Points">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.PolyQuadraticBezierSegment">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.PolyQuadraticBezierSegment.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.PolyQuadraticBezierSegment.#ctor(Microsoft.Maui.Controls.PointCollection)">
            <param name="points">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.PolyQuadraticBezierSegment.PointsProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.PolyQuadraticBezierSegment.Points">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.QuadraticBezierSegment">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.QuadraticBezierSegment.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.QuadraticBezierSegment.#ctor(Microsoft.Maui.Graphics.Point,Microsoft.Maui.Graphics.Point)">
            <param name="point1">To be added.</param><param name="point2">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.QuadraticBezierSegment.Point1Property">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.QuadraticBezierSegment.Point2Property">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.QuadraticBezierSegment.Point1">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.QuadraticBezierSegment.Point2">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.RectangleGeometry">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.RectangleGeometry.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.RectangleGeometry.#ctor(Microsoft.Maui.Graphics.Rect)">
            <param name="rect">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.RectangleGeometry.RectProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.RectangleGeometry.Rect">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.RotateTransform">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.RotateTransform.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.RotateTransform.#ctor(System.Double)">
            <param name="angle">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.RotateTransform.#ctor(System.Double,System.Double,System.Double)">
            <param name="angle">To be added.</param><param name="centerX">To be added.</param><param name="centerY">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.RotateTransform.AngleProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.RotateTransform.CenterXProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.RotateTransform.CenterYProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.RotateTransform.Angle">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.RotateTransform.CenterX">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.RotateTransform.CenterY">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.RoundRectangleGeometry">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.RoundRectangleGeometry.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.RoundRectangleGeometry.#ctor(Microsoft.Maui.CornerRadius,Microsoft.Maui.Graphics.Rect)">
            <param name="cornerRadius">To be added.</param><param name="rect">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.RoundRectangleGeometry.RectProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.RoundRectangleGeometry.Rect">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.RoundRectangleGeometry.CornerRadiusProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.RoundRectangleGeometry.CornerRadius">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.ScaleTransform">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.ScaleTransform.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.ScaleTransform.#ctor(System.Double,System.Double)">
            <param name="scaleX">To be added.</param><param name="scaleY">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.ScaleTransform.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <param name="scaleX">To be added.</param><param name="scaleY">To be added.</param><param name="centerX">To be added.</param><param name="centerY">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.ScaleTransform.ScaleXProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.ScaleTransform.ScaleYProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.ScaleTransform.CenterXProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.ScaleTransform.CenterYProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.ScaleTransform.ScaleX">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.ScaleTransform.ScaleY">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.ScaleTransform.CenterX">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.ScaleTransform.CenterY">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.SkewTransform">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.SkewTransform.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.SkewTransform.#ctor(System.Double,System.Double)">
            <param name="angleX">To be added.</param><param name="angleY">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.SkewTransform.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <param name="angleX">To be added.</param><param name="angleY">To be added.</param><param name="centerX">To be added.</param><param name="centerY">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.SkewTransform.AngleXProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.SkewTransform.AngleYProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.SkewTransform.CenterXProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.SkewTransform.CenterYProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.SkewTransform.AngleX">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.SkewTransform.AngleY">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.SkewTransform.CenterX">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.SkewTransform.CenterY">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.Transform">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.Transform.ValueProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.Transform.Value">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.TransformCollection">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.TransformGroup">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.TransformGroup.ChildrenProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.TransformGroup.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.TransformGroup.Children">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.TransformTypeConverter">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shapes.TranslateTransform">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.TranslateTransform.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shapes.TranslateTransform.#ctor(System.Double,System.Double)">
            <param name="x">To be added.</param><param name="y">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.TranslateTransform.XProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shapes.TranslateTransform.YProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.TranslateTransform.X">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shapes.TranslateTransform.Y">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TouchEventArgs.IsInsideBounds">
            <summary>
            This is only used for EndInteraction;
            </summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.Image">
            <summary>
      <see cref="T:Microsoft.Maui.Controls.View" /> that holds an image.</summary><remarks>
      <para>
            The following example creates a new image from a file
            </para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[
var image = new Image { Source = "picture.png" };]]></code>
      </example>
      <para>The FormsGallery sample, which can be found on the <format type="text/html"><a href="https://developer.xamarin.com/samples/tag/Microsoft.Maui.Controls/" target="_blank">Sample Applications</a></format> page, has a ImageDemoPage.cs file. This file contains a longer and more complete example.</para>
    </remarks>
            <summary>
      <see cref="T:Microsoft.Maui.Controls.View" /> that holds an image.</summary><remarks>
      <para>
            The following example creates a new image from a file
            </para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[
var image = new Image { Source = "picture.png" };]]></code>
      </example>
      <para>The FormsGallery sample, which can be found on the <format type="text/html"><a href="https://developer.xamarin.com/samples/tag/Microsoft.Maui.Controls/" target="_blank">Sample Applications</a></format> page, has a ImageDemoPage.cs file. This file contains a longer and more complete example.</para>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Image.SourceProperty">
            <summary>Identifies the Source bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Image.AspectProperty">
            <summary>Identifies the Aspect bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Image.IsOpaqueProperty">
            <summary>Backing store for the IsOpaque bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Image.IsLoadingProperty">
            <summary>Identifies the IsLoading bindable property.</summary><remarks>This bindable property is readonly.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Image.IsAnimationPlayingProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Image.#ctor">
            <summary>Initializes a new instance of the Image class.</summary><remarks>
          <para>
              The following example creates a new image from a file
              </para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
  var image = new Image { Source = "picture.png" };]]></code>
          </example>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Image.Aspect">
            <summary>Gets or sets the scaling mode for the image. This is a bindable property.</summary><value>A <see cref="T:Microsoft.Maui.Aspect" /> representing the scaling mode of the image. Default is <see cref="F:Microsoft.Maui.Aspect.AspectFit" />.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Image.IsLoading">
            <summary>Gets the loading status of the image. This is a bindable property.</summary><value>A <see cref="T:System.Boolean" /> indicating if the image is loading. Default is false.</value><remarks>
          <para>
              The following example illustrates running a  <see cref="T:Microsoft.Maui.Controls.ActivityIndicator" /> to indicate that the image is loading:</para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
var image = new Image { 
  Source = new ImageLoader {
    Uri = new Uri ("http://eoimages.gsfc.nasa.gov/images/imagerecords/57000/57723/globe_west_2048.jpg"),
    CachingEnabled = false,
  },
  WidthRequest = 200,
  HeightRequest = 200,
};
    
var indicator = new ActivityIndicator {Color = new Color (.5),};
indicator.SetBinding (ActivityIndicator.IsRunningProperty, "IsLoading");
indicator.BindingContext = image;]]></code>
          </example>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Image.IsOpaque">
            <summary>Gets or sets a Boolean value that, if <see langword="true" /> hints to the rendering engine that it may safely omit drawing visual elements behind the image.</summary><value>The value of the opacity rendering hint.</value><remarks>
          <para>When this property is <see langword="true" />, and if the <see cref="P:Microsoft.Maui.Controls.VisualElement.Opacity" /> property is set to its default value of <c>1.0</c>, and if the source image is not transparent, then the rendering engine on the target platform can safely ignore those portions of visual elements that appear behind this image when drawing the screen. This can improve performance. However, developers should not set this property to <see langword="true" /> if the alpha channel of the image indicates transparency, if the <see cref="P:Microsoft.Maui.Controls.VisualElement.Opacity" /> property is less than <c>1.0</c>, or if the source image itself is transparent. Doing any of these when this property is <see langword="true" /> may result in visual artifacts or other (undefined) behavior. Conversely, developers should ensure that this property is set to <see langword="false" /> if they suspect or know that any of the previously mentioned conditions may indicate that the image will be transparent or partially transparent.</para>
          <para>Setting this property does not change the opacity of the image. Instead, it indicates whether the rendering engine may treat the image as opaque while rendering.</para>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Image.IsAnimationPlaying">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Image.Source">
            <summary>Gets or sets the source of the image. This is a bindable property.</summary><value>An <see cref="T:Microsoft.Maui.Controls.ImageSource" /> representing the image source. Default is null.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Image.On``1">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Controls.ImageSource">
            <summary>Abstract class whose implementors load images from files or the Web.</summary><remarks>To be added.</remarks>
            <summary>Abstract class whose implementors load images from files or the Web.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ImageSource.IsEmpty">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ImageSource.Cancel">
            <summary>Request a cancel of the ImageSource loading.</summary><returns>An awaitable Task. The result of the Task indicates if the Task was successfully cancelled.</returns><remarks>Calling Cancel() multiple times will throw an exception.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ImageSource.FromFile(System.String)">
            <param name="file">The name of a file that contains a valid image.</param><summary>Returns a new <see cref="T:Microsoft.Maui.Controls.FileImageSource" /> that reads from <paramref name="file" />.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ImageSource.FromResource(System.String,System.Type)">
            <param name="resource">The name of a valid image resource in the assembly to which <paramref name="resolvingType" /> belongs.</param><param name="resolvingType">A type from the assembly in which to look up the image resource with <paramref name="resource" />.</param><summary>Creates a <see cref="T:Microsoft.Maui.Controls.ImageSource" /> from the specified resource in the specified source assembly.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ImageSource.FromResource(System.String,System.Reflection.Assembly)">
            <param name="resource">The name of a valid image resource in <paramref name="sourceAssembly" />.</param><param name="sourceAssembly">The source assembly in which to search for the image.</param><summary>Creates a <see cref="T:Microsoft.Maui.Controls.ImageSource" /> from the specified resource in the specified source assembly.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ImageSource.FromStream(System.Func{System.IO.Stream})">
            <param name="stream">A factory method that returns a new stream that supplies image data.</param><summary>Returns a new <see cref="T:Microsoft.Maui.Controls.StreamImageSource" /> that calls <paramref name="stream" /> and reads from the <see cref="T:System.IO.Stream" /> it returns.</summary><returns>A new <see cref="T:Microsoft.Maui.Controls.StreamImageSource" /> with the data returned by <paramref name="stream" />.</returns><remarks>The delegate provided to `stream` must return a new stream on every invocation.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ImageSource.FromStream(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{System.IO.Stream}})">
            <param name="stream">A factory method that returns a <see cref="T:System.Threading.Tasks.Task`1" /> that returns a new stream that supplies image data and supports cancellation.</param><summary>Returns a new <see cref="T:Microsoft.Maui.Controls.StreamImageSource" /> that calls <paramref name="stream" /> and reads from the <see cref="T:System.IO.Stream" /> it returns.</summary><returns>A new <see cref="T:Microsoft.Maui.Controls.StreamImageSource" /> with the data returned by <paramref name="stream" />.</returns><remarks>The delegate provided to `stream` must return a new stream on every invocation.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ImageSource.FromUri(System.Uri)">
            <param name="uri">A URI that identifies a valid image.</param><summary>Returns a new <see cref="T:Microsoft.Maui.Controls.UriImageSource" /> that reads from <paramref name="uri" />.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.StreamImageSource">
            <summary>
      <see cref="T:Microsoft.Maui.Controls.ImageSource" /> that loads an image from a <see cref="T:System.IO.Stream" />.</summary><remarks>To be added.</remarks>
            <summary>
      <see cref="T:Microsoft.Maui.Controls.ImageSource" /> that loads an image from a <see cref="T:System.IO.Stream" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.StreamImageSource.StreamProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.StreamImageSource.Stream" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.StreamImageSource.IsEmpty">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.StreamImageSource.Stream">
            <summary>Gets or sets the delegate responsible for returning a <see cref="T:System.IO.Stream" /> for the Image.</summary><value>
        </value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.UriImageSource">
            <summary>An ImageSource that loads an image from a URI, caching the result.</summary><remarks>To be added.</remarks>
            <summary>An ImageSource that loads an image from a URI, caching the result.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.UriImageSource.UriProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.UriImageSource.Uri" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.UriImageSource.IsEmpty">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.UriImageSource.CacheValidity">
            <summary>Gets or sets a <see cref="T:System.TimeSpan" /> structure that indicates the length of time after which the image cache becomes invalid.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.UriImageSource.CachingEnabled">
            <summary>Gets or sets a Boolean value that indicates whether caching is enabled on this <see cref="T:Microsoft.Maui.Controls.UriImageSource" /> object.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.UriImageSource.Uri">
            <summary>Gets or sets the URI for the image to get.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.UriImageSource.ToString">
            <summary>Returns the path to the file for the image, prefixed with the string, "Uri: ".</summary><returns>The path to the file for the image, prefixed with the string, "Uri: ".</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ImageButton">
            <summary>To be added.</summary><remarks>To be added.</remarks>
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ImageButton.CommandProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.ImageButton.Command" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ImageButton.CommandParameterProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.ImageButton.CommandParameter" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ImageButton.CornerRadiusProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.ImageButton.CornerRadius" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ImageButton.BorderWidthProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.ImageButton.BorderWidth" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ImageButton.BorderColorProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.ImageButton.BorderColor" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ImageButton.SourceProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.ImageButton.Source" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ImageButton.AspectProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.ImageButton.Aspect" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ImageButton.IsOpaqueProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.ImageButton.IsOpaque" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ImageButton.IsLoadingProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.ImageButton.IsLoading" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ImageButton.IsPressedProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.ImageButton.IsPressed" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ImageButton.PaddingProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.ImageButton.Padding" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ImageButton.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ImageButton.BorderColor">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ImageButton.CornerRadius">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ImageButton.BorderWidth">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ImageButton.Aspect">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ImageButton.IsLoading">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ImageButton.IsPressed">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ImageButton.IsOpaque">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ImageButton.Command">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ImageButton.CommandParameter">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ImageButton.Source">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ImageButton.On``1">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.Controls.ImageButton.SetIsLoading(System.Boolean)">
            <param name="isLoading">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ImageButton.SetIsPressed(System.Boolean)">
            <param name="isPressed">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ImageButton.SendClicked">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ImageButton.SendPressed">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ImageButton.SendReleased">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ImageButton.PropagateUpClicked">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ImageButton.PropagateUpPressed">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ImageButton.PropagateUpReleased">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ImageButton.RaiseImageSourcePropertyChanged">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ImageButton.Padding">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.IndicatorView">
            <summary>To be added.</summary><remarks>To be added.</remarks>
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.IndicatorView.IndicatorsShapeProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.IndicatorView.PositionProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.IndicatorView.CountProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.IndicatorView.MaximumVisibleProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.IndicatorView.IndicatorTemplateProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.IndicatorView.HideSingleProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.IndicatorView.IndicatorColorProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.IndicatorView.SelectedIndicatorColorProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.IndicatorView.IndicatorSizeProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.IndicatorView.ItemsSourceProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.IndicatorView.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.IndicatorView.IndicatorsShape">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.IndicatorView.IndicatorLayout">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.IndicatorView.Position">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.IndicatorView.Count">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.IndicatorView.MaximumVisible">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.IndicatorView.IndicatorTemplate">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.IndicatorView.HideSingle">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.IndicatorView.IndicatorColor">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.IndicatorView.SelectedIndicatorColor">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.IndicatorView.IndicatorSize">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.IndicatorView.ItemsSource">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Label">
            <summary>A <see cref="T:Microsoft.Maui.Controls.View" /> that displays text.</summary><remarks>
      <para>A Label is used to display single-line text elements as well as multi-line blocks of text.</para>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/Label.TripleScreenShot.png" />
      </para>
      <para>The following example, adapted from the default Microsoft.Maui.Controls solution, shows a basic use:</para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[
public class App : Application
{
    public App ()
    {
    MainPage = new ContentPage { 
        Content = new Label {
            Text = "Hello, Forms!",
            FontSize = Device.GetNamedSize (NamedSize.Large, typeof(Label)),
            VerticalOptions = LayoutOptions.CenterAndExpand,
            HorizontalOptions = LayoutOptions.CenterAndExpand,
        },
    };
}
]]></code>
        <para>The FormsGallery sample, which can be found on the <format type="text/html"><a href="https://developer.xamarin.com/samples/tag/Microsoft.Maui.Controls/" target="_blank">Sample Applications</a></format> page, has a LabelDemoPage.cs file. This file contains a longer and more complete example.</para>
      </example>
    </remarks>
            <summary>A <see cref="T:Microsoft.Maui.Controls.View" /> that displays text.</summary><remarks>
      <para>A Label is used to display single-line text elements as well as multi-line blocks of text.</para>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/Label.TripleScreenShot.png" />
      </para>
      <para>The following example, adapted from the default Microsoft.Maui.Controls solution, shows a basic use:</para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[
public class App : Application
{
    public App ()
    {
    MainPage = new ContentPage { 
        Content = new Label {
            Text = "Hello, Forms!",
            FontSize = Device.GetNamedSize (NamedSize.Large, typeof(Label)),
            VerticalOptions = LayoutOptions.CenterAndExpand,
            HorizontalOptions = LayoutOptions.CenterAndExpand,
        },
    };
}
]]></code>
        <para>The FormsGallery sample, which can be found on the <format type="text/html"><a href="https://developer.xamarin.com/samples/tag/Microsoft.Maui.Controls/" target="_blank">Sample Applications</a></format> page, has a LabelDemoPage.cs file. This file contains a longer and more complete example.</para>
      </example>
    </remarks>
            <summary>A <see cref="T:Microsoft.Maui.Controls.View" /> that displays text.</summary><remarks>
      <para>A Label is used to display single-line text elements as well as multi-line blocks of text.</para>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/Label.TripleScreenShot.png" />
      </para>
      <para>The following example, adapted from the default Microsoft.Maui.Controls solution, shows a basic use:</para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[
public class App : Application
{
    public App ()
    {
    MainPage = new ContentPage { 
        Content = new Label {
            Text = "Hello, Forms!",
            FontSize = Device.GetNamedSize (NamedSize.Large, typeof(Label)),
            VerticalOptions = LayoutOptions.CenterAndExpand,
            HorizontalOptions = LayoutOptions.CenterAndExpand,
        },
    };
}
]]></code>
        <para>The FormsGallery sample, which can be found on the <format type="text/html"><a href="https://developer.xamarin.com/samples/tag/Microsoft.Maui.Controls/" target="_blank">Sample Applications</a></format> page, has a LabelDemoPage.cs file. This file contains a longer and more complete example.</para>
      </example>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Label.HorizontalTextAlignmentProperty">
            <summary>Identifies the HorizontalTextAlignment bindable property</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Label.VerticalTextAlignmentProperty">
            <summary>Identifies the VerticalTextAlignment bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Label.TextColorProperty">
            <summary>Backing store for the TextColor bindable property.</summary><remarks>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Label.CharacterSpacingProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Label.TextProperty">
            <summary>Backing store for the Text bindable property.</summary><remarks>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Label.FontFamilyProperty">
            <summary>Backing store for the FontFamily property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Label.FontSizeProperty">
            <summary>Backing store for the FontSize property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Label.FontAttributesProperty">
            <summary>Backing store for the FontAttributes property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Label.TextTransformProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Label.TextDecorationsProperty">
            <summary>Static method providing the <see cref="T:Microsoft.Maui.Controls.BindableProperty" /> associated with <see cref="P:Microsoft.Maui.Controls.Label.TextDecorations" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Label.FormattedTextProperty">
            <summary>Backing store for the FormattedText property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Label.TextTransform">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Label.UpdateFormsText(System.String,Microsoft.Maui.TextTransform)">
            <param name="source">To be added.</param><param name="textTransform">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Label.LineBreakModeProperty">
            <summary>Backing store for the LineBreakMode bindable property.</summary><remarks>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Label.LineHeightProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.Label.LineHeight" /> bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Label.MaxLinesProperty">
            <summary>Static method providing the <see cref="T:Microsoft.Maui.Controls.BindableProperty" /> for <see cref="P:Microsoft.Maui.Controls.Label.MaxLines" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Label.PaddingProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Label.TextTypeProperty">
            <summary>Backing store for the TextType bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Label.#ctor">
            <summary>Initializes a new instance of the Label class.</summary><remarks>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Label.FormattedText">
            <summary>Gets or sets the formatted text for the Label. This is a bindable property.</summary><value>The <see cref="T:Microsoft.Maui.Controls.FormattedString" /> value to be displayed inside of the Label. This is a bindable property.</value><remarks>Setting FormattedText to a non-null value will set the Text property to null.
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Label.HorizontalTextAlignment">
            <summary>Gets or sets the horizontal alignment of the Text property. This is a bindable property.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Label.LineBreakMode">
            <summary>Gets or sets the LineBreakMode for the Label. This is a bindable property.</summary><value>The <see cref="T:Microsoft.Maui.LineBreakMode" /> value for the Label. The default is <see cref="F:Microsoft.Maui.LineBreakMode.WordWrap" /></value><remarks>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Label.Text">
            <summary>Gets or sets the text for the Label. This is a bindable property.</summary><value>The <see cref="T:System.String" /> value to be displayed inside of the Label.</value><remarks>Setting Text to a non-null value will set the FormattedText property to null.
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Label.TextColor">
            <summary>Gets or sets the <see cref="T:Microsoft.Maui.Graphics.Color" /> for the text of this Label. This is a bindable property.</summary><value>The <see cref="T:Microsoft.Maui.Graphics.Color" /> value.</value><remarks>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Label.CharacterSpacing">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Label.VerticalTextAlignment">
            <summary>Gets or sets the vertical alignement of the Text property. This is a bindable property.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Label.FontAttributes">
            <summary>Gets a value that indicates whether the font for the label is bold, italic, or neither.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Label.TextDecorations">
            <summary>Gets or sets the <see cref="T:Microsoft.Maui.TextDecorations" /> applied to <see cref="P:Microsoft.Maui.Controls.Label.Text" />.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Label.FontFamily">
            <summary>Gets or sets the font family to which the font for the label belongs.</summary><value>The font family, or null for the platform default font family.</value><remarks>The font family can refer to a system font or a <a href="https://docs.microsoft.com/en-us/xamarin/xamarin-forms/user-interface/text/fonts#use-a-custom-font">custom font</a>.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Label.FontSize">
            <summary>Gets the size of the font for the label.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Label.LineHeight">
            <summary>Gets or sets the multiplier to apply to the default line height when displaying text.</summary><value>The multiplier to apply to the default line height when displaying text.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Label.MaxLines">
            <summary>Gets or sets the maximum number of lines allowed in the <see cref="T:Microsoft.Maui.Controls.Label" />.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Label.Padding">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Label.TextType">
            <summary>Determines whether the Label should display plain text or HTML text.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Label.On``1">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.Controls.Label.GetChildElements(Microsoft.Maui.Graphics.Point)">
            <param name="point">The point under which to look for child elements.</param><summary>Returns the child elements that are under the specified point.</summary><returns>The child elements that are under the specified point.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Layout">
            <summary>
      <para>Provides the base class for all Layout elements. Use Layout elements to position and size child elements in Microsoft.Maui.Controls applications.</para>
    </summary><remarks>
      <para>Subtypes of <see cref="T:Microsoft.Maui.Controls.Layout" /> include <see cref="T:Microsoft.Maui.Controls.ContentView" />, <see cref="T:Microsoft.Maui.Controls.ScrollView" />, and <see cref="T:Microsoft.Maui.Controls.Layout" />, as shown in the following diagram.</para>
      <para>The <see cref="P:Microsoft.Maui.Controls.Layout.Children" /> property of <see cref="T:Microsoft.Maui.Controls.Layout" /> contains a list of children of the parameterized type <c>T</c>, which must be a type of <see cref="T:Microsoft.Maui.Controls.View" />. Since <see cref="T:Microsoft.Maui.Controls.Layout" /> is itself a subclass of <see cref="T:Microsoft.Maui.Controls.View" />, this allows <see cref="T:Microsoft.Maui.Controls.Layout" />s to hold sub-layouts, scrolling regions, &amp; etc.</para>
    </remarks><altmember cref="T:Microsoft.Maui.Controls.ContentView" /><altmember cref="T:Microsoft.Maui.Controls.Layout" /><altmember cref="T:Microsoft.Maui.Controls.ScrollView" />
        </member>
        <member name="P:Microsoft.Maui.Controls.Layout.Children">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Layout.IsClippedToBoundsProperty">
            <summary>Identifies the <see cref="P:Microsoft.Maui.Controls.Layout.IsClippedToBounds" /> bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Layout.IsClippedToBounds">
            <summary>Gets or sets a value which determines if the Layout should clip its children to its bounds.</summary><value>
          <see langword="true" /> if the Layout is clipped; otherwise, <see langword="false" />. The default value is <see langword="false" />.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Layout.PaddingProperty">
            <summary>Identifies the Padding bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Layout.Padding">
            <summary>Gets or sets the inner padding of the Layout.</summary><value>The Thickness values for the layout. The default value is a Thickness with all values set to 0.</value><remarks>
          <para>
            The padding is the space between the bounds of a layout and the bounding region into which its children should be arranged into.
          </para>
          <para>
              The following example shows setting the padding of a Layout to inset its children.
              </para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
  var stackLayout = new StackLayout {
    Padding = new Thickness (10, 10, 10, 20),
    Children = {
      new Label {Text = "Hello"},
      new Label {Text = "World"}
    }
  }
              ]]></code>
          </example>
        </remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.MenuItem">
            <summary>Class that presents a menu item and associates it with a command.</summary><remarks>To be added.</remarks>
            <summary>Class that presents a menu item and associates it with a command.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.MenuItem.AcceleratorProperty">
            <summary>Backing store for the accelerator attached property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.MenuItem.CommandProperty">
            <summary>Identifies the command bound property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.MenuItem.CommandParameterProperty">
            <summary>Identifies the command parameter bound property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.MenuItem.IsDestructiveProperty">
            <summary>Identifies the IsDestructive bound property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.MenuItem.IconImageSourceProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.MenuItem.IsEnabledProperty">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.MenuItem.TextProperty">
            <summary>Identifies the text bound property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.MenuItem.GetAccelerator(Microsoft.Maui.Controls.BindableObject)">
            <param name="bindable">The bindable object for which to retrieve the accelerator keys.</param><summary>Gets the accelerator for the specified bindable object.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.MenuItem.SetAccelerator(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.Accelerator)">
            <param name="bindable">The bindable object for which to set the accelerator keys.</param><param name="value">The new accelerator for the object.</param><summary>Sets the accelerator for the specified bindable object.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.MenuItem.#ctor">
            <summary>Intitializes a new <see cref="T:Microsoft.Maui.Controls.MenuItem" /> instance.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.MenuItem.Command">
            <summary>Gets or sets the command that is run when the menu is clicked.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.MenuItem.CommandParameter">
            <summary>Gets or sets the parameter that is passed to the command.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.MenuItem.IconImageSource">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.MenuItem.IsDestructive">
            <summary>Gets or sets a value that indicates whether or not the menu item removes its associated UI element.</summary><value>False</value><remarks>
          <para>The following example shows how to add a MenuItem with IsDestructive set to True.</para>
          <example>
            <code lang="XAML"><![CDATA[
<ViewCell.ContextActions>
    <MenuItem Text="Delete" IsDestructive="True"/>
</ViewCell.ContextActions>
      ]]></code>
          </example>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.MenuItem.Text">
            <summary>The text of the menu item.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.MenuItem.IsEnabled">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.MenuItem.StyleClass">
            <summary>Sets the StyleClass of the generated <see cref="T:Microsoft.Maui.Controls.FlyoutItem" /> when used with <see cref="T:Microsoft.Maui.Controls.Shell" /></summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.MenuItem.class">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.NavigationPage">
            <summary>A <see cref="T:Microsoft.Maui.Controls.Page" /> that manages the navigation and user-experience of a stack of other pages.</summary><remarks>
      <para>Note that on the Android platform, <see cref="T:Microsoft.Maui.Controls.INavigation" /> operations do not generate activity lifecycle notifications. For each <see cref="T:Microsoft.Maui.Controls.Page" /> that you push or pop, the Android implementation of <see cref="T:Microsoft.Maui.Controls.NavigationPage" /> simply adds or removes the content of the page to or from a single activity.</para>
      <para>Also note that the Windows Phone platform provides navigation natively. Therefore, you do not need to use a <see cref="T:Microsoft.Maui.Controls.NavigationPage" /> object to get navigation on that platform.</para>
    </remarks>
            <summary>A <see cref="T:Microsoft.Maui.Controls.Page" /> that manages the navigation and user-experience of a stack of other pages.</summary><remarks>
      <para>Note that on the Android platform, <see cref="T:Microsoft.Maui.Controls.INavigation" /> operations do not generate activity lifecycle notifications. For each <see cref="T:Microsoft.Maui.Controls.Page" /> that you push or pop, the Android implementation of <see cref="T:Microsoft.Maui.Controls.NavigationPage" /> simply adds or removes the content of the page to or from a single activity.</para>
      <para>Also note that the Windows Phone platform provides navigation natively. Therefore, you do not need to use a <see cref="T:Microsoft.Maui.Controls.NavigationPage" /> object to get navigation on that platform.</para>
    </remarks>
            <summary>A <see cref="T:Microsoft.Maui.Controls.Page" /> that manages the navigation and user-experience of a stack of other pages.</summary><remarks>
      <para>Note that on the Android platform, <see cref="T:Microsoft.Maui.Controls.INavigation" /> operations do not generate activity lifecycle notifications. For each <see cref="T:Microsoft.Maui.Controls.Page" /> that you push or pop, the Android implementation of <see cref="T:Microsoft.Maui.Controls.NavigationPage" /> simply adds or removes the content of the page to or from a single activity.</para>
      <para>Also note that the Windows Phone platform provides navigation natively. Therefore, you do not need to use a <see cref="T:Microsoft.Maui.Controls.NavigationPage" /> object to get navigation on that platform.</para>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.NavigationPage.BackButtonTitleProperty">
            <summary>Identifies the property associated with the title of the back button.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.NavigationPage.HasNavigationBarProperty">
            <summary>Backing store for the HasNavigationBar property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.NavigationPage.HasBackButtonProperty">
            <summary>Backing store for the HasBackButton property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.NavigationPage.BarBackgroundColorProperty">
            <summary>Identifies the property associated with the color of the NavigationPage's bar background color.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.NavigationPage.BarBackgroundProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.NavigationPage.BarTextColorProperty">
            <summary>Identifies the property associated with the color of the NavigationPage's bar text color.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.NavigationPage.TitleIconImageSourceProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.NavigationPage.IconColorProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.NavigationPage.TitleViewProperty">
            <summary>Backing store for the attached property that gets and sets title views.</summary><remarks>On Windows, the TitleView will appear in the content area of the MauiToolbar control. By default, the content area's width is auto-sized to the content, with the remaining area made available for toolbar commands. This is to support the default Windows-specific dynamic overflow ability of the commands. If a user wants the TitleView to occupy all of the space not used by toolbar commands, dynamic overflow needs to be turned off, which can be accomplished by calling the Page's SetToolbarDynamicOverflowEnabled PlatformSpecific to false:
		
		<example>
			<code>this.On&lt;WindowsOS&gt;().SetToolbarDynamicOverflowEnabled(false);</code>
		</example>
		
		</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.NavigationPage.CurrentPageProperty">
            <summary>Identifies the <see cref="P:Microsoft.Maui.Controls.NavigationPage.CurrentPage" /> property.</summary><remarks>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.NavigationPage.RootPageProperty">
            <summary>
          Identifies the <see cref="P:Microsoft.Maui.Controls.NavigationPage.RootPage" /> property.
        </summary><remarks>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.NavigationPage.#ctor">
            <summary>Initializes a new <see cref="T:Microsoft.Maui.Controls.NavigationPage" /> object.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.NavigationPage.#ctor(Microsoft.Maui.Controls.Page)">
            <param name="root">To be added.</param><summary>Creates a new <see cref="T:Microsoft.Maui.Controls.NavigationPage" /> element with <paramref name="root" /> as its root element.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.NavigationPage.BarBackgroundColor">
            <summary>Gets or sets the background color for the bar at the top of the NavigationPage.</summary><value>
        </value><remarks>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.NavigationPage.BarBackground">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.NavigationPage.BarTextColor">
            <summary>Gets or sets the text that appears on the bar at the top of the NavigationPage.</summary><value>
        </value><remarks>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.NavigationPage.Peek(System.Int32)">
            <param name="depth">To be added.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.NavigationPage.CurrentPage">
            <summary>The <see cref="T:Microsoft.Maui.Controls.Page" /> that is currently top-most on the navigation stack.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.NavigationPage.RootPage">
            <summary>
          The <see cref="T:Microsoft.Maui.Controls.Page" /> that is the root of the navigation stack.
        </summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.NavigationPage.GetBackButtonTitle(Microsoft.Maui.Controls.BindableObject)">
            <param name="page">The <see cref="T:Microsoft.Maui.Controls.Page" /> whose back-button's title is being requested.</param><summary>The title of the back button for the specified <paramref name="page" />.</summary><returns>The title of the back button that would be shown if the specified <paramref name="page" /> were the <see cref="P:Microsoft.Maui.Controls.NavigationPage.CurrentPage" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.NavigationPage.GetHasBackButton(Microsoft.Maui.Controls.Page)">
            <param name="page">To be added.</param><summary>Returns a value that indicates whether <paramref name="page" /> has a back button.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.NavigationPage.GetHasNavigationBar(Microsoft.Maui.Controls.BindableObject)">
            <param name="page">The <see cref="T:Microsoft.Maui.Controls.Page" /> being queried.</param><summary>Returns a value that indicates whether the <paramref name="page" /> has a navigation bar.</summary><returns>
          <see langword="true" /> if <paramref name="page" /> would display a navigation bar were it the <see cref="P:Microsoft.Maui.Controls.NavigationPage.CurrentPage" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.NavigationPage.GetTitleIconImageSource(Microsoft.Maui.Controls.BindableObject)">
            <param name="bindable">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.NavigationPage.GetTitleView(Microsoft.Maui.Controls.BindableObject)">
            <param name="bindable">The bindable object whose title view to get.</param><summary>Returns the view to use as a title for the navigation page.</summary><returns>The view to use as a title for the navigation page.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.NavigationPage.GetIconColor(Microsoft.Maui.Controls.BindableObject)">
            <param name="bindable">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.NavigationPage.PopAsync">
            <summary>Asynchronously removes the top <see cref="T:Microsoft.Maui.Controls.Page" /> from the navigation stack.</summary><returns>The <see cref="T:Microsoft.Maui.Controls.Page" /> that had been at the top of the navigation stack.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.NavigationPage.PopAsync(System.Boolean)">
            <param name="animated">To be added.</param><summary>Asynchronously removes the top <see cref="T:Microsoft.Maui.Controls.Page" /> from the navigation stack, with optional animation.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.NavigationPage.PopToRootAsync">
            <summary>Pops all but the root <see cref="T:Microsoft.Maui.Controls.Page" /> off the navigation stack.</summary><returns>A task that represents the asynchronous dismiss operation.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.NavigationPage.PopToRootAsync(System.Boolean)">
            <param name="animated">To be added.</param><summary>A task for asynchronously popping all pages off of the navigation stack.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.NavigationPage.PushAsync(Microsoft.Maui.Controls.Page)">
            <param name="page">The <see cref="T:Microsoft.Maui.Controls.Page" /> to present.</param><summary>Presents a <see cref="T:Microsoft.Maui.Controls.Page" /> by asynchronously pushing it onto the navigation stack.</summary><returns>An awaitable Task, indicating the Push completion.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.NavigationPage.PushAsync(Microsoft.Maui.Controls.Page,System.Boolean)">
            <param name="page">To be added.</param><param name="animated">To be added.</param><summary>A task for asynchronously pushing a page onto the navigation stack, with optional animation.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.NavigationPage.SetBackButtonTitle(Microsoft.Maui.Controls.BindableObject,System.String)">
            <param name="page">To be added.</param><param name="value">To be added.</param><summary>Sets the title that appears on the back button for <paramref name="page" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.NavigationPage.SetHasBackButton(Microsoft.Maui.Controls.Page,System.Boolean)">
            <param name="page">To be added.</param><param name="value">To be added.</param><summary>Adds or removes a back button to <paramref name="page" />, with optional animation.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.NavigationPage.SetHasNavigationBar(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="page">To be added.</param><param name="value">To be added.</param><summary>Sets a value that indicates whether or not this <see cref="T:Microsoft.Maui.Controls.NavigationPage" /> element has a navigation bar.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.NavigationPage.SetTitleIconImageSource(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.ImageSource)">
            <param name="bindable">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.NavigationPage.SetTitleView(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.View)">
            <param name="bindable">The bindable object whose title to set.</param><param name="value">The view to use.</param><summary>Sets the view to use as the title for the navigation page.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.NavigationPage.SetIconColor(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Graphics.Color)">
            <param name="bindable">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.NavigationPage.On``1">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Controls.Page">
            <summary>A <see cref="T:Microsoft.Maui.Controls.VisualElement" /> that occupies the entire screen.</summary><remarks>
      <para>
        <see cref="T:Microsoft.Maui.Controls.Page" /> is primarily a base class for more useful derived types. Objects that are derived from the <see cref="T:Microsoft.Maui.Controls.Page" /> class are most prominently used as the top level UI element in Microsoft.Maui.Controls applications. In addition to their role as the main pages of <see cref="N:Microsoft.Maui.Controls" /> applications, <see cref="T:Microsoft.Maui.Controls.Page" /> objects and their descendants can be used with navigation classes, such as <see cref="T:Microsoft.Maui.Controls.NavigationPage" /> or <see cref="T:Microsoft.Maui.Controls.FlyoutPage" />, among others, to provide rich user experiences that conform to the expected behaviors on each platform.</para>
    </remarks>
            <summary>A <see cref="T:Microsoft.Maui.Controls.VisualElement" /> that occupies the entire screen.</summary><remarks>
      <para>
        <see cref="T:Microsoft.Maui.Controls.Page" /> is primarily a base class for more useful derived types. Objects that are derived from the <see cref="T:Microsoft.Maui.Controls.Page" /> class are most prominently used as the top level UI element in Microsoft.Maui.Controls applications. In addition to their role as the main pages of <see cref="N:Microsoft.Maui.Controls" /> applications, <see cref="T:Microsoft.Maui.Controls.Page" /> objects and their descendants can be used with navigation classes, such as <see cref="T:Microsoft.Maui.Controls.NavigationPage" /> or <see cref="T:Microsoft.Maui.Controls.FlyoutPage" />, among others, to provide rich user experiences that conform to the expected behaviors on each platform.</para>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Page.BusySetSignalName">
            <summary>This method is for internal use.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Page.AlertSignalName">
            <summary>This method is for internal use.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Page.PromptSignalName">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Page.ActionSheetSignalName">
            <summary>This method is for internal use.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Page.BackgroundImageSourceProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Page.IsBusyProperty">
            <summary>Identifies the <see cref="P:Microsoft.Maui.Controls.Page.IsBusy" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Page.PaddingProperty">
            <summary>Identifies the <see cref="P:Microsoft.Maui.Controls.Page.Padding" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Page.TitleProperty">
            <summary>Identifies the <see cref="P:Microsoft.Maui.Controls.Page.Title" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Page.IconImageSourceProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Page.#ctor">
            <summary>Creates a new <see cref="T:Microsoft.Maui.Controls.Page" /> element with default values.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Page.BackgroundImageSource">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Page.IconImageSource">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Page.IsBusy">
            <summary>Marks the Page as busy. This will cause the platform specific global activity indicator to show a busy state.</summary><value>A bool indicating if the Page is busy or not.</value><remarks>Setting IsBusy to true on multiple pages at once will cause the global activity indicator to run until both are set back to false. It is the authors job to unset the IsBusy flag before cleaning up a Page.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Page.Padding">
            <summary>The space between the content of the <see cref="T:Microsoft.Maui.Controls.Page" /> and it's border.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Page.Title">
            <summary>The <see cref="T:Microsoft.Maui.Controls.Page" />'s title.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Page.ToolbarItems">
            <summary>A set of <see cref="T:Microsoft.Maui.Controls.ToolbarItem" />s, implemented in a platform-specific manner.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Page.ContainerArea">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Page.IgnoresContainerArea">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Page.InternalChildren">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Page.DisplayActionSheet(System.String,System.String,System.String,System.String[])">
            <param name="title">Title of the displayed action sheet. Must not be <see langword="null" />.</param><param name="cancel">Text to be displayed in the 'Cancel' button. Can be <see langword="null" /> to hide the cancel action.</param><param name="destruction">Text to be displayed in the 'Destruct' button.  Can be <see langword="null" /> to hide the destructive option.</param><param name="buttons">Text labels for additional buttons. Must not be <see langword="null" />.</param><summary>Displays a native platform action sheet, allowing the application user to choose from several buttons.</summary><returns>An awaitable Task that displays an action sheet and returns the Text of the button pressed by the user.</returns><remarks>
          <para>Developers should be aware that Windows' line endings, CR-LF, only work on Windows systems, and are incompatible with iOS and Android. A particular consequence of this is that characters that appear after a CR-LF, (For example, in the title.) may not be displayed on non-Windows platforms. Developers must use the correct line endings for each of the targeted systems.</para>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Page.DisplayAlert(System.String,System.String,System.String)">
            <param name="title">The title of the alert dialog.</param><param name="message">The body text of the alert dialog.</param><param name="cancel">Text to be displayed on the 'Cancel' button.</param><summary>Presents an alert dialog to the application user with a single cancel button.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Page.DisplayAlert(System.String,System.String,System.String,System.String)">
            <param name="title">The title of the alert dialog.</param><param name="message">The body text of the alert dialog.</param><param name="accept">Text to be displayed on the 'Accept' button.</param><param name="cancel">Text to be displayed on the 'Cancel' button.</param><summary>Presents an alert dialog to the application user with an accept and a cancel button.</summary><returns>A task that contains the user's choice as a Boolean value. <see langword="true" /> indicates that the user accepted the alert. <see langword="false" /> indicates that the user cancelled the alert.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Page.DisplayAlert(System.String,System.String,System.String,Microsoft.Maui.FlowDirection)">
            <param name="title">The title of the alert dialog.</param><param name="message">The body text of the alert dialog.</param><param name="cancel">Text to be displayed on the 'Cancel' button.</param><summary>Presents an alert dialog to the application user with a single cancel button.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Page.DisplayAlert(System.String,System.String,System.String,System.String,Microsoft.Maui.FlowDirection)">
            <param name="title">The title of the alert dialog.</param><param name="message">The body text of the alert dialog.</param><param name="accept">Text to be displayed on the 'Accept' button.</param><param name="cancel">Text to be displayed on the 'Cancel' button.</param><summary>Presents an alert dialog to the application user with an accept and a cancel button.</summary><returns>A task that contains the user's choice as a Boolean value. <see langword="true" /> indicates that the user accepted the alert. <see langword="false" /> indicates that the user cancelled the alert.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Page.DisplayPromptAsync(System.String,System.String,System.String,System.String,System.String,System.Int32,Microsoft.Maui.Keyboard,System.String)">
            <param name="title">To be added.</param><param name="message">To be added.</param><param name="accept">To be added.</param><param name="cancel">To be added.</param><param name="placeholder">To be added.</param><param name="maxLength">To be added.</param><param name="keyboard">To be added.</param><param name="initialValue">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Page.ForceLayout">
            <summary>Forces the <see cref="T:Microsoft.Maui.Controls.Page" /> to perform a layout pass.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Page.SendBackButtonPressed">
            <summary>Calls <see cref="M:Microsoft.Maui.Controls.Page.OnBackButtonPressed" />.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Page.SendAppearing">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Page.SendDisappearing">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Page.On``1">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Controls.Picker">
            <summary>A <see cref="T:Microsoft.Maui.Controls.View" /> control for picking an element in a list.</summary><remarks>
      <para>The visual representation of a Picker is similar to a <see cref="T:Microsoft.Maui.Controls.Entry" />, but a picker control appears in place of a keyboard.</para>
      <para>The following example shows the creation of a Picker.</para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[using System;
using System.Collections.Generic;
using Microsoft.Maui.Controls;
    
namespace FormsGallery
{
    class PickerDemoPage : ContentPage
    {
        // Dictionary to get Color from color name.
        Dictionary<string, Color> nameToColor = new Dictionary<string, Color>
        {
            { "Aqua", Color.Aqua }, { "Black", Color.Black },
            { "Blue", Color.Blue }, { "Fuchsia", Color.Fuchsia },
            { "Gray", Color.Gray }, { "Green", Color.Green },
            { "Lime", Color.Lime }, { "Maroon", Color.Maroon },
            { "Navy", Color.Navy }, { "Olive", Color.Olive },
            { "Purple", Color.Purple }, { "Red", Color.Red },
            { "Silver", Color.Silver }, { "Teal", Color.Teal },
            { "White", Color.White }, { "Yellow", Color.Yellow }
        };
    
        public PickerDemoPage()
        {
            Label header = new Label
            {
                Text = "Picker",
                FontSize = Device.GetNamedSize (NamedSize.Large, typeof(Label)),
                HorizontalOptions = LayoutOptions.Center
            };
    
            Picker picker = new Picker
            {
                Title = "Color",
                VerticalOptions = LayoutOptions.CenterAndExpand
            };
    
            foreach (string colorName in nameToColor.Keys)
            {
                picker.Items.Add(colorName);
            }
    
            // Create BoxView for displaying picked Color
            BoxView boxView = new BoxView
            {
                WidthRequest = 150,
                HeightRequest = 150,
                HorizontalOptions = LayoutOptions.Center,
                VerticalOptions = LayoutOptions.CenterAndExpand
            };
    
            picker.SelectedIndexChanged += (sender, args) =>
                {
                    if (picker.SelectedIndex == -1)
                    {
                        boxView.Color = Color.Default;
                    }
                    else
                    {
                        string colorName = picker.Items[picker.SelectedIndex];
                        boxView.Color = nameToColor[colorName];
                    }
                };
    
            // Accomodate iPhone status bar.
            this.Padding = new Thickness(10, Device.OnPlatform(20, 0, 0), 10, 5);
    
            // Build the page.
            this.Content = new StackLayout
            {
                Children =
                {
                    header,
                    picker,
                    boxView
                }
            };
    
        }
    }
}
]]></code>
      </example>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/Picker.TripleScreenShot.png" />
      </para>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Picker.TextColorProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.Picker.TextColor" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Picker.CharacterSpacingProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Picker.TitleProperty">
            <summary>Backing store for the Title bindable property.</summary><remarks>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Picker.TitleColorProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.Picker.TitleColor" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Picker.SelectedIndexProperty">
            <summary>Backing store for the SelectedIndex bindable property.</summary><remarks>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Picker.ItemsSourceProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.Picker.ItemsSource" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Picker.SelectedItemProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.Picker.SelectedItem" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Picker.FontFamilyProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.Picker.FontFamily" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Picker.FontSizeProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.Picker.FontSize" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Picker.FontAttributesProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.Picker.FontAttributes" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Picker.HorizontalTextAlignmentProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Picker.VerticalTextAlignmentProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Picker.#ctor">
            <summary>Initializes a new instance of the Picker class.</summary><remarks>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Picker.FontAttributes">
            <summary>Gets a value that indicates whether the font for the searchbar text is bold, italic, or neither.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Picker.FontFamily">
            <summary>Gets or sets the font family for the picker text.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Picker.FontSize">
            <summary>Gets or sets the size of the font for the text in the picker.</summary><value>A <see langword="double" /> that indicates the size of the font.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Picker.UpdateFormsText(System.String,Microsoft.Maui.TextTransform)">
            <param name="source">To be added.</param><param name="textTransform">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Picker.Items">
            <summary>Gets the list of choices.</summary><value>An IList&lt;string&gt; representing the Picker choices.</value><remarks>This property is read-only, but exposes the IList&lt;&gt; interface, so items can be added using Add().</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Picker.ItemsSource">
            <summary>Gets or sets the source list of items to template and display.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Picker.SelectedIndex">
            <summary>Gets or sets the index of the selected item of the picker. This is a bindable property.</summary><value>An 0-based index representing the selected item in the list. Default is -1.</value><remarks>A value of -1 represents no item selected.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Picker.SelectedItem">
            <summary>Gets or sets the selected item.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Picker.TextColor">
            <summary>Gets or sets the text color.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Picker.CharacterSpacing">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Picker.Title">
            <summary>Gets or sets the title for the Picker. This is a bindable property.</summary><value>A string.</value><remarks>Depending on the platform, the Title is shown as a placeholder, headline, or not showed at all.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Picker.TitleColor">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Picker.HorizontalTextAlignment">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Picker.VerticalTextAlignment">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Picker.ItemDisplayBinding">
            <summary>Gets or sets a binding that selects the property that will be displayed for each object in the list of items.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Picker.On``1">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Controls.ProgressBar">
            <summary>A <see cref="T:Microsoft.Maui.Controls.View" /> control that displays progress.</summary><remarks>
      <para>The following example shows the usage of a ProgressBar.</para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[
    
//initial progress is 20%
var progressBar = new ProgressBar {
  Progress = .2,
};
    
// animate the progression to 80%, in 250ms
await progressBar.ProgressTo (.8, 250, Easing.Linear);
    
Debug.WriteLine ("Animation completed");
]]></code>
      </example>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/ProgressBar.TripleScreenShot.png" />
      </para>
    </remarks>
            <summary>A <see cref="T:Microsoft.Maui.Controls.View" /> control that displays progress.</summary><remarks>
      <para>The following example shows the usage of a ProgressBar.</para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[
    
//initial progress is 20%
var progressBar = new ProgressBar {
  Progress = .2,
};
    
// animate the progression to 80%, in 250ms
await progressBar.ProgressTo (.8, 250, Easing.Linear);
    
Debug.WriteLine ("Animation completed");
]]></code>
      </example>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/ProgressBar.TripleScreenShot.png" />
      </para>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ProgressBar.ProgressColorProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.ProgressBar.ProgressColor" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ProgressBar.ProgressProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.ProgressBar.Progress" /> property.</summary><remarks>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ProgressBar.#ctor">
            <summary>Initializes a new instance of the ProgressBar class</summary><remarks>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ProgressBar.ProgressColor">
            <summary>Get or sets the color of the progress bar.</summary><value>The color of the progress bar.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ProgressBar.Progress">
            <summary>Gets or sets the progress value.</summary><value>Gets or sets a value that specifies the fraction of the bar that is colored.</value><remarks>Values less than 0 or larger than 1 will be clamped to the range [0-1].</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ProgressBar.ProgressTo(System.Double,System.UInt32,Microsoft.Maui.Easing)">
            <param name="value">To be added.</param><param name="length">To be added.</param><param name="easing">To be added.</param><summary>Animate the Progress property to value.</summary><returns>A Task&lt;bool&gt; you can await on.</returns><remarks>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ProgressBar.On``1">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Controls.RadioButton">
            <summary>To be added.</summary><remarks>To be added.</remarks>
            <summary>To be added.</summary><remarks>To be added.</remarks>
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.RadioButton.CheckedVisualState">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.RadioButton.UncheckedVisualState">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.RadioButton.TemplateRootName">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.RadioButton.CheckedIndicator">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.RadioButton.UncheckedButton">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.RadioButton.ContentProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.RadioButton.ValueProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.RadioButton.IsCheckedProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.RadioButton.GroupNameProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.RadioButton.TextColorProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.RadioButton.CharacterSpacingProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.RadioButton.TextTransformProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.RadioButton.FontAttributesProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.RadioButton.FontFamilyProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.RadioButton.FontSizeProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.RadioButton.BorderColorProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.RadioButton.CornerRadiusProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.RadioButton.BorderWidthProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.RadioButton.Content">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.RadioButton.Value">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.RadioButton.IsChecked">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.RadioButton.GroupName">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.RadioButton.TextColor">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.RadioButton.CharacterSpacing">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.RadioButton.TextTransform">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.RadioButton.FontAttributes">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.RadioButton.FontFamily">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.RadioButton.FontSize">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.RadioButton.BorderWidth">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.RadioButton.BorderColor">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.RadioButton.CornerRadius">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.RadioButton.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.RadioButton.On``1">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Maui.Controls.RadioButton.DefaultTemplate">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.RadioButton.UpdateFormsText(System.String,Microsoft.Maui.TextTransform)">
            <param name="source">To be added.</param><param name="textTransform">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.RadioButton.ContentAsString">
            <summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.RefreshView">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.RefreshView.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.RefreshView.IsRefreshingProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.RefreshView.IsRefreshing">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.RefreshView.CommandProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.RefreshView.Command">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.RefreshView.CommandParameterProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.RefreshView.CommandParameter">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.RefreshView.RefreshColorProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.RefreshView.RefreshColor">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.RefreshView.On``1">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Controls.ScrollView">
            <summary>An element capable of scrolling if its Content requires.</summary><remarks>
      <para>  The following example shows the creation of a ScrollView with a large <see cref="T:Microsoft.Maui.Controls.StackLayout" /> in it.</para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[
var stack = new StackLayout();
    
for (int i = 0; i < 100; i++)
{
    stack.Children.Add(new Button { Text = "Button " + i });
}
    
MainPage = new ContentPage
{
    Content = new ScrollView { Content = stack }
};]]></code>
      </example>
      Note: application developers should not nest one <see cref="T:Microsoft.Maui.Controls.ScrollView" /> within another. Additionally, they should refrain from nesting them other elements that can scroll, such as <see cref="T:Microsoft.Maui.Controls.WebView" />.
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/ScrollView.TripleScreenShot.png" />
      </para>
    </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ScrollView.LayoutAreaOverride">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ScrollView.GetScrollPositionForElement(Microsoft.Maui.Controls.VisualElement,Microsoft.Maui.Controls.ScrollToPosition)">
            <param name="item">For internal use by the Microsoft.Maui.Controls platform.</param><param name="pos">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ScrollView.SendScrollFinished">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ScrollView.SetScrolledPosition(System.Double,System.Double)">
            <param name="x">For internal use by the Microsoft.Maui.Controls platform.</param><param name="y">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ScrollView.OrientationProperty">
            <summary>Identifies the Orientation bindable property.</summary><remarks>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ScrollView.ScrollXProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.ScrollView.ScrollX" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ScrollView.ScrollYProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.ScrollView.ScrollY" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ScrollView.ContentSizeProperty">
            <summary>Identifies the ContentSize bindable property.</summary><remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ScrollView.HorizontalScrollBarVisibilityProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.ScrollView.HorizontalScrollBarVisibility" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ScrollView.VerticalScrollBarVisibilityProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.ScrollView.VerticalScrollBarVisibility" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ScrollView.Content">
            <summary>Gets or sets a <see cref="T:Microsoft.Maui.Controls.View" /> to display in the <see cref="T:Microsoft.Maui.Controls.ScrollView" />.</summary><value>The <see cref="T:Microsoft.Maui.Controls.View" /> that is displayed.</value><remarks>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ScrollView.ContentSize">
            <summary>Gets the size of the Content. This is a bindable property.</summary><value>A <see cref="T:Microsoft.Maui.Graphics.Size" /> that represents the size of the content.</value><remarks>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ScrollView.Orientation">
            <summary>Gets or sets the scrolling direction of the ScrollView. This is a bindable property.</summary><value>
        </value><remarks>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ScrollView.ScrollX">
            <summary>Gets the current X scroll position.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ScrollView.ScrollY">
            <summary>Gets the current Y scroll position.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ScrollView.HorizontalScrollBarVisibility">
            <summary>Gets or sets a value that controls when the horizontal scroll bar is visible.</summary><value>A value that controls when the horizontal scroll bar is visible.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ScrollView.VerticalScrollBarVisibility">
            <summary>Gets or sets a value that controls when the vertical scroll bar is visible.</summary><value>A value that controls when the vertical scroll bar is visible.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ScrollView.#ctor">
            <summary>Initializes a new instance of the ScrollView class.</summary><remarks>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ScrollView.On``1">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.Controls.ScrollView.ScrollToAsync(System.Double,System.Double,System.Boolean)">
            <param name="x">The X position of the finished scroll.</param><param name="y">The Y position of the finished scroll.</param><param name="animated">Whether or not to animate the scroll.</param><summary>Returns a task that scrolls the scroll view to a position asynchronously.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ScrollView.ScrollToAsync(Microsoft.Maui.Controls.Element,Microsoft.Maui.Controls.ScrollToPosition,System.Boolean)">
            <param name="element">The element to scroll.</param><param name="position">The scroll position.</param><param name="animated">Whether or not to animate the scroll.</param><summary>Returns a task that scrolls the scroll view to an element asynchronously.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.SearchBar">
            <summary>A <see cref="T:Microsoft.Maui.Controls.View" /> control that provides a search box.</summary><remarks>
      <para>The following example shows a basic use.</para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[
public class App : Application
{
    Label resultsLabel;
    SearchBar searchBar;
    public App ()
    {
        resultsLabel = new Label {
            Text = "Result will appear here.",
            VerticalOptions = LayoutOptions.FillAndExpand,
            FontSize = 25
        };
        
        searchBar = new SearchBar {
            Placeholder = "Enter search term",
            SearchCommand = new Command(() => {resultsLabel.Text = "Result: " + searchBar.Text + " is what you asked for.";})
        };
                
        MainPage = new ContentPage {
            Content = new StackLayout {
                VerticalOptions = LayoutOptions.Start,
                Children = {
                    new Label {
                        HorizontalTextAlignment = TextAlignment.Center,
                        Text = "SearchBar",
                        FontSize = 50
                    },
                    searchBar,
                    new ScrollView
                    {
                        Content = resultsLabel,
                        VerticalOptions = LayoutOptions.FillAndExpand
                    }
                },
                Padding = new Thickness(10, Device.OnPlatform(20, 0, 0), 10, 5)
            }
        };
    }
    
    // OnStart, OnSleep, and OnResume implementations, & etc.
    
}]]></code>
      </example>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/SearchBar.TripleScreenShot.png" />
      </para>
    </remarks>
            <summary>A <see cref="T:Microsoft.Maui.Controls.View" /> control that provides a search box.</summary><remarks>
      <para>The following example shows a basic use.</para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[
public class App : Application
{
    Label resultsLabel;
    SearchBar searchBar;
    public App ()
    {
        resultsLabel = new Label {
            Text = "Result will appear here.",
            VerticalOptions = LayoutOptions.FillAndExpand,
            FontSize = 25
        };
        
        searchBar = new SearchBar {
            Placeholder = "Enter search term",
            SearchCommand = new Command(() => {resultsLabel.Text = "Result: " + searchBar.Text + " is what you asked for.";})
        };
                
        MainPage = new ContentPage {
            Content = new StackLayout {
                VerticalOptions = LayoutOptions.Start,
                Children = {
                    new Label {
                        HorizontalTextAlignment = TextAlignment.Center,
                        Text = "SearchBar",
                        FontSize = 50
                    },
                    searchBar,
                    new ScrollView
                    {
                        Content = resultsLabel,
                        VerticalOptions = LayoutOptions.FillAndExpand
                    }
                },
                Padding = new Thickness(10, Device.OnPlatform(20, 0, 0), 10, 5)
            }
        };
    }
    
    // OnStart, OnSleep, and OnResume implementations, & etc.
    
}]]></code>
      </example>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/SearchBar.TripleScreenShot.png" />
      </para>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchBar.SearchCommandProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.SearchBar.SearchCommand" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchBar.SearchCommandParameterProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.SearchBar.SearchCommandParameter" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchBar.TextProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.InputView.Text" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchBar.CancelButtonColorProperty">
            <summary>Backing store for the CancelButtonColor property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchBar.PlaceholderProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.InputView.Placeholder" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchBar.PlaceholderColorProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.InputView.PlaceholderColor" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchBar.FontFamilyProperty">
            <summary>Backing store for the FontFamily property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchBar.FontSizeProperty">
            <summary>Backing store for the FontSize property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchBar.FontAttributesProperty">
            <summary>Backing store for the FontAttributes property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchBar.HorizontalTextAlignmentProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.SearchBar.HorizontalTextAlignment" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchBar.VerticalTextAlignmentProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchBar.TextColorProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.InputView.TextColor" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchBar.CharacterSpacingProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchBar.CancelButtonColor">
            <summary>Gets or sets the color of the cancel button.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchBar.HorizontalTextAlignment">
            <summary>Gets or sets the horizontal text alignment.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchBar.VerticalTextAlignment">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchBar.SearchCommand">
            <summary>Gets or sets the command that is run when the user presses Search button.</summary><value>The command that is run when the user presses Search button.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchBar.SearchCommandParameter">
            <summary>Gets or sets the parameter that is sent to the <see cref="P:Microsoft.Maui.Controls.SearchBar.SearchCommand" />.</summary><value>The parameter that is sent to the <see cref="P:Microsoft.Maui.Controls.SearchBar.SearchCommand" />.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchBar.FontAttributes">
            <summary>Gets a value that indicates whether the font for the searchbar text is bold, italic, or neither.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchBar.FontFamily">
            <summary>Gets or sets the font family for the search bar text.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchBar.FontSize">
            <summary>Gets the size of the font for the text in the searchbar.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SearchBar.#ctor">
            <summary>Creates a new <see cref="T:Microsoft.Maui.Controls.SearchBar" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SearchBar.OnSearchButtonPressed">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SearchBar.On``1">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Controls.Shell">
            <summary>A <see cref="T:Microsoft.Maui.Controls.Page" /> that provides fundamental UI features that most applications require, leaving you to focus on the application's core workload.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shell.CurrentPage">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shell.BackButtonBehaviorProperty">
            <summary>Backing store for the <see cref="M:Microsoft.Maui.Controls.Shell.GetBackButtonBehavior(Microsoft.Maui.Controls.BindableObject)" /> and <see cref="M:Microsoft.Maui.Controls.Shell.SetBackButtonBehavior(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.BackButtonBehavior)" /> methods.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shell.PresentationModeProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shell.FlyoutBehaviorProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.Shell.FlyoutBehavior" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shell.NavBarIsVisibleProperty">
            <summary>The backing store for the <see cref="M:Microsoft.Maui.Controls.Shell.GetNavBarIsVisible(Microsoft.Maui.Controls.BindableObject)" /> and <see cref="M:Microsoft.Maui.Controls.Shell.SetNavBarIsVisible(Microsoft.Maui.Controls.BindableObject,System.Boolean)" /> methods.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shell.NavBarHasShadowProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shell.SearchHandlerProperty">
            <summary>The backing store for the <see cref="M:Microsoft.Maui.Controls.Shell.GetSearchHandler(Microsoft.Maui.Controls.BindableObject)" /> and <see cref="M:Microsoft.Maui.Controls.Shell.SetSearchHandler(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.SearchHandler)" /> methods.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shell.TabBarIsVisibleProperty">
            <summary>The backing store for the <see cref="M:Microsoft.Maui.Controls.Shell.GetTabBarIsVisible(Microsoft.Maui.Controls.BindableObject)" /> and <see cref="M:Microsoft.Maui.Controls.Shell.SetTabBarIsVisible(Microsoft.Maui.Controls.BindableObject,System.Boolean)" /> methods.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shell.TitleViewProperty">
            <summary>xThe backing store for the <see cref="M:Microsoft.Maui.Controls.Shell.GetTitleView(Microsoft.Maui.Controls.BindableObject)" /> and <see cref="M:Microsoft.Maui.Controls.Shell.SetTitleView(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.View)" /> methods.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shell.MenuItemTemplateProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.Shell.MenuItemTemplate" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.GetMenuItemTemplate(Microsoft.Maui.Controls.BindableObject)">
            <param name="obj">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.SetMenuItemTemplate(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.DataTemplate)">
            <param name="obj">To be added.</param><param name="menuItemTemplate">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shell.ItemTemplateProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.Shell.ItemTemplate" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.GetItemTemplate(Microsoft.Maui.Controls.BindableObject)">
            <param name="obj">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.SetItemTemplate(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.DataTemplate)">
            <param name="obj">To be added.</param><param name="itemTemplate">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.GetBackButtonBehavior(Microsoft.Maui.Controls.BindableObject)">
            <param name="obj">To be added.</param><summary>Gets the value of the <see cref="M:Microsoft.Maui.Controls.Shell.BackButtonBehaviorProperty" /> of the <paramref name="obj" />.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.SetBackButtonBehavior(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.BackButtonBehavior)">
            <param name="obj">To be added.</param><param name="behavior">To be added.</param><summary>Sets the back button behavior of <paramref name="obj" /> to <paramref name="behavior" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.GetPresentationMode(Microsoft.Maui.Controls.BindableObject)">
            <param name="obj">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.SetPresentationMode(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.PresentationMode)">
            <param name="obj">To be added.</param><param name="presentationMode">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.GetFlyoutBehavior(Microsoft.Maui.Controls.BindableObject)">
            <param name="obj">To be added.</param><summary>Gets the <see cref="P:Microsoft.Maui.Controls.Shell.FlyoutBehavior" /> of the <paramref name="obj" />.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.SetFlyoutBehavior(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.FlyoutBehavior)">
            <param name="obj">To be added.</param><param name="value">To be added.</param><summary>Sets the flyout behavior of <paramref name="obj" /> to <paramref name="value" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.GetNavBarIsVisible(Microsoft.Maui.Controls.BindableObject)">
            <param name="obj">To be added.</param><summary>Gets the visibility of the navigation bar of the <paramref name="obj" />  in a Shell application.</summary><returns>
          <see langword="true" /> if the navigation bar is visible.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.SetNavBarIsVisible(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="obj">To be added.</param><param name="value">To be added.</param><summary>Sets the navigation bar visibility of <paramref name="obj" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.GetNavBarHasShadow(Microsoft.Maui.Controls.BindableObject)">
            <param name="obj">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.SetNavBarHasShadow(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="obj">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.GetSearchHandler(Microsoft.Maui.Controls.BindableObject)">
            <param name="obj">To be added.</param><summary>Gets the <see cref="T:Microsoft.Maui.Controls.SearchHandler" /> for the specified <paramref name="obj" />.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.SetSearchHandler(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.SearchHandler)">
            <param name="obj">To be added.</param><param name="handler">To be added.</param><summary>Sets the <see cref="T:Microsoft.Maui.Controls.SearchHandler" /> for <paramref name="obj" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.GetTabBarIsVisible(Microsoft.Maui.Controls.BindableObject)">
            <param name="obj">To be added.</param><summary>Gets whether the tab bar is visible in <paramref name="obj" />.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.SetTabBarIsVisible(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="obj">To be added.</param><param name="value">To be added.</param><summary>Sets the tab bar visibility of <paramref name="obj" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.GetTitleView(Microsoft.Maui.Controls.BindableObject)">
            <param name="obj">To be added.</param><summary>Gets the title <see cref="P:Microsoft.Maui.Controls.View" /> of <paramref name="obj" />.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.SetTitleView(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.View)">
            <param name="obj">To be added.</param><param name="value">To be added.</param><summary>Sets the title <see cref="T:Microsoft.Maui.Controls.View" /> of <paramref name="obj" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shell.BackgroundColorProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shell.DisabledColorProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shell.ForegroundColorProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shell.TabBarBackgroundColorProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shell.TabBarDisabledColorProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shell.TabBarForegroundColorProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shell.TabBarTitleColorProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shell.TabBarUnselectedColorProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shell.TitleColorProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shell.UnselectedColorProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shell.FlyoutBackdropProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.GetBackgroundColor(Microsoft.Maui.Controls.BindableObject)">
            <param name="obj">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.SetBackgroundColor(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Graphics.Color)">
            <param name="obj">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.GetDisabledColor(Microsoft.Maui.Controls.BindableObject)">
            <param name="obj">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.SetDisabledColor(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Graphics.Color)">
            <param name="obj">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.GetForegroundColor(Microsoft.Maui.Controls.BindableObject)">
            <param name="obj">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.SetForegroundColor(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Graphics.Color)">
            <param name="obj">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.GetTabBarBackgroundColor(Microsoft.Maui.Controls.BindableObject)">
            <param name="obj">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.SetTabBarBackgroundColor(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Graphics.Color)">
            <param name="obj">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.GetTabBarDisabledColor(Microsoft.Maui.Controls.BindableObject)">
            <param name="obj">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.SetTabBarDisabledColor(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Graphics.Color)">
            <param name="obj">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.GetTabBarForegroundColor(Microsoft.Maui.Controls.BindableObject)">
            <param name="obj">To be added.</param><summary>Gets the title color for tab bar for the <paramref name="obj" />.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.SetTabBarForegroundColor(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Graphics.Color)">
            <param name="obj">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.GetTabBarTitleColor(Microsoft.Maui.Controls.BindableObject)">
            <param name="obj">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.SetTabBarTitleColor(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Graphics.Color)">
            <param name="obj">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.GetTabBarUnselectedColor(Microsoft.Maui.Controls.BindableObject)">
            <param name="obj">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.SetTabBarUnselectedColor(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Graphics.Color)">
            <param name="obj">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.GetTitleColor(Microsoft.Maui.Controls.BindableObject)">
            <param name="obj">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.SetTitleColor(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Graphics.Color)">
            <param name="obj">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.GetUnselectedColor(Microsoft.Maui.Controls.BindableObject)">
            <param name="obj">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.SetUnselectedColor(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Graphics.Color)">
            <param name="obj">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.GetFlyoutBackdrop(Microsoft.Maui.Controls.BindableObject)">
            <param name="obj">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.SetFlyoutBackdrop(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.Brush)">
            <param name="obj">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shell.Current">
            <summary>Static property providing access to the current <see cref="T:Microsoft.Maui.Controls.Shell" />.</summary><value>To be added.</value><remarks>
          <para>This is a typecast alias for <c>Microsoft.Maui.Controls.Application.Current.MainPage</c>.</para>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.GoToAsync(Microsoft.Maui.Controls.ShellNavigationState)">
            <param name="state">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.GoToAsync(Microsoft.Maui.Controls.ShellNavigationState,System.Boolean)">
            <param name="state">To be added.</param><param name="animate">To be added.</param><summary>Asynchronously navigates to <paramref name="state" />, optionally animating.</summary><returns>To be added.</returns><remarks>
          <para>Note that <see cref="T:Microsoft.Maui.Controls.ShellNavigationState" /> has implicit conversions from <see langword="string" /> and <see cref="T:System.Uri" />, so developers may write code such as the following, with no explicit instantiation of the <see cref="T:Microsoft.Maui.Controls.ShellNavigationState" />:</para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
await Shell.Current.GoToAsync("app://xamarin.com/xaminals/animals/monkeys");
    ]]></code>
          </example>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.GoToAsync(Microsoft.Maui.Controls.ShellNavigationState,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <param name="state">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.GoToAsync(Microsoft.Maui.Controls.ShellNavigationState,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <param name="state">To be added.</param><param name="animate">To be added.</param><summary>Asynchronously navigates to <paramref name="state" />, optionally animating.</summary><returns>To be added.</returns><remarks>
          <para>Note that <see cref="T:Microsoft.Maui.Controls.ShellNavigationState" /> has implicit conversions from <see langword="string" /> and <see cref="T:System.Uri" />, so developers may write code such as the following, with no explicit instantiation of the <see cref="T:Microsoft.Maui.Controls.ShellNavigationState" />:</para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
await Shell.Current.GoToAsync("app://xamarin.com/xaminals/animals/monkeys");
    ]]></code>
          </example>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shell.CurrentItemProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.Shell.CurrentItem" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shell.CurrentStateProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.Shell.CurrentState" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shell.FlyoutBackgroundImageProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shell.FlyoutBackgroundImageAspectProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shell.FlyoutBackgroundColorProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.Shell.FlyoutBackgroundColor" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shell.FlyoutBackgroundProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shell.FlyoutHeaderBehaviorProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.Shell.FlyoutHeaderBehavior" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shell.FlyoutHeaderProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.Shell.FlyoutHeader" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shell.FlyoutHeaderTemplateProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.Shell.FlyoutHeaderTemplate" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shell.FlyoutIsPresentedProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.Shell.FlyoutIsPresented" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shell.ItemsProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.Shell.Items" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shell.FlyoutIconProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.Shell.FlyoutIcon" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Shell.FlyoutVerticalScrollModeProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Shell.#ctor">
            <summary>Creates a new <see cref="T:Microsoft.Maui.Controls.Shell" /> element with default values.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shell.FlyoutVerticalScrollMode">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shell.FlyoutIcon">
            <summary>Gets or sets the icon that, when pressed, opens the <see cref="P:Microsoft.Maui.Controls.Shell" /> Flyout.</summary><value>The default icon is a "hamburger" icon.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shell.CurrentItem">
            <summary>The currently selected <see cref="T:Microsoft.Maui.Controls.ShellItem" /> or <see cref="T:Microsoft.Maui.Controls.FlyoutItem" />.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shell.CurrentState">
            <summary>The current navigation state of the <see cref="T:Microsoft.Maui.Controls.Shell" />.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shell.FlyoutBackgroundImage">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shell.FlyoutBackgroundImageAspect">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shell.FlyoutBackgroundColor">
            <summary>Gets or sets the background color of the <see cref="P:Microsoft.Maui.Controls.Shell" /> Flyout.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shell.FlyoutBackground">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shell.FlyoutBackdrop">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shell.FlyoutBehavior">
            <summary>Setting the <see cref="T:Microsoft.Maui.FlyoutBehavior" /> property to Disabled hides the flyout, which is useful when you only have one ShellItem. The other valid FlyoutBehavior values are Flyout (default), and Locked.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shell.FlyoutHeader">
            <summary>The flyout header is the content that optionally appears at the top of the flyout, with its appearance being defined by a <see cref="P:Microsoft.Maui.Controls.View" />  that can be set through the <see cref="P:Microsoft.Maui.Controls.Shell.FlyoutHeader" /> property value.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shell.FlyoutHeaderBehavior">
            <summary>Setting the FlyoutHeaderBehavior to CollapseOnScroll collapses the flyout as scrolling occurs. The other valid FlyoutHeaderBehavior values are Default, Fixed, and Scroll (scroll with the menu items).</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shell.FlyoutHeaderTemplate">
            <summary>The flyout header appearance can be defined by setting the <see cref="P:Microsoft.Maui.Controls.Shell.FlyoutHeaderTemplate" /> property to a <see cref="P:Microsoft.Maui.Controls.DataTemplate" />.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shell.FlyoutIsPresented">
            <summary>Gets or sets the visible status of the <see cref="P:Microsoft.Maui.Controls.Shell" /> Flyout.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shell.Items">
            <summary>The collection of <see cref="T:Microsoft.Maui.Controls.ShellItem" /> objects managed by <c>this</c><see cref="T:Microsoft.Maui.Controls.Shell" />.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shell.ItemTemplate">
            <summary>Gets or sets <see cref="T:Microsoft.Maui.Controls.DataTemplate" /> applied to each of the <see cref="P:Microsoft.Maui.Controls.Shell.Items" />.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Shell.MenuItemTemplate">
            <summary>Gets or sets the <see cref="T:Microsoft.Maui.Controls.DataTemplate" /> applied to <see cref="T:Microsoft.Maui.Controls.MenuItem" /> objects in the <see cref="P:Microsoft.Maui.Controls.ShellContent.MenuItems" /> collection.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ShellSection">
            <summary>Grouped content in a Shell application, navigable by bottom tabs. </summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ShellSection.CurrentItemProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.ShellSection.CurrentItem" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ShellSection.ItemsProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.ShellSection.Items" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ShellSection.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ShellSection.CurrentItem">
            <summary>The currently selected <see cref="T:Microsoft.Maui.Controls.ShellContent" />.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ShellSection.Items">
            <summary>The collection of <see cref="T:Microsoft.Maui.Controls.ShellContent" /> objects managed by <c>this</c><see cref="T:Microsoft.Maui.Controls.ShellSection" />.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ShellSection.Stack">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Slider">
            <summary>A <see cref="T:Microsoft.Maui.Controls.View" /> control that inputs a linear value.</summary><remarks>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/Slider.TripleScreenShot.png" />
      </para>
    </remarks>
            <summary>A <see cref="T:Microsoft.Maui.Controls.View" /> control that inputs a linear value.</summary><remarks>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/Slider.TripleScreenShot.png" />
      </para>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Slider.MinimumProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.Slider.Minimum" /> property.</summary><remarks>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Slider.MaximumProperty">
            <summary>Identifies the Maximum bindable property.</summary><remarks>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Slider.ValueProperty">
            <summary>Identifies the Value bindable property.</summary><remarks>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Slider.MinimumTrackColorProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.Slider.MinimumTrackColor" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Slider.MaximumTrackColorProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.Slider.MaximumTrackColor" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Slider.ThumbColorProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.Slider.ThumbColor" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Slider.ThumbImageSourceProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Slider.DragStartedCommandProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.Slider.DragStartedCommand" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Slider.DragCompletedCommandProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.Slider.DragCompletedCommand" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Slider.#ctor">
            <summary>Initializes a new instance of the Slider class.</summary><remarks>
          <para>The following example shows a basic use.</para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[using System;
using Microsoft.Maui.Controls;
    
namespace FormsGallery
{
    class SliderDemoPage : ContentPage
    {
        Label label;
    
        public SliderDemoPage()
        {
            Label header = new Label
            {
                Text = "Slider",
                Font = Font.BoldSystemFontOfSize(50),
                HorizontalOptions = LayoutOptions.Center
            };
    
            Slider slider = new Slider
            {
                Minimum = 0,
                Maximum = 100,
                VerticalOptions = LayoutOptions.CenterAndExpand
            };
            slider.ValueChanged += OnSliderValueChanged;
    
            label = new Label
            {
                Text = "Slider value is 0",
                Font = Font.SystemFontOfSize(NamedSize.Large),
                HorizontalOptions = LayoutOptions.Center,
                VerticalOptions = LayoutOptions.CenterAndExpand
            };
    
            // Accomodate iPhone status bar.
            this.Padding = new Thickness(10, Device.OnPlatform(20, 0, 0), 10, 5);
    
            // Build the page.
            this.Content = new StackLayout
            {
                Children =
                {
                    header,
                    slider,
                    label
                }
            };
        }
    
        void OnSliderValueChanged(object sender, ValueChangedEventArgs e)
        {
            label.Text = String.Format("Slider value is {0:F1}", e.NewValue);
        }
    }
}]]></code>
          </example>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Slider.#ctor(System.Double,System.Double,System.Double)">
            <param name="min">The minimum selectable value.</param><param name="max">The maximum selectable value.</param><param name="val">The actual value.</param><summary>Initializes a new instance of the Slider class.</summary><remarks>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Slider.MinimumTrackColor">
            <summary>Gets or sets the color of the portion of the slider track that contains the minimum value of the slider.</summary><value>Thhe color of the portion of the slider track that contains the minimum value of the slider.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Slider.MaximumTrackColor">
            <summary>Gets or sets the color of the portion of the slider track that contains the maximum value of the slider.</summary><value>Thhe color of the portion of the slider track that contains the maximum value of the slider.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Slider.ThumbColor">
            <summary>Gets or sets the color of the slider thumb button.</summary><value>The color of the slider thumb button.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Slider.ThumbImageSource">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Slider.DragStartedCommand">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Slider.DragCompletedCommand">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Slider.Maximum">
            <summary>Gets or sets the maximum selectable value for the Slider. This is a bindable property.</summary><value>A double.</value><remarks>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Slider.Minimum">
            <summary>Gets or sets the minimum selectable value for the Slider. This is a bindable property.</summary><value>A double.</value><remarks>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Slider.Value">
            <summary>Gets or sets the current value. This is a bindable property.</summary><value>A double.</value><remarks>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Slider.On``1">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Controls.Stepper">
            <summary>A <see cref="T:Microsoft.Maui.Controls.View" /> control that inputs a discrete value, constrained to a range.</summary><remarks>
      <para>The following example shows a basic use.</para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[using System;
            using System;
            using Microsoft.Maui.Controls;
    
            namespace FormsGallery
            {
                class StepperDemoPage : ContentPage
                {
                    Label label;
    
                    public StepperDemoPage()
                    {
                        Label header = new Label
                        {
                            Text = "Stepper",
                            FontSize = Device.GetNamedSize (NamedSize.Large, typeof(Label)),
                            HorizontalOptions = LayoutOptions.Center
                        };
    
                        Stepper stepper = new Stepper
                        {
                            Value = 5,
                            Minimum = 0,
                            Maximum = 10,
                            Increment = 0.1,
                            HorizontalOptions = LayoutOptions.Center,
                            VerticalOptions = LayoutOptions.CenterAndExpand
                        };
                        stepper.ValueChanged += OnStepperValueChanged;
    
                        label = new Label
                        {
                            Text = String.Format("Stepper value is {0:F1}", stepper.Value),
                            FontSize = Device.GetNamedSize (NamedSize.Large, typeof(Label)),
                            HorizontalOptions = LayoutOptions.Center,
                            VerticalOptions = LayoutOptions.CenterAndExpand
                        };
    
                        // Accomodate iPhone status bar.
                        this.Padding = new Thickness(10, Device.OnPlatform(20, 0, 0), 10, 5);
    
                        // Build the page.
                        this.Content = new StackLayout
                        {
                            Children =
                            {
                                header,
                                stepper,
                                label
                            }
                            };
                    }
    
                    void OnStepperValueChanged(object sender, ValueChangedEventArgs e)
                    {
                        label.Text = String.Format("Stepper value is {0:F1}", e.NewValue);
                    }
                }
            }]]></code>
      </example>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/Stepper.TripleScreenShot.png" />
      </para>
    </remarks>
            <summary>A <see cref="T:Microsoft.Maui.Controls.View" /> control that inputs a discrete value, constrained to a range.</summary><remarks>
      <para>The following example shows a basic use.</para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[using System;
            using System;
            using Microsoft.Maui.Controls;
    
            namespace FormsGallery
            {
                class StepperDemoPage : ContentPage
                {
                    Label label;
    
                    public StepperDemoPage()
                    {
                        Label header = new Label
                        {
                            Text = "Stepper",
                            FontSize = Device.GetNamedSize (NamedSize.Large, typeof(Label)),
                            HorizontalOptions = LayoutOptions.Center
                        };
    
                        Stepper stepper = new Stepper
                        {
                            Value = 5,
                            Minimum = 0,
                            Maximum = 10,
                            Increment = 0.1,
                            HorizontalOptions = LayoutOptions.Center,
                            VerticalOptions = LayoutOptions.CenterAndExpand
                        };
                        stepper.ValueChanged += OnStepperValueChanged;
    
                        label = new Label
                        {
                            Text = String.Format("Stepper value is {0:F1}", stepper.Value),
                            FontSize = Device.GetNamedSize (NamedSize.Large, typeof(Label)),
                            HorizontalOptions = LayoutOptions.Center,
                            VerticalOptions = LayoutOptions.CenterAndExpand
                        };
    
                        // Accomodate iPhone status bar.
                        this.Padding = new Thickness(10, Device.OnPlatform(20, 0, 0), 10, 5);
    
                        // Build the page.
                        this.Content = new StackLayout
                        {
                            Children =
                            {
                                header,
                                stepper,
                                label
                            }
                            };
                    }
    
                    void OnStepperValueChanged(object sender, ValueChangedEventArgs e)
                    {
                        label.Text = String.Format("Stepper value is {0:F1}", e.NewValue);
                    }
                }
            }]]></code>
      </example>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/Stepper.TripleScreenShot.png" />
      </para>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Stepper.MaximumProperty">
            <summary>Identifies the Maximum bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Stepper.MinimumProperty">
            <summary>Identifies the Minimum bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Stepper.ValueProperty">
            <summary>Identifies the Value bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Stepper.IncrementProperty">
            <summary>Identifies the Increment bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Stepper.#ctor">
            <summary>Initializes a new instance of the Stepper class.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Stepper.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <param name="min">The minimum selectable value.</param><param name="max">The maximum selectable value.</param><param name="val">The current selected value.</param><param name="increment">The increment by which Value is increased or decreased.</param><summary>Initializes a new instance of the Stepper class.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Stepper.Increment">
            <summary>Gets or sets the increment by which Value is increased or decreased. This is a bindable property.</summary><value>A double.</value><remarks>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Stepper.Maximum">
            <summary>Gets or sets the maximum selectable value. This is a bindable property.</summary><value>A double.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Stepper.Minimum">
            <summary>Gets or sets the minimum selectabel value. This is a bindable property.</summary><value>A double.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Stepper.Value">
            <summary>Gets or sets the current value. This is a bindable property.</summary><value>A double.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Stepper.On``1">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Controls.SwipeItem">
            <summary>To be added.</summary><remarks>To be added.</remarks>
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SwipeItem.BackgroundColorProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SwipeItem.IsVisibleProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SwipeItem.BackgroundColor">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SwipeItem.IsVisible">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.SwipeItemView">
            <summary>To be added.</summary><remarks>To be added.</remarks>
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SwipeItemView.CommandProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SwipeItemView.CommandParameterProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SwipeItemView.Command">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SwipeItemView.CommandParameter">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SwipeItemView.OnInvoked">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.SwipeView">
            <summary>To be added.</summary><remarks>To be added.</remarks>
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SwipeView.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SwipeView.ThresholdProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SwipeView.LeftItemsProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SwipeView.RightItemsProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SwipeView.TopItemsProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SwipeView.BottomItemsProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SwipeView.Threshold">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SwipeView.LeftItems">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SwipeView.RightItems">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SwipeView.TopItems">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SwipeView.BottomItems">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SwipeView.Open(Microsoft.Maui.OpenSwipeItem,System.Boolean)">
            <param name="openSwipeItem">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SwipeView.Close(System.Boolean)">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SwipeView.On``1">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Controls.Switch">
            <summary>A <see cref="T:Microsoft.Maui.Controls.View" /> control that provides a toggled value.</summary><remarks>
      <para>The following example describes a basic use.</para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[using System;
using Microsoft.Maui.Controls;
    
namespace FormsGallery
{
    class SwitchDemoPage : ContentPage
    {
        Label label;
    
        public SwitchDemoPage()
        {
            Label header = new Label
            {
                Text = "Switch",
                FontSize = Device.GetNamedSize (NamedSize.Large, typeof(Label)),
                HorizontalOptions = LayoutOptions.Center
            };
    
            Switch switcher = new Switch
            {
                HorizontalOptions = LayoutOptions.Center,
                VerticalOptions = LayoutOptions.CenterAndExpand
            };
            switcher.Toggled += switcher_Toggled;
    
            label = new Label
            {
                Text = "Switch is now False",
                FontSize = Device.GetNamedSize (NamedSize.Large, typeof(Label)),
                HorizontalOptions = LayoutOptions.Center,
                VerticalOptions = LayoutOptions.CenterAndExpand
            };
    
            // Accomodate iPhone status bar.
            this.Padding = new Thickness(10, Device.OnPlatform(20, 0, 0), 10, 5);
    
            // Build the page.
            this.Content = new StackLayout
            {
                Children =
                {
                    header,
                    switcher,
                    label
                }
            };
        }
    
        void switcher_Toggled(object sender, ToggledEventArgs e)
        {
            label.Text = String.Format("Switch is now {0}", e.Value);
        }
    }
}]]></code>
      </example>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/Switch.TripleScreenShot.png" />
      </para>
    </remarks>
            <summary>A <see cref="T:Microsoft.Maui.Controls.View" /> control that provides a toggled value.</summary><remarks>
      <para>The following example describes a basic use.</para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[using System;
using Microsoft.Maui.Controls;
    
namespace FormsGallery
{
    class SwitchDemoPage : ContentPage
    {
        Label label;
    
        public SwitchDemoPage()
        {
            Label header = new Label
            {
                Text = "Switch",
                FontSize = Device.GetNamedSize (NamedSize.Large, typeof(Label)),
                HorizontalOptions = LayoutOptions.Center
            };
    
            Switch switcher = new Switch
            {
                HorizontalOptions = LayoutOptions.Center,
                VerticalOptions = LayoutOptions.CenterAndExpand
            };
            switcher.Toggled += switcher_Toggled;
    
            label = new Label
            {
                Text = "Switch is now False",
                FontSize = Device.GetNamedSize (NamedSize.Large, typeof(Label)),
                HorizontalOptions = LayoutOptions.Center,
                VerticalOptions = LayoutOptions.CenterAndExpand
            };
    
            // Accomodate iPhone status bar.
            this.Padding = new Thickness(10, Device.OnPlatform(20, 0, 0), 10, 5);
    
            // Build the page.
            this.Content = new StackLayout
            {
                Children =
                {
                    header,
                    switcher,
                    label
                }
            };
        }
    
        void switcher_Toggled(object sender, ToggledEventArgs e)
        {
            label.Text = String.Format("Switch is now {0}", e.Value);
        }
    }
}]]></code>
      </example>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/Switch.TripleScreenShot.png" />
      </para>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Switch.SwitchOnVisualState">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Switch.SwitchOffVisualState">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Switch.IsToggledProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.Switch.IsToggled" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Switch.OnColorProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.Switch.OnColor" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Switch.ThumbColorProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Switch.OnColor">
            <summary>Gets or sets the color of the switch when it is in the "On" position.</summary><value>The color of the switch when it is in the "On" position.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Switch.ThumbColor">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Switch.#ctor">
            <summary>Creates a new <see cref="T:Microsoft.Maui.Controls.Switch" /> element with default values.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Switch.IsToggled">
            <summary>Gets or sets a Boolean value that indicates whether this <see cref="T:Microsoft.Maui.Controls.Switch" /> element is toggled.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Switch.On``1">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Controls.TabbedPage">
            <summary>
      <see cref="T:Microsoft.Maui.Controls.MultiPage`1" /> that displays an array of tabs across the top of the screen, each of which loads content onto the screen.</summary><remarks>
      <para>The user interface of a tabbed page consists of a list of tabs and a larger detail area. On iOS, the list of tabs appears at the bottom of the screen, and the detail area is above. On Android and Windows phones, the tabs appear across the top of the screen. The user can scroll the collection of tabs that are across the top of the screen if that collection is too large to fit on one screen.</para>
      <para>App developers can create tabbed pages in either of two ways. First, application developers can assign a list of objects of a single class, or its subclasses, to the <see cref="P:Microsoft.Maui.Controls.MultiPage`1.ItemsSource" /> property and assign a <see cref="T:Microsoft.Maui.Controls.DataTemplate" /> to the <see cref="P:Microsoft.Maui.Controls.MultiPage`1.ItemTemplate" /> property to return pages for objects of the least derived type. Second, app developers can add a succession of <see cref="T:Microsoft.Maui.Controls.Page" /> objects to the <see cref="P:Microsoft.Maui.Controls.MultiPage`1.Children" /> property. Both methods are shown in the code examples below.</para>
      <example>
        <para>The following example code, adapted for brevity from the FormsGallery sample that can be found on the <format type="text/html"><a href="https://docs.microsoft.com/samples/xamarin/xamarin-forms-samples/formsgallery/" target="_blank">Sample Applications</a></format> page, shows how to display data of a specific type by assigning a <see cref="T:Microsoft.Maui.Controls.DataTemplate" /> to the <see cref="P:Microsoft.Maui.Controls.MultiPage`1.ItemTemplate" /> property. Note how <c>NamedColorPage</c> gets its color by binding its <see cref="F:Microsoft.Maui.Controls.BoxView.ColorProperty" /> field.</para>
        <code lang="csharp lang-csharp"><![CDATA[
using System;
using Microsoft.Maui.Controls;
    
namespace MinimalTabbed
{
    class TabbedPageDemoPage : TabbedPage
    {
        public TabbedPageDemoPage ()
        {
            this.Title = "TabbedPage";
    
            this.ItemsSource = new NamedColor[] {
                new NamedColor ("Red", Color.Red),
                new NamedColor ("Yellow", Color.Yellow),
                new NamedColor ("Green", Color.Green),
                new NamedColor ("Aqua", Color.Aqua),
                new NamedColor ("Blue", Color.Blue),
                new NamedColor ("Purple", Color.Purple)
            };
    
            this.ItemTemplate = new DataTemplate (() => { 
                return new NamedColorPage (); 
            });
        }
    }
    
    // Data type:
    class NamedColor
    {
        public NamedColor (string name, Color color)
        {
            this.Name = name;
            this.Color = color;
        }
    
        public string Name { private set; get; }
    
        public Color Color { private set; get; }
    
        public override string ToString ()
        {
            return Name;
        }
    }
    
    // Format page
    class NamedColorPage : ContentPage
    {
        public NamedColorPage ()
        {
            // This binding is necessary to label the tabs in
            // the TabbedPage.
            this.SetBinding (ContentPage.TitleProperty, "Name");
            // BoxView to show the color.
            BoxView boxView = new BoxView {
                WidthRequest = 100,
                HeightRequest = 100,
                HorizontalOptions = LayoutOptions.Center
            };
            boxView.SetBinding (BoxView.ColorProperty, "Color");
    
            // Build the page
            this.Content = boxView;
        }
    }
}
    

]]></code>
      </example>
      <example>
        <para>The example below creates a tabbed view with two <see cref="T:Microsoft.Maui.Controls.ContentPage" /> instances.</para>
        <code lang="csharp lang-csharp"><![CDATA[
class TabbedPageDemoPage2 : TabbedPage
{
    public TabbedPageDemoPage2 ()
    {
        this.Title = "TabbedPage";
        this.Children.Add (new ContentPage 
            {
                Title = "Blue",
                Content = new BoxView
                {
                    Color = Color.Blue,
                    HeightRequest = 100f,
                    VerticalOptions = LayoutOptions.Center
                },
            }
        );
        this.Children.Add (new ContentPage {
            Title = "Blue and Red",
            Content = new StackLayout {
                Children = {
                    new BoxView { Color = Color.Blue },
                    new BoxView { Color = Color.Red}
                }
            }
        });
    }
}
      ]]></code>
      </example>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/TabbedPage.TripleScreenShot.png" />
      </para>
    </remarks>
            <summary>
      <see cref="T:Microsoft.Maui.Controls.MultiPage`1" /> that displays an array of tabs across the top of the screen, each of which loads content onto the screen.</summary><remarks>
      <para>The user interface of a tabbed page consists of a list of tabs and a larger detail area. On iOS, the list of tabs appears at the bottom of the screen, and the detail area is above. On Android and Windows phones, the tabs appear across the top of the screen. The user can scroll the collection of tabs that are across the top of the screen if that collection is too large to fit on one screen.</para>
      <para>App developers can create tabbed pages in either of two ways. First, application developers can assign a list of objects of a single class, or its subclasses, to the <see cref="P:Microsoft.Maui.Controls.MultiPage`1.ItemsSource" /> property and assign a <see cref="T:Microsoft.Maui.Controls.DataTemplate" /> to the <see cref="P:Microsoft.Maui.Controls.MultiPage`1.ItemTemplate" /> property to return pages for objects of the least derived type. Second, app developers can add a succession of <see cref="T:Microsoft.Maui.Controls.Page" /> objects to the <see cref="P:Microsoft.Maui.Controls.MultiPage`1.Children" /> property. Both methods are shown in the code examples below.</para>
      <example>
        <para>The following example code, adapted for brevity from the FormsGallery sample that can be found on the <format type="text/html"><a href="https://docs.microsoft.com/samples/xamarin/xamarin-forms-samples/formsgallery/" target="_blank">Sample Applications</a></format> page, shows how to display data of a specific type by assigning a <see cref="T:Microsoft.Maui.Controls.DataTemplate" /> to the <see cref="P:Microsoft.Maui.Controls.MultiPage`1.ItemTemplate" /> property. Note how <c>NamedColorPage</c> gets its color by binding its <see cref="F:Microsoft.Maui.Controls.BoxView.ColorProperty" /> field.</para>
        <code lang="csharp lang-csharp"><![CDATA[
using System;
using Microsoft.Maui.Controls;
    
namespace MinimalTabbed
{
    class TabbedPageDemoPage : TabbedPage
    {
        public TabbedPageDemoPage ()
        {
            this.Title = "TabbedPage";
    
            this.ItemsSource = new NamedColor[] {
                new NamedColor ("Red", Color.Red),
                new NamedColor ("Yellow", Color.Yellow),
                new NamedColor ("Green", Color.Green),
                new NamedColor ("Aqua", Color.Aqua),
                new NamedColor ("Blue", Color.Blue),
                new NamedColor ("Purple", Color.Purple)
            };
    
            this.ItemTemplate = new DataTemplate (() => { 
                return new NamedColorPage (); 
            });
        }
    }
    
    // Data type:
    class NamedColor
    {
        public NamedColor (string name, Color color)
        {
            this.Name = name;
            this.Color = color;
        }
    
        public string Name { private set; get; }
    
        public Color Color { private set; get; }
    
        public override string ToString ()
        {
            return Name;
        }
    }
    
    // Format page
    class NamedColorPage : ContentPage
    {
        public NamedColorPage ()
        {
            // This binding is necessary to label the tabs in
            // the TabbedPage.
            this.SetBinding (ContentPage.TitleProperty, "Name");
            // BoxView to show the color.
            BoxView boxView = new BoxView {
                WidthRequest = 100,
                HeightRequest = 100,
                HorizontalOptions = LayoutOptions.Center
            };
            boxView.SetBinding (BoxView.ColorProperty, "Color");
    
            // Build the page
            this.Content = boxView;
        }
    }
}
    

]]></code>
      </example>
      <example>
        <para>The example below creates a tabbed view with two <see cref="T:Microsoft.Maui.Controls.ContentPage" /> instances.</para>
        <code lang="csharp lang-csharp"><![CDATA[
class TabbedPageDemoPage2 : TabbedPage
{
    public TabbedPageDemoPage2 ()
    {
        this.Title = "TabbedPage";
        this.Children.Add (new ContentPage 
            {
                Title = "Blue",
                Content = new BoxView
                {
                    Color = Color.Blue,
                    HeightRequest = 100f,
                    VerticalOptions = LayoutOptions.Center
                },
            }
        );
        this.Children.Add (new ContentPage {
            Title = "Blue and Red",
            Content = new StackLayout {
                Children = {
                    new BoxView { Color = Color.Blue },
                    new BoxView { Color = Color.Red}
                }
            }
        });
    }
}
      ]]></code>
      </example>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/TabbedPage.TripleScreenShot.png" />
      </para>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.TabbedPage.BarBackgroundColorProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.TabbedPage.BarBackgroundColor" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.TabbedPage.BarBackgroundProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.TabbedPage.BarTextColorProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.TabbedPage.BarTextColor" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.TabbedPage.UnselectedTabColorProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.TabbedPage.UnselectedTabColor" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.TabbedPage.SelectedTabColorProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.TabbedPage.SelectedTabColor" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TabbedPage.BarBackgroundColor">
            <summary>Gets or sets the background color of the bar.</summary><value>The background color of the bar.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TabbedPage.BarBackground">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TabbedPage.BarTextColor">
            <summary>Gets or sets the color of text on the bar.</summary><value>The color of text on the bar.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TabbedPage.UnselectedTabColor">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TabbedPage.SelectedTabColor">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.TabbedPage.#ctor">
            <summary>Creates a new <see cref="T:Microsoft.Maui.Controls.TabbedPage" /> element with default values.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.TabbedPage.On``1">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Controls.TemplatedView">
            <summary>A view that displays content with a control template, and the base class for <see cref="T:Microsoft.Maui.Controls.ContentView" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.TemplatedView.ControlTemplateProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.TemplatedView.ControlTemplate" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TemplatedView.ControlTemplate">
            <summary>Gets or sets the control template that is used to display content.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.TemplatedView.ResolveControlTemplate">
            <summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.TimePicker">
            <summary>A <see cref="T:Microsoft.Maui.Controls.View" /> control that provides time picking.</summary><remarks>
      <para>The visual representation of a TimePicker is very similar to the one of <see cref="T:Microsoft.Maui.Controls.Entry" />, except that a special control for picking a time appears in place of a keyboard.</para>
      <para>
    The following example shows declaration of a TimePicker with a default time set.
    </para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[
var beeroclock = new TimePicker () { Time = new TimeSpan (17,0,0) };
    ]]></code>
      </example>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/TimePicker.TripleScreenShot.png" />
      </para>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.TimePicker.FormatProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.TimePicker.Format" /> property.</summary><remarks>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.TimePicker.TextColorProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.TimePicker.TextColor" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.TimePicker.CharacterSpacingProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.TimePicker.TimeProperty">
            <summary>Backing store for the Time bindable property.</summary><remarks>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.TimePicker.FontFamilyProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.TimePicker.FontFamily" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.TimePicker.FontSizeProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.TimePicker.FontSize" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.TimePicker.FontAttributesProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.TimePicker.FontAttributes" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.TimePicker.#ctor">
            <summary>Initializes a new TimePicker instance.</summary><remarks>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TimePicker.Format">
            <summary>The format of the time to display to the user. This is a bindable property.</summary><value>A valid time format string.</value><remarks>Format string is the same is passed to DateTime.ToString (string format).</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TimePicker.TextColor">
            <summary>Gets or sets the text color.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TimePicker.CharacterSpacing">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TimePicker.Time">
            <summary>Gets or sets the displayed time. This is a bindable property.</summary><value>The <see cref="T:System.TimeSpan" /> displayed in the TimePicker.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TimePicker.FontAttributes">
            <summary>TGets a value that indicates whether the font for the searchbar text is bold, italic, or neither.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TimePicker.FontFamily">
            <summary>Gets or sets the font family for the picker text.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TimePicker.FontSize">
            <summary>Gets or sets the size of the font for the text in the picker.</summary><value>A <see langword="double" /> that indicates the size of the font.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.TimePicker.UpdateFormsText(System.String,Microsoft.Maui.TextTransform)">
            <param name="source">To be added.</param><param name="textTransform">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.TimePicker.On``1">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Controls.View">
            <summary>A visual element that is used to place layouts and controls on the screen.</summary><remarks>
      <para>The <see cref="T:Microsoft.Maui.Controls.View" /> class is a base class for the <see cref="T:Microsoft.Maui.Controls.Layout" /> class, and most of the controls that application developers will use. Nearly all UI elements that an application developer will use are derived from <see cref="T:Microsoft.Maui.Controls.View" /> class. Because the <see cref="T:Microsoft.Maui.Controls.View" /> class ultimately inherits from <see cref="T:Microsoft.Maui.Controls.BindableObject" /> class, application developers can use the Model-View-ViewModel architecture, as well as XAML, to develop portable user interfaces. The remarks in the <see cref="T:Microsoft.Maui.Controls.BindableObject" /> topic provide a discussion of MVVM and bound properties.</para>
    </remarks>
            <summary>A visual element that is used to place layouts and controls on the screen.</summary><remarks>
      <para>The <see cref="T:Microsoft.Maui.Controls.View" /> class is a base class for the <see cref="T:Microsoft.Maui.Controls.Layout" /> class, and most of the controls that application developers will use. Nearly all UI elements that an application developer will use are derived from <see cref="T:Microsoft.Maui.Controls.View" /> class. Because the <see cref="T:Microsoft.Maui.Controls.View" /> class ultimately inherits from <see cref="T:Microsoft.Maui.Controls.BindableObject" /> class, application developers can use the Model-View-ViewModel architecture, as well as XAML, to develop portable user interfaces. The remarks in the <see cref="T:Microsoft.Maui.Controls.BindableObject" /> topic provide a discussion of MVVM and bound properties.</para>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.View.VerticalOptionsProperty">
            <summary>Identifies the VerticalOptions bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.View.HorizontalOptionsProperty">
            <summary>Identifies the HorizontalOptions bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.View.MarginProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.View.Margin" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.View.GestureRecognizers">
            <summary>The collection of gesture recognizers associated with this view.</summary><value>A List of <see cref="T:Microsoft.Maui.Controls.IGestureRecognizer" />.</value><remarks>
          <para>
            Adding items to this collection will associate gesture events with this element. This is not nessesary for elements which natively support input, such as a Button.
          </para>
          <para>
              This example creates a tap gesture recognizer and associates it with an image. When the image is double tapped, it will become semi-transparent.
              </para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
  var image = new Image {Source = "image.png"};
  var gestureRecognizer = new TapGestureRecognizer {
    TappedCallback = o => image.Opacity = 0.5,
    NumberOfTapsRequired = 2
  };
  image.GestureRecognizers.Add (gestureRecognizer);
              ]]></code>
          </example>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.View.GetChildElements(Microsoft.Maui.Graphics.Point)">
            <param name="point">The point under which to search for child elements.</param><summary>Returns the child elements that are visually beneath the specified <paramref name="point" />.</summary><returns>The child elements that are visually beneath the specified <paramref name="point" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.View.HorizontalOptions">
            <summary>Gets or sets the <see cref="T:Microsoft.Maui.Controls.LayoutOptions" /> that define how the element gets laid in a layout cycle. This is a bindable property.</summary><value>A <see cref="T:Microsoft.Maui.Controls.LayoutOptions" /> which defines how to lay out the element. Default value is <see cref="F:Microsoft.Maui.Controls.LayoutOptions.Fill" /> unless otherwise documented.</value><remarks>
          <para>
            Assigning the HorizontalOptions modifies how the element is laid out when there is excess space available along the X axis from the parent layout. Additionally it specifies if the element should consume leftover space in the X axis from the parent layout. If multiple children of a layout are set to expand, the extra space is distributed proportionally.
          </para>
          <para>
              This example creates four views and adds them to a stack, each laying out in a different manner.
              </para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
  private View CreateButtons ()
  {
    var button1 = new Button {Text = "LeftAligned", HorizontalOptions=LayoutOptions.Start};
    var button2 = new Button {Text = "CenterAligned", HorizontalOptions=LayoutOptions.Center};
    var button3 = new Button {Text = "EndAligned", HorizontalOptions=LayoutOptions.End};
    var button4 = new Button {Text = "Fill", HorizontalOptions=LayoutOptions.Fill};
    
    StackLayout stack = new StackLayout {
      Children = {
        button1,
        button2,
        button3,
        button4
      }
    };
    
    return stack;
  }
              ]]></code>
          </example>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.View.Margin">
            <summary>Gets or sets the margin for the view.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.View.VerticalOptions">
            <summary>Gets or sets the <see cref="T:Microsoft.Maui.Controls.LayoutOptions" /> that define how the element gets laid in a layout cycle. This is a bindable property.</summary><value>A <see cref="T:Microsoft.Maui.Controls.LayoutOptions" /> which defines how to lay out the element. Default value is <see cref="F:Microsoft.Maui.Controls.LayoutOptions.Fill" /> unless otherwise documented.</value><remarks>
          <para>
            Assigning the VerticalOptions modifies how the element is laid out when there is excess space available along the Y axis from the parent layout. Additionally it specifies if the element should consume leftover space in the Y axis from the parent layout. If multiple children of a layout are set to expand, the extra space is distributed proportionally.
          </para>
          <para>
              This example creates four views and adds them to a stack, each laying out in a different manner.
              </para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
  private View CreateButtons ()
  {
    var button1 = new Button {Text = "TopAligned", VerticalOptions=LayoutOptions.Start};
    var button2 = new Button {Text = "CenterAligned", VerticalOptions=LayoutOptions.Center};
    var button3 = new Button {Text = "BottomAligned", VerticalOptions=LayoutOptions.End};
    var button4 = new Button {Text = "Fill", VerticalOptions=LayoutOptions.Fill};
    
    StackLayout stack = new StackLayout {
      Orientation = StackOrientation.Horizontal,
      Children = {
        button1,
        button2,
        button3,
        button4
      }
    };
    
    return stack;
  }
              ]]></code>
          </example>
        </remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.VisualElement">
            <summary>A <see cref="T:Microsoft.Maui.Controls.Element" /> that occupies an area on the screen, has a visual appearance, and can obtain touch input.</summary><remarks>
      <para>The base class for most Microsoft.Maui.Controls on-screen elements. Provides most properties, events, and methods for presenting an item on screen.</para>
    </remarks>
            <summary>A <see cref="T:Microsoft.Maui.Controls.Element" /> that occupies an area on the screen, has a visual appearance, and can obtain touch input.</summary><remarks>
      <para>The base class for most Microsoft.Maui.Controls on-screen elements. Provides most properties, events, and methods for presenting an item on screen.</para>
    </remarks>
            <summary>A <see cref="T:Microsoft.Maui.Controls.Element" /> that occupies an area on the screen, has a visual appearance, and can obtain touch input.</summary><remarks>
      <para>The base class for most Microsoft.Maui.Controls on-screen elements. Provides most properties, events, and methods for presenting an item on screen.</para>
    </remarks>
            <summary>A <see cref="T:Microsoft.Maui.Controls.Element" /> that occupies an area on the screen, has a visual appearance, and can obtain touch input.</summary><remarks>
      <para>The base class for most Microsoft.Maui.Controls on-screen elements. Provides most properties, events, and methods for presenting an item on screen.</para>
    </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.VisualElement.Layout(Microsoft.Maui.Graphics.Rect)">
            <param name="bounds">The new bounds of the element.</param><summary>Updates the bounds of the element during the layout cycle.</summary><remarks>Calling Layout will trigger a layout cycle for the sub-tree of this element.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualElement.IsLoaded">
            <summary>
            Indicates if a VisualElement is connected to the main object tree.
            </summary>
        </member>
        <member name="E:Microsoft.Maui.Controls.VisualElement.Loaded">
            <summary>
            Occurs when a VisualElement has been constructed and added to the object tree.
            This event may occur before the VisualElement has been measured so should not be relied on for size information.  
            </summary>
        </member>
        <member name="E:Microsoft.Maui.Controls.VisualElement.Unloaded">
            <summary>
            Occurs when this VisualElement is no longer connected to the main object tree.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.VisualElement.NavigationProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.VisualElement.StyleProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.VisualElement.InputTransparentProperty">
            <summary>Identifies the InputTransparent bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.VisualElement.IsEnabledProperty">
            <summary>Identifies the IsEnabled bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.VisualElement.XProperty">
            <summary>Identifies the X bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.VisualElement.YProperty">
            <summary>Identifies the Y bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.VisualElement.AnchorXProperty">
            <summary>Identifies the AnchorX bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.VisualElement.AnchorYProperty">
            <summary>Identifies the AnchorY bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.VisualElement.TranslationXProperty">
            <summary>Identifies the TranslationX bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.VisualElement.TranslationYProperty">
            <summary>Identifies the TranslationY bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.VisualElement.WidthProperty">
            <summary>Identifies the Width bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.VisualElement.HeightProperty">
            <summary>Identifies the Height bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.VisualElement.RotationProperty">
            <summary>Identifies the Rotation bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.VisualElement.RotationXProperty">
            <summary>Identifies the RotationX bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.VisualElement.RotationYProperty">
            <summary>Identifies the RotationY bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.VisualElement.ScaleProperty">
            <summary>Identifies the Scale bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.VisualElement.ScaleXProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.VisualElement.ScaleX" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.VisualElement.ScaleYProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.VisualElement.ScaleY" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.VisualElement.ClipProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.VisualElement.VisualProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.VisualElement.Visual" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualElement.Visual">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.VisualElement.IsVisibleProperty">
            <summary>Identifies the IsVisible bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.VisualElement.OpacityProperty">
            <summary>Identifies the Opacity bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.VisualElement.BackgroundColorProperty">
            <summary>Identifies the BackgroundColor bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.VisualElement.BackgroundProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.VisualElement.BehaviorsProperty">
            <summary>Identifies the Behaviors bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.VisualElement.TriggersProperty">
            <summary>Identifies the Triggers bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.VisualElement.WidthRequestProperty">
            <summary>Backing store for the WidthRequest property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.VisualElement.HeightRequestProperty">
            <summary>Backing store for the HeightRequest property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.VisualElement.MinimumWidthRequestProperty">
            <summary>Backing store for the MinimumWidthRequest property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.VisualElement.MinimumHeightRequestProperty">
            <summary>Backing store for the MinimumHeightRequest property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.VisualElement.IsFocusedPropertyKey">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.VisualElement.IsFocusedProperty">
            <summary>Identifies the IsFocused bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.VisualElement.FlowDirectionProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.VisualElement.FlowDirection" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualElement.FlowDirection">
            <summary>Gets or sets the layout flow direction.</summary><value>The layout flow direction.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualElement.AnchorX">
            <summary>Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.</summary><value>The value that declares the X component of the transform. The default value is 0.5.</value><remarks>To be added.</remarks><altmember cref="P:Microsoft.Maui.Controls.VisualElement.AnchorY" />
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualElement.AnchorY">
            <summary>Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.</summary><value>The value that declares the Y component of the transform. The default value is 0.5.</value><remarks>To be added.</remarks><altmember cref="P:Microsoft.Maui.Controls.VisualElement.AnchorX" />
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualElement.BackgroundColor">
            <summary>Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.</summary><value>The color that is used to fill the background of a VisualElement.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualElement.Background">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualElement.Behaviors">
            <summary>Gets the list of Behaviors associated to this element. This is a bindable property.</summary><value>
        </value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualElement.Bounds">
            <summary>Gets the bounds of the element.</summary><value>The bounds of an element, in device-independent units.</value><remarks>Bounds is assigned during the Layout cycle by a call to <see cref="M:Microsoft.Maui.Controls.VisualElement.Layout(Microsoft.Maui.Graphics.Rect)" />.</remarks><altmember cref="P:Microsoft.Maui.Controls.VisualElement.WidthRequest" /><altmember cref="P:Microsoft.Maui.Controls.VisualElement.HeightRequest" />
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualElement.Height">
            <summary>Gets the current rendered height of this element. This is a read-only bindable property.</summary><value>The renderered height of this element.</value><remarks>The height of an element is set during the Layout phase.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualElement.HeightRequest">
            <summary>Gets or sets the desired height override of this element.</summary><value>The height this element desires to be.</value><remarks>HeightRequest does not immediately change the Bounds of a VisualElement, however setting the HeightRequest will change the result of calls to GetSizeRequest, which will in turn modify the final size the element receives during a layout cycle.</remarks><remarks>To revert to the default "auto" behavior of this property, use ClearValue(HeightRequestProperty).</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualElement.InputTransparent">
            <summary>Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.</summary><value>
          <see langword="false" /> if the element and its children should receive input; <see langword="true" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword="false" />.</value><remarks>Setting InputTransparent is not the same as setting IsEnabled to false. Setting InputTransparent only disables inputs and instead causes them to be passed to the <see cref="T:Microsoft.Maui.Controls.VisualElement" /> that is visually behind the element. Usually, this is the parent of the element. The value of the <see cref="P:Microsoft.Maui.Controls.VisualElement.InputTransparent" /> property is inherited by a visual element's child elements.</remarks><altmember cref="P:Microsoft.Maui.Controls.VisualElement.IsEnabled" />
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualElement.IsEnabled">
            <summary>Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.</summary><value>
          <see langword="true" /> if the element is enabled; otherwise, <see langword="false" />. The default value is <see langword="true" /></value><remarks>
          <para>
            Elements that are not enabled do not participate in hit detection, and therefore will not receive focus or emit input events.
          </para>
          <para>
              The following example shows a handler on a button which will then set IsEnabled to false on another button.
              </para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
  public partial class ButtonDisableExample {
    void BuildButtons ()
    {
      Button button1 = new Button {Text = "New button"};
      Button button2 = new Button {Text = "Disabled on click"};
      button1.Activated += (o, e) => button2.IsEnabled = false;
    }
  }
              ]]></code>
          </example>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualElement.IsFocused">
            <summary>Gets a value indicating whether this element is focused currently. This is a bindable property.</summary><value>
          <see langword="true" /> if the element is focused; otherwise, <see langword="false" />.</value><remarks>
          <para>
            Applications may have multiple focuses depending on the implementation of the underlying toolkit. Menus and modals in particular may leave multiple items with focus.
          </para>
          <para>
              The following example shows conditionally setting a background color based on the focus state.
              </para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
  void UpdateBackground ()
  {
    if (myElement.IsFocused)
      myElement.BackgroundColor = Color.Red;
    else
      myElement.BackgroundColor = Color.Blue;
  }
              ]]></code>
          </example>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualElement.IsVisible">
            <summary>Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.</summary><value>
          <see langword="true" /> if the element should be rendered; otherwise, <see langword="false" />. Default value is <see langword="true" />.</value><remarks>
          <para>Setting IsVisible to false will remove the element from the visual tree. The element will no longer take up space in layouts or be eligle to receive any kind of input event.</para>
          <para>
              The following example shows a stack where the middle element is toggled when a button is activated.
              </para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
  partial class LabelToggle {
    Label label;
    
    void Build ()
    {
      var firstView = new Button {Text = "Tap Me"};
      label = new Label {Text = "I can be toggled"};
      var thirdView = new Image {Source = "image.png"};
    
      firstView.Activated += OnButtonActivated;
    
      Content = new StackLayout {
        Children {
          firstView,
          label,
          thirdView
        }
      };
    }
    
    void OnButtonActivated (object sender, EventArgs args)
    {
      label.IsVisible = !label.IsVisible;
    }
  }
              ]]></code>
          </example>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualElement.MinimumHeightRequest">
            <summary>Gets or sets a value which overrides the minimum height the element will request during layout.</summary><value>The minimum height the element requires. Default value is -1.</value><remarks>
          <para>
            MinimumHeightRequest is used to override the results of a call to GetSizeRequest by setting the minimum height property. This causes overflow handling to shrink this element to its minimum height before elements who do not have a minimum size set.
          </para>
          <para>
              The following example sets the MinimumHeightRequest to enable an image to shrink below its normal size.
              </para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
  void Build (string veryLongString)
  {
    var label = new Label {Text = veryLongString};
    var image = new Image {Source = "image500x500.png"};
    
    image.MinimumHeightRequest = 20;
    Content = new StackLayout {
      Children {
        label,
        image
      }
    };
  }
              ]]></code>
          </example>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualElement.MinimumWidthRequest">
            <summary>Gets or sets a value which overrides the minimum width the element will request during layout.</summary><value>The minimum width the element requires. Default value is -1.</value><remarks>
          <para>
            MinimumWidthRequest is used to override the results of a call to GetSizeRequest by setting the minimum width property. This causes overflow handling to shrink this element to its minimum width before elements who do not have a minimum size set.
          </para>
          <para>
              The following example sets the MinimumWidthRequest to enable an image to shrink below its normal size.
              </para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
  void Build (string veryLongString)
  {
    var label = new Label {Text = veryLongString};
    var image = new Image {Source = "image500x500.png"};
    
    image.MinimumWidthRequest = 20;
    Content = new StackLayout {
      Orientation = StackOrientation.Horizontal,
      Children {
        label,
        image
      }
    };
  }
              ]]></code>
          </example>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualElement.Opacity">
            <summary>Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.</summary><value>The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.</value><remarks>
          <para>
            The opacity value has no effect unless IsVisible is <see langword="true" />. Opacity is inherited down the element hierarchy. If a parent has 0.5 opacity, and a child has 0.5 opacity, the child will render with an effective 0.25 opacity. Setting opacity to 0 has undefined behavior with input elements.
          </para>
          <para>
              The following example sets the opacity of a layout to 0.5 and the opacity of one of its children to 0.5, making the child 25% opaque.
              </para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
  StackLayout stack = new StackLayout ();
  Button button1 = new Button {Text="A Button"};
  Button button2 = new Button {Text="Another Button"};
    
  stack.Children.Add (button1);
  stack.Children.Add (button2);
    
  // The stack and everything in it will become 50% opaque
  stack.Opacity = 0.5;
    
  // button1 will become 25% opaque while the stack and button2 remane 50% opaque
  button1.Opacity = 0.5;
              ]]></code>
          </example>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualElement.Rotation">
            <summary>Gets or sets the rotation (in degrees) about the Z-axis (affine rotation) when the element is rendered.</summary><value>The rotation about the Z-axis in degrees.</value><remarks>Rotation is applied relative to <see cref="P:Microsoft.Maui.Controls.VisualElement.AnchorX" /> and <see cref="P:Microsoft.Maui.Controls.VisualElement.AnchorY" />.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualElement.RotationX">
            <summary>Gets or sets the rotation (in degrees) about the X-axis (perspective rotation) when the element is rendered.</summary><value>The rotation about the X-axis in degrees.</value><remarks>RotationX is applied relative to <see cref="P:Microsoft.Maui.Controls.VisualElement.AnchorX" /> and <see cref="P:Microsoft.Maui.Controls.VisualElement.AnchorY" />.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualElement.RotationY">
            <summary>Gets or sets the rotation (in degrees) about the Y-axis (perspective rotation) when the element is rendered.</summary><value>The rotation about the Y-axis in degrees.</value><remarks>RotationY is applied relative to <see cref="P:Microsoft.Maui.Controls.VisualElement.AnchorX" /> and <see cref="P:Microsoft.Maui.Controls.VisualElement.AnchorY" />.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualElement.Scale">
            <summary>Gets or sets the scale factor applied to the element.</summary><value>The scale factor of the element. Default value is 1.0.</value><remarks>Scale is applied relative to <see cref="P:Microsoft.Maui.Controls.VisualElement.AnchorX" /> and <see cref="P:Microsoft.Maui.Controls.VisualElement.AnchorY" />.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualElement.ScaleX">
            <summary>Gets or sets a scale value to apply to the X direction.</summary><value>The scale value to apply to the X direction.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualElement.ScaleY">
            <summary>Gets or sets a scale value to apply to the Y direction.</summary><value>The scale value to apply to the Y direction.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualElement.TranslationX">
            <summary>Gets or sets the X translation delta of the element.</summary><value>The amount to translate the element.</value><remarks>Translation is applied post layout. It is particularly good for applying animations. Translating an element outside the bounds of its parent container may prevent inputs from working.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualElement.TranslationY">
            <summary>Gets or sets the Y translation delta of the element.</summary><value>The amount to translate the element.</value><remarks>Translation is applied post layout. It is particularly good for applying animations. Translating an element outside the bounds of its parent container may prevent inputs from working.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualElement.Triggers">
            <summary>Gets the list of Trigger associated to this element. This is a bindable property.</summary><value>
        </value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualElement.Width">
            <summary>Gets the current rendered width of this element. This is a read-only bindable property.</summary><value>The renderered width of this element.</value><remarks>The width of an element is set during the Layout phase.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualElement.WidthRequest">
            <summary>Gets or sets the desired width override of this element.</summary><value>The width this element desires to be.</value><remarks>WidthRequest does not immediately change the Bounds of a VisualElement, however setting the WidthRequest will change the result of calls to GetSizeRequest, which will in turn modify the final size the element receives during a layout cycle.</remarks><remarks>To revert to the default "auto" behavior of this property, use ClearValue(WidthRequestProperty).</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualElement.X">
            <summary>Gets the current X position of this element. This is a read-only bindable property.</summary><value>The X position of this element relative to its parents bounds.</value><remarks>The x value of an element is set during the Layout phase.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualElement.Y">
            <summary>Gets the current Y position of this element. This is a read-only bindable property.</summary><value>The Y position of this element relative to its parents bounds.</value><remarks>The y value of an element is set during the Layout phase.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualElement.Clip">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualElement.Batched">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualElement.DisableLayout">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualElement.IsPlatformEnabled">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.VisualElement.BatchBegin">
            <summary>Signals the start of a batch of changes to the elements properties.</summary><remarks>Application authors will not generally need to batch updates manually as the animation framework will do this for them.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.VisualElement.BatchCommit">
            <summary>Signals the end of a batch of commands to the element and that those commands should now be committed.</summary><remarks>This method merely ensures that updates sent during the batch have been committed. It does not ensure that they were not committed before calling this.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualElement.Resources">
            <summary>Gets or sets the local resource dictionary.</summary><value>The current resource dictionary, where resources are stored by key.</value><remarks>
          <para>In XAML, resource dictionaries are filled with key/value pairs that are specified in XML and consequently created at run time. The keys in the resource dictionary are specified with the <c>x:Key</c> attribute of the XML tag for the type to create. An object of that type is created, and is initialized with the property and field values that are specified either by additional attributes or by nested tags, both of which, when present are simply string representations of the property or field names. The object is then inserted into the <see cref="T:Microsoft.Maui.Controls.ResourceDictionary" /> for the enclosing type at runtime.</para>
          <example>
            <para>For example, the XAML below, taken from  the <format type="text/html"><a href="https://docs.microsoft.com/xamarin/xamarin-forms/xaml/">XAML for Microsoft.Maui.Controls</a></format> series, creates a resource dictionary that contains <see cref="T:Microsoft.Maui.Controls.LayoutOptions" /> object constants that can be used for any <see cref="T:Microsoft.Maui.Controls.Layout" /> objects that are added to the surrounding <see cref="T:Microsoft.Maui.Controls.ContentPage" />:</para>
            <code><![CDATA[
<ContentPage.Resources>
    <ResourceDictionary>
        <LayoutOptions x:Key="horzOptions"
                     Alignment="Center" />
    
        <LayoutOptions x:Key="vertOptions"
                     Alignment="Center"
                     Expands="True" />
    </ResourceDictionary>
</ContentPage.Resources>
]]></code>
            <para>Note that the above snippet is only valid when nested within a <c>&lt;ContentPage&gt;...&lt;/ContentPage&gt;</c> tag pair. Within that pair, the app developer can use both of the <c>horzOptions</c> and <c>vertOptions</c> keys to specify values for properties of type <see cref="T:Microsoft.Maui.Controls.LayoutOptions" /> by using the <c>"{...}"</c> static resource syntax. The short example below, also taken from  the <format type="text/html"><a href="https://docs.microsoft.com/xamarin/xamarin-forms/xaml/">XAML for Microsoft.Maui.Controls</a></format> series, illustrates this syntax:</para>
            <code><![CDATA[
<Button Text="Do this!"
        HorizontalOptions="{StaticResource horzOptions}"
        VerticalOptions="{StaticResource vertOptions}"
        BorderWidth="3"
        Rotation="-15"
        TextColor="Red"
        Font="Large" />]]></code>
            <para>Resource dictionaries and their associated XML provide the application developer with a convenient method to reuse code inside the XAML compile-time and run-time engines.</para>
          </example>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.VisualElement.Focus">
            <summary>Attemps to set focus to this element.</summary><returns>
          <see langword="true" /> if the keyboard focus was set to this element; <see langword="false" /> if the call to this method did not force a focus change.</returns><remarks>Element must be able to receive focus for this to work. Calling Focus on offscreen or unrealized elements has undefined behavior.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.VisualElement.Measure(System.Double,System.Double,Microsoft.Maui.Controls.MeasureFlags)">
            <param name="widthConstraint">The suggested maximum width constraint for the visual element to render.</param><param name="heightConstraint">The suggested maximum height constraint for the visual element to render.</param><param name="flags">A value that controls whether margins are included in the returned size.</param><summary>Returns the minimum size that a visual element needs in order to be displayed on the device.</summary><returns>The minimum size that a visual element needs in order to be displayed on the device.</returns><remarks>
          <para>If the minimum sized that the visual element needs in order to be displayed on the device is larger than can be accommodated by <paramref name="widthConstraint" /> and <paramref name="heightConstraint" />, the return value may represent a rectangle that is larger in either or both of those parameters.</para>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.VisualElement.Unfocus">
            <summary>Unsets focus to this element.</summary><remarks>Element must already have focus for this to have any effect.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.VisualElement.InvalidateMeasureNonVirtual(Microsoft.Maui.Controls.Internals.InvalidationTrigger)">
            <param name="trigger">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.WebView">
            <summary>A <see cref="T:Microsoft.Maui.Controls.View" /> that presents HTML content.</summary><remarks>
      <para>The following example shows a basic use.</para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[using System;
using Microsoft.Maui.Controls;
    
namespace FormsGallery
{
    class WebViewDemoPage : ContentPage
    {
        public WebViewDemoPage()
        {
            Label header = new Label
            {
                Text = "WebView",
                FontSize = Device.GetNamedSize (NamedSize.Large, typeof(Label)),
                HorizontalOptions = LayoutOptions.Center
            };
    
            WebView webView = new WebView
            {
                Source = new UrlWebViewSource
                {
                    Url = "https://blog.xamarin.com/",
                },
                VerticalOptions = LayoutOptions.FillAndExpand
            };
    
            // Accomodate iPhone status bar.
            this.Padding = new Thickness(10, Device.OnPlatform(20, 0, 0), 10, 5);
    
            // Build the page.
            this.Content = new StackLayout
            {
                Children =
                {
                    header,
                    webView
                }
            };
        }
    }
}]]></code>
      </example>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/WebView.TripleScreenShot.png" />
      </para>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.WebView.SourceProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.WebView.Source" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.WebView.CanGoBackProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.WebView.CanGoBack" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.WebView.CanGoForwardProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.WebView.CanGoForward" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.WebView.CookiesProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.WebView.#ctor">
            <summary>Creates a new <see cref="T:Microsoft.Maui.Controls.WebView" /> element with default values.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.WebView.CanGoBack">
            <summary>Gets a value that indicates whether the user can navigate to previous pages.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.WebView.CanGoForward">
            <summary>Gets a value that indicates whether the user can navigate forward.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.WebView.Cookies">
            <summary>When set this will act as a sync for cookies.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.WebView.Source">
            <summary>Gets or sets the <see cref="T:Microsoft.Maui.Controls.WebViewSource" /> object that represents the location that this <see cref="T:Microsoft.Maui.Controls.WebView" /> object displays.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.WebView.Eval(System.String)">
            <param name="script">A script to evaluate.</param><summary>Evaluates the script that is specified by <paramref name="script" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.WebView.EvaluateJavaScriptAsync(System.String)">
            <param name="script">The script to evaluate.</param><summary>On platforms that support JavaScript evaluation, evaluates <paramref name="script" />.</summary><returns>A task that contains the result of the evaluation as a string.</returns><remarks>Native JavaScript evaluation is supported neither on Tizen nor GTK (Linux).</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.WebView.GoBack">
            <summary>Navigates to the previous page.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.WebView.GoForward">
            <summary>Navigates to the next page in the list of visited pages.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.WebView.Reload">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.WebView.On``1">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.Controls.Window.AddOverlay(Microsoft.Maui.IWindowOverlay)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.Controls.Window.RemoveOverlay(Microsoft.Maui.IWindowOverlay)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Controls.HtmlWebViewSource">
            <summary>A WebViewSource bound to an HTML-formatted string.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.HtmlWebViewSource.HtmlProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.HtmlWebViewSource.Html" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.HtmlWebViewSource.BaseUrlProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.HtmlWebViewSource.BaseUrl" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.HtmlWebViewSource.BaseUrl">
            <summary>The base URL for the source HTML document.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.HtmlWebViewSource.Html">
            <summary>The HTML content.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.HtmlWebViewSource.Load(Microsoft.Maui.IWebViewDelegate)">
            <param name="renderer">The renderer into which to load html content.</param><summary>Loads the specified <paramref name="renderer" /> with the current base URL and HTML.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Xaml.AcceptEmptyServiceProviderAttribute">
            <summary>Tells the XAML parser and compiler that they may ignore supplied service providers in methods and constructors in the attributed class.</summary><remarks>
      <para>Developers should note that this attribute does not guarantee that the parser will not pass <see langword="null" /> instead of a supplied service provider. It only allows that they may do so.</para>
    </remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Xaml.ProvideCompiledAttribute">
            <summary>
            Attribute to indicate that the adorned class can be compiled through XAML compilation.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Xaml.ProvideCompiledAttribute.CompiledVersion">
            <summary>
            The fully qualified type name to provide a compiled version for.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Controls.Xaml.ProvideCompiledAttribute.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.Maui.Controls.Xaml.ProvideCompiledAttribute"/> object.
            </summary>
            <param name="compiledVersion"></param>
        </member>
        <member name="T:Microsoft.Maui.Controls.Xaml.Diagnostics.BindingDiagnostics">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Xaml.Diagnostics.BindingBaseErrorEventArgs">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Xaml.Diagnostics.BindingBaseErrorEventArgs.XamlSourceInfo">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Xaml.Diagnostics.BindingBaseErrorEventArgs.Binding">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Xaml.Diagnostics.BindingBaseErrorEventArgs.ErrorCode">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Xaml.Diagnostics.BindingBaseErrorEventArgs.Message">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Xaml.Diagnostics.BindingBaseErrorEventArgs.MessageArgs">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Xaml.Diagnostics.BindingErrorEventArgs">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Xaml.Diagnostics.BindingErrorEventArgs.Source">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Xaml.Diagnostics.BindingErrorEventArgs.Target">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Xaml.Diagnostics.BindingErrorEventArgs.TargetProperty">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Xaml.XamlResourceIdAttribute">
            <summary>For internal use by the XAML infrastructure.</summary><remarks>For internal use by the XAML infrastructure.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Xaml.XamlResourceIdAttribute.ResourceId">
            <summary>For internal use by the XAML infrastructure.</summary><value>For internal use by the XAML infrastructure.</value><remarks>For internal use by the XAML infrastructure.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Xaml.XamlResourceIdAttribute.Path">
            <summary>For internal use by the XAML infrastructure.</summary><value>For internal use by the XAML infrastructure.</value><remarks>For internal use by the XAML infrastructure.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Xaml.XamlResourceIdAttribute.Type">
            <summary>For internal use by the XAML infrastructure.</summary><value>For internal use by the XAML infrastructure.</value><remarks>For internal use by the XAML infrastructure.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Xaml.XamlResourceIdAttribute.#ctor(System.String,System.String,System.Type)">
            <param name="resourceId">For internal use by the XAML infrastructure.</param><param name="path">For internal use by the XAML infrastructure.</param><param name="type">For internal use by the XAML infrastructure.</param><summary>For internal use by the XAML infrastructure.</summary><remarks>For internal use by the XAML infrastructure.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Xaml.XamlParseException">
            <summary>Exception that is raised when the XAML parser encounters a XAML error.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Xaml.XamlParseException.#ctor">
            <summary>For internal use by the XAML engine.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Xaml.XamlParseException.#ctor(System.String)">
            <param name="message">For internal use by the XAML engine.</param><summary>For internal use by the XAML engine.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Xaml.XamlParseException.#ctor(System.String,System.Exception)">
            <param name="message">For internal use by the XAML engine.</param><param name="innerException">For internal use by the XAML engine..</param><summary>For internal use by the XAML engine.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Xaml.XamlParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <param name="info">For internal use by the XAML engine.</param><param name="context">For internal use by the XAML engine.</param><summary>For internal use by the XAML engine.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Xaml.XamlParseException.#ctor(System.String,System.Xml.IXmlLineInfo,System.Exception)">
            <param name="message">For internal use by the XAML engine.</param><param name="xmlInfo">For internal use by the XAML engine.</param><param name="innerException">For internal use by the XAML engine.</param><summary>For internal use by the XAML engine.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Xaml.XamlParseException.XmlInfo">
            <summary>Information about the condition that caused the exception to be thrown.</summary><value>For internal use by the XAML engine.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Xaml.XmlLineInfo">
            <summary>For internal use by the XAML infrastructure.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Xaml.XmlLineInfo.#ctor">
            <summary>For internal use by the XAML engine.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Xaml.XmlLineInfo.#ctor(System.Int32,System.Int32)">
            <param name="linenumber">For internal use by the XAML engine.</param><param name="lineposition">For internal use by the XAML engine.</param><summary>For internal use by the XAML engine.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Xaml.XmlLineInfo.HasLineInfo">
            <summary>For internal use by the XAML infrastructure.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Xaml.XmlLineInfo.LineNumber">
            <summary>For internal use by the XAML infrastructure.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Xaml.XmlLineInfo.LinePosition">
            <summary>For internal use by the XAML infrastructure.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.IElementConfiguration`1">
            <summary>
            Helper that handles storing and lookup of platform specifics implementations
            </summary>
            <typeparam name="TElement">The element type.</typeparam>
        </member>
        <member name="M:Microsoft.Maui.Controls.IElementConfiguration`1.On``1">
            <summary>
            Returns the platform-specific instance of this <typeparamref name="TElement"/>, on which a platform-specific method may be called.
            </summary>
            <typeparam name="T">A type of <see cref="T:Microsoft.Maui.Controls.IConfigPlatform"/> which specifies the platform to retrieve for.</typeparam>
            <returns>A platform-specific instance of <typeparamref name="TElement"/>.</returns>
        </member>
        <member name="T:Microsoft.Maui.Controls.ImageSourceConverter">
            <summary>Class that takes a string representation of an image file location and returns a <see cref="T:Microsoft.Maui.Controls.ImageSource" /> from the specified resource.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.IndicatorShape">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.IndicatorShape.Circle">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.IndicatorShape.Square">
            <summary>To be added.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.InputView">
            <summary>The base class of a view which can take keyboard input.</summary><remarks>The constructor of this class is internal. Microsoft.Maui.Controls does not provide any renderer for InputView base class.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.InputView.TextProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.InputView.Text" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.InputView.KeyboardProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.InputView.Keyboard" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.InputView.IsSpellCheckEnabledProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.InputView.IsSpellCheckEnabled" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.InputView.MaxLengthProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.InputView.MaxLength" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.InputView.IsReadOnlyProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.InputView.IsReadOnly" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.InputView.PlaceholderProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.InputView.Placeholder" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.InputView.PlaceholderColorProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.InputView.PlaceholderColor" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.InputView.TextColorProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.InputView.TextColor" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.InputView.CharacterSpacingProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.InputView.CharacterSpacing" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.InputView.TextTransformProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.InputView.MaxLength">
            <summary>Gets or sets the maximum allowed length of input.</summary><value>An integer in the interval [0,<c>int.MaxValue</c>]. The default value is <c>Int.MaxValue</c>.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.InputView.Text">
            <summary>Gets or sets the text of the input view. This is a bindable property.</summary><value>A string containing the text of the input view. The default value is null.</value><remarks>Setting this property will cause the <see cref="E:Microsoft.Maui.Controls.InputView.TextChanged" /> event to be emitted.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.InputView.Keyboard">
            <summary>Gets or sets the Keyboard for the InputView. This is a bindable property.</summary><value>The <see cref="T:Microsoft.Maui.Keyboard" /> to use for the InputView.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.InputView.IsSpellCheckEnabled">
            <summary>Gets or sets a value that controls whether spell checking is enabled.</summary><value>
          <see langword="true" /> if spell checking is enabled. Otherwise <see langword="false" />.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.InputView.IsReadOnly">
            <summary>Gets or sets a value that indicates whether user should be prevented from modifying the text. Default is <see langword="false" />.</summary><value>If <see langword="true" />, user cannot modify text. Else, <see langword="false" />.</value><remarks>The IsReadonly property does not alter the visual appearance of the control, unlike the IsEnabled property that also changes the visual appearance of the control to gray.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.InputView.Placeholder">
            <summary>Gets or sets the text that is displayed when the control is empty.</summary><value>The text that is displayed when the control is empty.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.InputView.PlaceholderColor">
            <summary>Gets or sets the color of the placeholder text.</summary><value>The color of the placeholder text.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.InputView.TextColor">
            <summary>Gets or sets the text color.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.InputView.CharacterSpacing">
            <summary>Gets or sets a value that indicates the number of device-independent units that should be in between characters in the text displayed by the Entry. Applies to Text and Placeholder.</summary><value>The number of device-independent units that should be in between characters in the text.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.InputView.TextTransform">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.InputView.OnTextTransformChanged(Microsoft.Maui.TextTransform,Microsoft.Maui.TextTransform)">
            <param name="oldValue">To be added.</param><param name="newValue">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.InputView.UpdateFormsText(System.String,Microsoft.Maui.TextTransform)">
            <param name="original">To be added.</param><param name="transform">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Behavior">
            <summary>
            Base class for generalized user-defined behaviors that can respond to arbitrary conditions and events.
            </summary>
            <remarks>Application developers should specialize the <see cref="T:Microsoft.Maui.Controls.Behavior`1" /> generic class, instead of directly using <see cref="T:Microsoft.Maui.Controls.Behavior" />.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Behavior.#ctor">
            <summary>
            Creates a new <see cref="T:Microsoft.Maui.Controls.Behavior" /> with default values.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.Behavior.AssociatedType">
            <summary>
            Gets the type of the objects with which this <see cref="T:Microsoft.Maui.Controls.Behavior" /> can be associated.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Controls.Behavior.OnAttachedTo(Microsoft.Maui.Controls.BindableObject)">
            <summary>
            Application developers override this method to implement the behaviors that will be associated with <paramref name="bindable" />.
            </summary>
            <param name="bindable">The bindable object to which the behavior was attached.</param>
        </member>
        <member name="M:Microsoft.Maui.Controls.Behavior.OnDetachingFrom(Microsoft.Maui.Controls.BindableObject)">
            <summary>
            Application developers override this method to remove the behaviors from <paramref name="bindable" />
            that were implemented in a previous call to the <see cref="M:Microsoft.Maui.Controls.Behavior.OnAttachedTo(Microsoft.Maui.Controls.BindableObject)"/> method.
            </summary>
            <param name="bindable">The bindable object from which the behavior was detached.</param>
        </member>
        <member name="T:Microsoft.Maui.Controls.Behavior`1">
            <inheritdoc/>
            <typeparam name="T">The type of object this behavior will be applied to.</typeparam>
        </member>
        <member name="M:Microsoft.Maui.Controls.Behavior`1.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.Controls.Behavior`1.OnAttachedTo(Microsoft.Maui.Controls.BindableObject)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.Controls.Behavior`1.OnAttachedTo(`0)">
            <summary>
            Application developers override this method to implement the behaviors that will be associated with <paramref name="bindable" />.
            </summary>
            <param name="bindable">The bindable object to which the behavior was attached.</param>
        </member>
        <member name="M:Microsoft.Maui.Controls.Behavior`1.OnDetachingFrom(Microsoft.Maui.Controls.BindableObject)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.Controls.Behavior`1.OnDetachingFrom(`0)">
            <summary>
            Application developers override this method to remove the behaviors from <paramref name="bindable" />
            that were implemented in a previous call to the <see cref="M:Microsoft.Maui.Controls.Behavior`1.OnAttachedTo(`0)"/> method.
            </summary>
            <param name="bindable">The bindable object from which the behavior was detached.</param>
        </member>
        <member name="T:Microsoft.Maui.Controls.BindingCondition">
            <summary>Class that represents a value comparison with the target of an arbitrary binding.</summary><remarks>
      <para>The <see cref="T:Microsoft.Maui.Controls.BindingCondition" /> class can compare a value a binding on any class within the current scope. Developers who want to compare to a value to a bound property on the control that contains the conditions surrounding <see cref="T:Microsoft.Maui.Controls.MultiTrigger" /> may want to use a <see cref="T:Microsoft.Maui.Controls.PropertyCondition" /> in addition to any binding conditions in the trigger list. </para>
      <example>
        <para>The XML example below creates a binding condition within a surrounding <see cref="T:Microsoft.Maui.Controls.MultiTrigger" /> (omitted) that succeeds when the referenced <c>name</c> has a <c>Text.Length</c> property length that is equal to <c>0</c>. (<c>name</c> must refer to an element, such as a <see cref="T:Microsoft.Maui.Controls.TextCell" />, that has a <c>Text</c> property that, in turn, has a <c>Length</c> property.)</para>
        <code lang="XML"><![CDATA[
    <BindingCondition Binding="{Binding Source={x:Reference name},
                                    Path=Text.Length}"
                                    Value="0" />]]></code>
      </example>
    </remarks><altmember cref="T:Microsoft.Maui.Controls.MultiTrigger" /><altmember cref="T:Microsoft.Maui.Controls.PropertyCondition" />
        </member>
        <member name="M:Microsoft.Maui.Controls.BindingCondition.#ctor">
            <summary>Initializes a new <see cref="T:Microsoft.Maui.Controls.BindingCondition" /> instance.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.BindingCondition.Binding">
            <summary>Gets or sets the binding against which the <see cref="P:Microsoft.Maui.Controls.BindingCondition.Value" /> property will be compared.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.BindingCondition.Value">
            <summary>The binding value that satisfies the condition.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Condition">
            <summary>Base class for conditions.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.DataTrigger">
            <summary>Class that represents a condition on an arbitrary binding, along with a list of <see cref="T:Microsoft.Maui.Controls.Setter" /> objects that will be applied when the condition is met.</summary><remarks>
      <para>The <see cref="T:Microsoft.Maui.Controls.DataTrigger" /> class is suitable for checking values on other controls, as well as any property on the control to which it has been added. That is, its default binding context is the control to which it has been added.</para>
      <example>
        <para>The XML example below prompts the user to type in the secret, which is, "The text color is green". When the user has typed "The", the Entry text changes color to red. When the user completes the secret, the Label text turns green. The code is turned back to the default color if the user then edits the secret. This example shows how to bind to the enclosing control (Entry from Entry), and to an arbitary control (Entry from Label)</para>
        <code lang="XML"><![CDATA[
              <?xml version="1.0" encoding="utf-8"?>
              <ContentPage    xmlns="http://xamarin.com/schemas/2014/forms"
                              xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                              xmlns:local="clr-namespace:TriggerDemo"
                              x:Class="TriggerDemo.TriggerDemoPage">
                  <StackLayout VerticalOptions="Center">
                      <Label Text="Can you tell me the secret?" VerticalOptions="Center" HorizontalOptions="Center">
                          <Label.Triggers>
                              <DataTrigger TargetType="Label"
                                  Binding="{Binding Source={x:Reference checkEntry},
                                                    Path=Text}"
                                  Value="The text color is green">
                                  <Setter Property="TextColor" Value="Color.Green" />
                              </DataTrigger>
                          </Label.Triggers>
                      </Label>
                      <Entry Placeholder="Type the secret here." x:Name="checkEntry" VerticalOptions="Center" HorizontalOptions="Center">
                          <Entry.Triggers>
                              <DataTrigger TargetType="Entry"
                                  Binding="{Binding Text}"
                                  Value="The">
                                  <Setter Property="TextColor" Value="Red" />
                              </DataTrigger>
                          </Entry.Triggers>
                      </Entry>
                  </StackLayout>
              </ContentPage>
]]></code>
      </example>
    </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.DataTrigger.#ctor(System.Type)">
            <param name="targetType">The type of the object on which the data trigger will be added.</param><summary>Initializes a new <see cref="T:Microsoft.Maui.Controls.DataTrigger" /> instance.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DataTrigger.Binding">
            <summary>Gets or sets the binding whose value will be compared to <see cref="P:Microsoft.Maui.Controls.DataTrigger.Value" /> to determine when to invoke the setters.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DataTrigger.Setters">
            <summary>Gets the list of <see cref="T:Microsoft.Maui.Controls.Setter" /> objects that will be applied when the binding that is named by the  <see cref="P:Microsoft.Maui.Controls.DataTrigger.Binding" /> property becomes equal to <see cref="P:Microsoft.Maui.Controls.DataTrigger.Value" />.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.DataTrigger.Value">
            <summary>Gets or sets the value of the binding, named by the <see cref="P:Microsoft.Maui.Controls.DataTrigger.Binding" /> property, that will cause the setters to be applied.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.EventTrigger">
            <summary>Class that represents a triggering event and a list of <see cref="T:Microsoft.Maui.Controls.TriggerAction" /> objects that will be invoked when the event is raised.</summary><remarks>
      <example>
        <para>The example below shows how developers can use an event trigger to respond to events and update the value of a control property.</para>
        <para>With the <c>ColorTriggerAction</c> class below defined in the <c>TriggerDemo</c> namespace:</para>
        <code lang="csharp lang-csharp"><![CDATA[public class ColorTriggerAction : TriggerAction<Entry>
{
  protected override void Invoke(Entry sender)
  {
      Color[] color ={ Color.Red,
                       Color.Orange,
                       Color.Yellow,
                       Color.Green,
                       Color.Blue,
                       Color.Indigo,
                       Color.Violet };
      sender.TextColor = color[sender.Text.Length % color.Length];
  }
}]]></code>
        <para>the developer can use the XAML below to create a page that cycles the colors of a <see cref="T:Microsoft.Maui.Controls.Entry" /> text area through the colors of the rainbow as the user enters text.</para>
        <code lang="XAML"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<ContentPage    xmlns="http://xamarin.com/schemas/2014/forms"
              xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
              xmlns:local="clr-namespace:TriggerDemo"
              x:Class="TriggerDemo.TriggerDemoPage">
  <StackLayout VerticalOptions="Center">
      <Label Text="Do you see colors?"
             VerticalOptions="Center"
             HorizontalOptions="Center" />
      <Entry Placeholder="Type stuff here."
             VerticalOptions="Center"
             HorizontalOptions="Center"
             BackgroundColor="Black">
          <Entry.Triggers>
              <EventTrigger Event="TextChanged" >
                  <local:ColorTriggerAction />
              </EventTrigger>
          </Entry.Triggers>
      </Entry>
  </StackLayout>
</ContentPage>]]></code>
      </example>
    </remarks><altmember cref="T:Microsoft.Maui.Controls.Setter" /><altmember cref="T:Microsoft.Maui.Controls.PropertyCondition" /><altmember cref="T:Microsoft.Maui.Controls.DataTrigger" /><altmember cref="T:Microsoft.Maui.Controls.Trigger" />
        </member>
        <member name="M:Microsoft.Maui.Controls.EventTrigger.#ctor">
            <summary>Creates a new <see cref="T:Microsoft.Maui.Controls.EventTrigger" /> instance.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.EventTrigger.Actions">
            <summary>Gets the list of <see cref="T:Microsoft.Maui.Controls.TriggerAction" /> objects that will be invoked when the event that is identified by the <see cref="P:Microsoft.Maui.Controls.EventTrigger.Event" /> property is raised.</summary><value>
        </value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.EventTrigger.Event">
            <summary>Gets or sets the name of the event that will cause the actions that are contained in the <see cref="P:Microsoft.Maui.Controls.EventTrigger.Actions" /> to be invoked.</summary><value>
        </value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.MultiTrigger">
            <summary>Class that represents a list of property and binding conditions, and a list of setters that are applied when all of the conditions in the list are met.</summary><remarks>
      <para>Developers can use a <see cref="T:Microsoft.Maui.Controls.MultiTrigger" /> to compare against property values on the control that contains it by using <see cref="T:Microsoft.Maui.Controls.Trigger" /> objects, or on any bound property (including those on the enclosing control) by using <see cref="T:Microsoft.Maui.Controls.BindingCondition" /> objects. These can be mixed in the same <see cref="P:Microsoft.Maui.Controls.MultiTrigger.Conditions" /> list.</para>
      <example>
        <para>The XML example below, when added to a Microsoft.Maui.Controls app with the correct project namespace, creates a UI that suggests that the user type in a secret and toggle a switch to check if the secret is correct. If the user enters "The text color is green", and toggles the <see cref="T:Microsoft.Maui.Controls.Switch" /> to its <c>On</c> position, then the text that the user typed into the <see cref="T:Microsoft.Maui.Controls.Entry" /> turns green. If either the text is altered to something other than the secret or the Switch is toggled to its <c>Off</c> position, the text returns to the default color</para>
        <code lang="XML"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:local="clr-namespace:PropertyConditionDemo"
             x:Class="PropertyConditionDemo.PropertyConditionDemoPage">
    <StackLayout VerticalOptions="Center">
        <Label Text="Do you know the secret?"
               VerticalOptions="Center"
               HorizontalOptions="Center" />
        <Entry Placeholder="Type the secret!"
               VerticalOptions="Center"
               HorizontalOptions="Center">
            <Entry.Triggers>
                <MultiTrigger TargetType="Entry" >
                    <MultiTrigger.Conditions>
                        <PropertyCondition Property="Text" Value="The text color is green" />
                        <BindingCondition Binding="{Binding Source={x:Reference checkSecret},
                                                            Path=IsToggled}"
                                          Value="true" />
                    </MultiTrigger.Conditions>
                    <Setter Property="TextColor"
                        Value="Color.Green" />
                </MultiTrigger>
            </Entry.Triggers>
        </Entry>
        <Label Text="Check the secret?"
               VerticalOptions="Center"
               HorizontalOptions="Center" />
        <Switch x:Name="checkSecret"
                VerticalOptions="Center"
                HorizontalOptions="Center" />
    </StackLayout>
</ContentPage>]]></code>
      </example>
    </remarks><altmember cref="T:Microsoft.Maui.Controls.PropertyCondition" /><altmember cref="T:Microsoft.Maui.Controls.BindingCondition" />
        </member>
        <member name="M:Microsoft.Maui.Controls.MultiTrigger.#ctor(System.Type)">
            <param name="targetType">The type of the trigger target.</param><summary>Initializes a new <see cref="T:Microsoft.Maui.Controls.MultiTrigger" /> instance.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.MultiTrigger.Conditions">
            <summary>Gets the list of conditions that must be satisfied in ordeer for the setters in the <see cref="P:Microsoft.Maui.Controls.MultiTrigger.Setters" /> list to be invoked.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.MultiTrigger.Setters">
            <summary>Gets the list of <see cref="T:Microsoft.Maui.Controls.Setter" /> objects that will be applied when the list of conditions in the <see cref="P:Microsoft.Maui.Controls.MultiTrigger.Conditions" /> property are all met.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformBehavior`2">
            <summary>
            Base class for generalized user-defined behaviors that can respond to arbitrary conditions and events when connected to the platform view hierarchy.
            </summary>
            <typeparam name="TView">Virtual View</typeparam>
            <typeparam name="TPlatformView">Platform View</typeparam>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformBehavior`2.OnAttachedTo(Microsoft.Maui.Controls.BindableObject)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformBehavior`2.OnDetachingFrom(Microsoft.Maui.Controls.BindableObject)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformBehavior`2.OnAttachedTo(`0)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformBehavior`2.OnDetachingFrom(`0)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformBehavior`2.OnAttachedTo(`0,`1)">
            <summary>
            This method is called when the bindable is attached to the platform view hierarchy. 
            </summary>
            <param name="bindable">The bindable object to which the behavior was attached.</param>
            <param name="platformView">The platform control connected to the bindable object.</param>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformBehavior`2.OnDetachedFrom(`0,`1)">
            <summary>
            This method is called when the bindable is detached from the platform view hierarchy. 
            </summary>
            <param name="bindable">The bindable object to which the behavior was attached.</param>
            <param name="platformView">The platform control connected to the bindable object.</param>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformBehavior`1">
            <summary>
            Base class for generalized user-defined behaviors that can respond to arbitrary conditions and events when connected to the platform view hierarchy.
            </summary>
            <typeparam name="TView">Virtual View</typeparam>
        </member>
        <member name="T:Microsoft.Maui.Controls.PropertyCondition">
            <summary>Class that represents a value comparison against a property on the control that contains the enclosing <see cref="T:Microsoft.Maui.Controls.MultiTrigger" />.</summary><remarks>
      <para>The <see cref="T:Microsoft.Maui.Controls.PropertyCondition" /> class is suitable for checking property values on the control that contains the <see cref="T:Microsoft.Maui.Controls.MultiTrigger" /> that contains it. To check values on other controls, developers can use the <see cref="T:Microsoft.Maui.Controls.BindingCondition" /> class, in addition to any property conditions in the trigger list.</para>
      <example>
        <para>The XML example below creates a property condition within a surrounding <see cref="T:Microsoft.Maui.Controls.MultiTrigger" /> within a <see cref="T:Microsoft.Maui.Controls.TextCell" /> that turns the text green when the secret is typed. The code is turned back to the default color if the user then edits the secret. (Typically, a <see cref="T:Microsoft.Maui.Controls.MultiTrigger" /> would have more than one condition; this example is simplified for clarity.)</para>
        <code lang="XML"><![CDATA[
<Entry Placeholder="Type the secret!"
       VerticalOptions="Center"
       HorizontalOptions="Center">
      <Entry.Triggers>
          <MultiTrigger TargetType="Entry" >
              <MultiTrigger.Conditions>
                  <PropertyCondition Property="Text"
                                     Value="The text color is green" />
              </MultiTrigger.Conditions>
              <Setter Property="TextColor"
                  Value="Color.Green" />
          </MultiTrigger>
      </Entry.Triggers>
</Entry>]]></code>
      </example>
    </remarks><altmember cref="T:Microsoft.Maui.Controls.MultiTrigger" /><altmember cref="T:Microsoft.Maui.Controls.BindingCondition" />
        </member>
        <member name="M:Microsoft.Maui.Controls.PropertyCondition.#ctor">
            <summary>Initializes a new <see cref="T:Microsoft.Maui.Controls.PropertyCondition" /> instance.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.PropertyCondition.Property">
            <summary>Gets or sets the property against which the <see cref="P:Microsoft.Maui.Controls.PropertyCondition.Value" /> property will be compared.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.PropertyCondition.Value">
            <summary>The binding value that satisfies the condition.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Trigger">
            <summary>Class that represents a property condition and an action that is performed when the condition is met.</summary><remarks>
      <para>The <see cref="T:Microsoft.Maui.Controls.Trigger" /> class is suitable for checking the values of any property on the control to which it has been added. That is, its default binding context is the control to which it has been added. To bind on controls other than the parent, developers should use the <see cref="T:Microsoft.Maui.Controls.DataTrigger" /> class, instead.</para>
      <example>
        <para>The XML example below prompts the user to type in the secret, which is, "The text color is red". When the user has typed the secret, the Entry text changes color to red. The code is turned back to the default color if the user then edits the text to differ from the secret. This example shows how to bind to the enclosing control with a trigger.</para>
        <code lang="XML"><![CDATA[
    
<?xml version="1.0" encoding="utf-8"?>
<ContentPage    xmlns="http://xamarin.com/schemas/2014/forms"
                xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                xmlns:local="clr-namespace:TriggerDemo"
                x:Class="TriggerDemo.TriggerDemoPage">
    <StackLayout VerticalOptions="Center">
        <Label Text="Tell me the secret"
               VerticalOptions="Center"
               HorizontalOptions="Center" />
        <Entry Placeholder="Type the secret here."
               VerticalOptions="Center"
               HorizontalOptions="Center">
            <Entry.Triggers>
                <Trigger TargetType="Entry"
                    Property="Text"
                    Value="The text color is red">
                    <Setter Property="TextColor" Value="Red" />
                </Trigger>
            </Entry.Triggers>
        </Entry>
    </StackLayout>
</ContentPage>
    
]]></code>
      </example>
      <example>
        <para>The example below shows how developers can use a trigger to respond to events and update the value of a control property by using <see cref="T:Microsoft.Maui.Controls.TriggerAction`1" /> classes. The example prompts the user to answer a question about the color of the text, and then calls <c>ColorTriggerAction</c> to turn the text red when the user types "The text color is red". Developers should note that, while this example does not change the text back to the default color when the user continues to edit the string, the developer could additionally implement and specify an exit action to obtain that result.</para>
        <para>With the ColorTriggerAction class below defined in the <c>TriggerDemo</c> namespace:</para>
        <code lang="csharp lang-csharp"><![CDATA[public class ColorTriggerAction : TriggerAction<Entry>
{
    protected override void Invoke(Entry sender)
    {
        sender.TextColor = Color.Red;
    }
}]]></code>
        <para>the developer can use the XAML below to create the page that responds to the secret string by changing the color of the <see cref="T:Microsoft.Maui.Controls.Entry" /> text area to red.</para>
        <code lang="XAML"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<ContentPage    xmlns="http://xamarin.com/schemas/2014/forms"
                xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                xmlns:local="clr-namespace:TriggerDemo"
                x:Class="TriggerDemo.TriggerDemoPage">
    <StackLayout VerticalOptions="Center">
        <Label Text="What color is &quot;The text&quot;?"
               VerticalOptions="Center"
               HorizontalOptions="Center" />
        <Entry Placeholder="Type answer here."
               VerticalOptions="Center"
               HorizontalOptions="Center"
               BackgroundColor="White">
            <Entry.Triggers>
                <Trigger TargetType="Entry"
                         Property="Text"
                         Value="The text is red" >
                    <Trigger.EnterActions>
                        <local:ColorTriggerAction />
                    </Trigger.EnterActions>
                </Trigger>
            </Entry.Triggers>
        </Entry>
    </StackLayout>
</ContentPage>
]]></code>
      </example>
    </remarks><altmember cref="T:Microsoft.Maui.Controls.Setter" /><altmember cref="T:Microsoft.Maui.Controls.PropertyCondition" /><altmember cref="T:Microsoft.Maui.Controls.DataTrigger" /><altmember cref="T:Microsoft.Maui.Controls.TriggerAction`1" />
        </member>
        <member name="M:Microsoft.Maui.Controls.Trigger.#ctor(System.Type)">
            <param name="targetType">The view type to which the trigger will be added.</param><summary>Initializes a new <see cref="T:Microsoft.Maui.Controls.Trigger" /> instance.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Trigger.Property">
            <summary>Gets or sets the property whose value will be compared to <see cref="P:Microsoft.Maui.Controls.Trigger.Value" /> to determine when to invoke the setters.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Trigger.Setters">
            <summary>Gets the list of <see cref="T:Microsoft.Maui.Controls.Setter" /> objects that will be applied when the property that is named by <see cref="P:Microsoft.Maui.Controls.Trigger.Property" /> becomes equal to <see cref="P:Microsoft.Maui.Controls.Trigger.Value" />.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Trigger.Value">
            <summary>Gets or sets the value of the property, named by the <see cref="P:Microsoft.Maui.Controls.Trigger.Property" /> property, that will cause the setters to be applied.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.TriggerAction`1">
            <summary>A base class for user-defined actions that are performed when a trigger condition is met.</summary><remarks>Application developers should use <see cref="T:Microsoft.Maui.Controls.TriggerAction`1" />, instead.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.TriggerBase">
            <summary>Base class for classes that contain a condition and a list of actions to perform when the condition is met.</summary><remarks>
    </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TriggerBase.EnterActions">
            <summary>Gets the list of <see cref="T:Microsoft.Maui.Controls.TriggerAction" /> objects that will be invoked when the trigger condition is met. Ignored for the <see cref="T:Microsoft.Maui.Controls.EventTrigger" /> class.</summary><value>
        </value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TriggerBase.ExitActions">
            <summary>Gets the list of <see cref="T:Microsoft.Maui.Controls.TriggerAction" /> objects that will be invoked after the trigger condition is no longer met. Ignored for the <see cref="T:Microsoft.Maui.Controls.EventTrigger" /> class.</summary><value>
        </value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TriggerBase.IsSealed">
            <summary>Gets a value that indicates whether or not the trigger is sealed.</summary><value>To be added.</value><remarks>A trigger becomes sealed when its `IAttachedObject.AttachTo(Microsoft.Maui.Controls.BindableObject)` method is called. Once it is sealed, its <see cref="P:Microsoft.Maui.Controls.TriggerBase.EnterActions" /> and <see cref="P:Microsoft.Maui.Controls.TriggerBase.ExitActions" /> lists become readonly.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TriggerBase.TargetType">
            <summary>The type of object to which this <see cref="T:Microsoft.Maui.Controls.TriggerBase" /> object can be attached.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.InvalidNavigationException">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.InvalidNavigationException.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.InvalidNavigationException.#ctor(System.String)">
            <param name="message">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.InvalidNavigationException.#ctor(System.String,System.Exception)">
            <param name="message">To be added.</param><param name="innerException">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.CarouselLayoutTypeConverter">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.CarouselView">
            <summary>A <see cref="T:Microsoft.Maui.Controls.ItemsView" /> whose scrollable child views 'snap' into place.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.CarouselView.CurrentItemVisualState">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.CarouselView.NextItemVisualState">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.CarouselView.PreviousItemVisualState">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.CarouselView.DefaultItemVisualState">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.CarouselView.LoopProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.CarouselView.Loop">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.CarouselView.PeekAreaInsetsProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.CarouselView.PeekAreaInsets">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.CarouselView.VisibleViewsProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.CarouselView.VisibleViews">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.CarouselView.IsDraggingProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.CarouselView.IsDragging">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.CarouselView.IsBounceEnabledProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.CarouselView.IsBounceEnabled">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.CarouselView.IsSwipeEnabledProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.CarouselView.IsSwipeEnabled">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.CarouselView.IsScrollAnimatedProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.CarouselView.IsScrollAnimated">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.CarouselView.CurrentItemProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.CarouselView.CurrentItemChangedCommandProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.CarouselView.CurrentItemChangedCommandParameterProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.CarouselView.CurrentItem">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.CarouselView.CurrentItemChangedCommand">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.CarouselView.CurrentItemChangedCommandParameter">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.CarouselView.PositionProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.CarouselView.PositionChangedCommandProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.CarouselView.PositionChangedCommandParameterProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.CarouselView.Position">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.CarouselView.PositionChangedCommand">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.CarouselView.PositionChangedCommandParameter">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.CarouselView.ItemsLayoutProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.CarouselView.ItemsLayout">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.CarouselView.IndicatorView">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.CarouselView.IsScrolling">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.CarouselView.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.CarouselView.SetIsDragging(System.Boolean)">
            <param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.CarouselView.AnimatePositionChanges">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.CarouselView.AnimateCurrentItemChanges">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.CollectionView">
            <summary>A <see cref="T:Microsoft.Maui.Controls.SelectableItemsView" /> that presents a collection of items.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.CurrentItemChangedEventArgs">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.CurrentItemChangedEventArgs.PreviousItem">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.CurrentItemChangedEventArgs.CurrentItem">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.GridItemsLayout">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.GridItemsLayout.SpanProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.GridItemsLayout.Span" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.GridItemsLayout.Span">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.GridItemsLayout.#ctor(Microsoft.Maui.Controls.ItemsLayoutOrientation)">
            <param name="orientation">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.GridItemsLayout.#ctor(System.Int32,Microsoft.Maui.Controls.ItemsLayoutOrientation)">
            <param name="span">To be added.</param><param name="orientation">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.GridItemsLayout.VerticalItemSpacingProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.GridItemsLayout.VerticalItemSpacing">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.GridItemsLayout.HorizontalItemSpacingProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.GridItemsLayout.HorizontalItemSpacing">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.GroupableItemsView">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.GroupableItemsView.IsGroupedProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.GroupableItemsView.IsGrouped">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.GroupableItemsView.GroupHeaderTemplateProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.GroupableItemsView.GroupHeaderTemplate">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.GroupableItemsView.GroupFooterTemplateProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.GroupableItemsView.GroupFooterTemplate">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ItemSizingStrategy">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ItemSizingStrategy.MeasureAllItems">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.ItemSizingStrategy.MeasureFirstItem">
            <summary>To be added.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.ItemsLayout">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ItemsLayout.Orientation">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ItemsLayout.SnapPointsAlignmentProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.ItemsLayout.SnapPointsAlignment" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ItemsLayout.SnapPointsAlignment">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ItemsLayout.SnapPointsTypeProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.ItemsLayout.SnapPointsType" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ItemsLayout.SnapPointsType">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ItemsLayoutOrientation">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ItemsLayoutOrientation.Vertical">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.ItemsLayoutOrientation.Horizontal">
            <summary>To be added.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.ItemsLayoutTypeConverter">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ItemsUpdatingScrollMode">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ItemsUpdatingScrollMode.KeepItemsInView">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.ItemsUpdatingScrollMode.KeepScrollOffset">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.ItemsUpdatingScrollMode.KeepLastItemInView">
            <summary>To be added.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.ItemsView">
            <summary>A <see cref="T:Microsoft.Maui.Controls.View" /> that serves as a base class for views that contain a templated list of items.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ItemsView.EmptyViewProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.ItemsView.EmptyView" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ItemsView.EmptyView">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ItemsView.EmptyViewTemplateProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.ItemsView.EmptyViewTemplate" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ItemsView.EmptyViewTemplate">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ItemsView.ItemsSourceProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.ItemsView.ItemsSource" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ItemsView.ItemsSource">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ItemsView.RemainingItemsThresholdReachedCommandProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ItemsView.RemainingItemsThresholdReachedCommand">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ItemsView.RemainingItemsThresholdReachedCommandParameterProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ItemsView.RemainingItemsThresholdReachedCommandParameter">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ItemsView.HorizontalScrollBarVisibilityProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ItemsView.HorizontalScrollBarVisibility">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ItemsView.VerticalScrollBarVisibilityProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ItemsView.VerticalScrollBarVisibility">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ItemsView.RemainingItemsThresholdProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ItemsView.RemainingItemsThreshold">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ItemsView.AddLogicalChild(Microsoft.Maui.Controls.Element)">
            <param name="element">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ItemsView.RemoveLogicalChild(Microsoft.Maui.Controls.Element)">
            <param name="element">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ItemsView.ItemTemplateProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.ItemsView.ItemTemplate" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ItemsView.ItemTemplate">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ItemsView.ItemsUpdatingScrollModeProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ItemsView.ItemsUpdatingScrollMode">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ItemsView.ScrollTo(System.Int32,System.Int32,Microsoft.Maui.Controls.ScrollToPosition,System.Boolean)">
            <param name="index">To be added.</param><param name="groupIndex">To be added.</param><param name="position">To be added.</param><param name="animate">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ItemsView.ScrollTo(System.Object,System.Object,Microsoft.Maui.Controls.ScrollToPosition,System.Boolean)">
            <param name="item">To be added.</param><param name="group">To be added.</param><param name="position">To be added.</param><param name="animate">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ItemsView.SendRemainingItemsThresholdReached">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ItemsView.SendScrolled(Microsoft.Maui.Controls.ItemsViewScrolledEventArgs)">
            <param name="e">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ItemsViewScrolledEventArgs">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ItemsViewScrolledEventArgs.HorizontalDelta">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ItemsViewScrolledEventArgs.VerticalDelta">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ItemsViewScrolledEventArgs.HorizontalOffset">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ItemsViewScrolledEventArgs.VerticalOffset">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ItemsViewScrolledEventArgs.FirstVisibleItemIndex">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ItemsViewScrolledEventArgs.CenterItemIndex">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ItemsViewScrolledEventArgs.LastVisibleItemIndex">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.LinearItemsLayout">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.LinearItemsLayout.#ctor(Microsoft.Maui.Controls.ItemsLayoutOrientation)">
            <param name="orientation">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.LinearItemsLayout.Vertical">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.LinearItemsLayout.Horizontal">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.LinearItemsLayout.CarouselVertical">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.LinearItemsLayout.ItemSpacingProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.LinearItemsLayout.ItemSpacing">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.MarshalingObservableCollection">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.MarshalingObservableCollection.#ctor(System.Collections.IList)">
            <param name="list">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PositionChangedEventArgs">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.PositionChangedEventArgs.PreviousPosition">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.PositionChangedEventArgs.CurrentPosition">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ScrollToRequestEventArgs">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ScrollToRequestEventArgs.Mode">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ScrollToRequestEventArgs.ScrollToPosition">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ScrollToRequestEventArgs.IsAnimated">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ScrollToRequestEventArgs.Index">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ScrollToRequestEventArgs.GroupIndex">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ScrollToRequestEventArgs.Item">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ScrollToRequestEventArgs.Group">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ScrollToRequestEventArgs.#ctor(System.Int32,System.Int32,Microsoft.Maui.Controls.ScrollToPosition,System.Boolean)">
            <param name="index">To be added.</param><param name="groupIndex">To be added.</param><param name="scrollToPosition">To be added.</param><param name="isAnimated">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ScrollToRequestEventArgs.#ctor(System.Object,System.Object,Microsoft.Maui.Controls.ScrollToPosition,System.Boolean)">
            <param name="item">To be added.</param><param name="group">To be added.</param><param name="scrollToPosition">To be added.</param><param name="isAnimated">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.SelectableItemsView">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SelectableItemsView.SelectionModeProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.SelectableItemsView.SelectionMode" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SelectableItemsView.SelectedItemProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.SelectableItemsView.SelectedItem" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SelectableItemsView.SelectedItemsProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.SelectableItemsView.SelectedItems" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SelectableItemsView.SelectionChangedCommandProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.SelectableItemsView.SelectionChangedCommand" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SelectableItemsView.SelectionChangedCommandParameterProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.SelectableItemsView.SelectionChangedCommandParameter" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SelectableItemsView.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SelectableItemsView.SelectedItem">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SelectableItemsView.SelectedItems">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SelectableItemsView.SelectionChangedCommand">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SelectableItemsView.SelectionChangedCommandParameter">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SelectableItemsView.SelectionMode">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SelectableItemsView.UpdateSelectedItems(System.Collections.Generic.IList{System.Object})">
            <param name="newSelection">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.SelectionChangedEventArgs">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SelectionChangedEventArgs.PreviousSelection">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SelectionChangedEventArgs.CurrentSelection">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.SelectionMode">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SelectionMode.None">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.SelectionMode.Single">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.SelectionMode.Multiple">
            <summary>To be added.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.SnapPointsAlignment">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SnapPointsAlignment.Start">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.SnapPointsAlignment.Center">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.SnapPointsAlignment.End">
            <summary>To be added.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.SnapPointsType">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SnapPointsType.None">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.SnapPointsType.Mandatory">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.SnapPointsType.MandatorySingle">
            <summary>To be added.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.StructuredItemsView">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.StructuredItemsView.HeaderProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.StructuredItemsView.Header">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.StructuredItemsView.HeaderTemplateProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.StructuredItemsView.HeaderTemplate">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.StructuredItemsView.FooterProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.StructuredItemsView.Footer">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.StructuredItemsView.FooterTemplateProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.StructuredItemsView.FooterTemplate">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.StructuredItemsView.ItemsLayoutProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.StructuredItemsView.ItemsLayout">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.StructuredItemsView.ItemSizingStrategyProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.StructuredItemsView.ItemSizingStrategy">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ItemsView`1">
            <summary>A <see cref="T:Microsoft.Maui.Controls.View" /> that serves as a base class for views that contain a templated list of items.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ItemsView`1.ItemsSourceProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.ItemsView.ItemsSource" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ItemsView`1.ItemTemplateProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.ItemsView.ItemTemplate" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ItemsView`1.ItemsSource">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ItemsView`1.ItemTemplate">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ItemTappedEventArgs">
            <summary>Event arguments for the <see cref="E:Microsoft.Maui.Controls.ListView.ItemTapped" /> event.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ItemTappedEventArgs.#ctor(System.Object,System.Object,System.Int32)">
            <param name="group">To be added.</param><param name="item">To be added.</param><param name="itemIndex">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ItemTappedEventArgs.Group">
            <summary>The collection of elements to which the tapped item belongs.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ItemTappedEventArgs.Item">
            <summary>The visual element that the user tapped.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ItemTappedEventArgs.ItemIndex">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ItemVisibilityEventArgs">
            <summary>Event args when an item's visibility has been changed in a <see cref="T:Microsoft.Maui.Controls.ListView" />.</summary><remarks>
    </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ItemVisibilityEventArgs.#ctor(System.Object,System.Int32)">
            <param name="item">To be added.</param><param name="itemIndex">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ItemVisibilityEventArgs.Item">
            <summary>The item from the <see cref="P:Microsoft.Maui.Controls.ItemsView`1.ItemsSource" /> whose visibility has changed.</summary><value>An object.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ItemVisibilityEventArgs.ItemIndex">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.AbsoluteLayout">
            <summary>Positions child elements at absolute positions.</summary><remarks>
      <para>Application developers can control the placement of child elements by providing proportional coordinates, device coordinates, or a combination of both, depending on the <see cref="T:Microsoft.Maui.Layouts.AbsoluteLayoutFlags" /> values that are passed to <see cref="M:Microsoft.Maui.Controls.AbsoluteLayout.SetLayoutFlags(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Layouts.AbsoluteLayoutFlags)" /> method. When one of the proportional <see cref="T:Microsoft.Maui.Layouts.AbsoluteLayoutFlags" /> enumeration values is provided, the corresponding X, or Y arguments that range between 0.0 and 1.0 will always cause the child to be displayed completely on screen. That is, you do not need to subtract or add the height or width of a child in order to display it flush with the left, right, top, or bottom of the <see cref="T:Microsoft.Maui.Controls.AbsoluteLayout" />. For width, height, X, or Y values that are not specified proportionally, application developers use device-dependent units to locate and size the child element.</para>
      <example>
        <para>The following example shows how to use an <see cref="T:Microsoft.Maui.Controls.AbsoluteLayout" /> with proportional position arguments.</para>
        <code lang="csharp lang-csharp"><![CDATA[
    
    Label header = new Label
    {
        Text = "AbsoluteLayout Demo",
        FontSize = Device.GetNamedSize(NamedSize.Large, typeof(Label)),
        HorizontalOptions = LayoutOptions.Center
    };
    
    AbsoluteLayout simpleLayout = new AbsoluteLayout
    {
        BackgroundColor = Color.Blue.WithLuminosity(0.9),
        VerticalOptions = LayoutOptions.FillAndExpand
    };
    
    topLeftLabel = new Label
    {
        Text = "Top Left",
        TextColor = Color.Black
    };
    
    centerLabel = new Label
    {
        Text = "Centered",
        TextColor = Color.Black
    };
    
    bottomRightLabel = new Label
    {
        Text = "Bottom Right",
        TextColor = Color.Black
    };
    
    // PositionProportional flag maps the range (0.0, 1.0) to
    // the range "flush [left|top]" to "flush [right|bottom]"
    AbsoluteLayout.SetLayoutFlags(bottomRightLabel,
        AbsoluteLayoutFlags.PositionProportional);
    
    AbsoluteLayout.SetLayoutBounds(topLeftLabel,
        new Rectangle(0f,
            0f, AbsoluteLayout.AutoSize, AbsoluteLayout.AutoSize));
    
    AbsoluteLayout.SetLayoutFlags(centerLabel,
        AbsoluteLayoutFlags.PositionProportional);
    
    AbsoluteLayout.SetLayoutBounds(centerLabel,
        new Rectangle(0.5,
            0.5, AbsoluteLayout.AutoSize, AbsoluteLayout.AutoSize));
    
    AbsoluteLayout.SetLayoutFlags(bottomRightLabel,
        AbsoluteLayoutFlags.PositionProportional);
    
    AbsoluteLayout.SetLayoutBounds(bottomRightLabel,
        new Rectangle(1f,
            1f, AbsoluteLayout.AutoSize, AbsoluteLayout.AutoSize));
    
    simpleLayout.Children.Add(topLeftLabel);
    simpleLayout.Children.Add(centerLabel);
    simpleLayout.Children.Add(bottomRightLabel);
    ]]></code>
        <para>The code sample below shows how to place two labels by specifying device-dependent units.</para>
        <code lang="csharp lang-csharp"><![CDATA[
    
    AbsoluteLayout simpleLayout = new AbsoluteLayout
    {
    
        BackgroundColor = Color.Blue.WithLuminosity(0.9),
        VerticalOptions = LayoutOptions.FillAndExpand
    };
    
    Label header = new Label
    {
        Text = "Device Units Demo",
        TextColor = Color.Black,
        FontSize = Device.GetNamedSize(NamedSize.Large, typeof(Label))
    };
    
    topLeftText = new Label
    {
        Text = "Left",
        TextColor = Color.Black
    };
    
    AbsoluteLayout.SetLayoutFlags(topLeftText,
        AbsoluteLayoutFlags.None);
    
    AbsoluteLayout.SetLayoutBounds(topLeftText,
        new Rectangle(0f, 0f, 100f, 50f));
    
    middleText = new Label
    {
        Text = "Device-dependent location",
        TextColor = Color.Black
    };
    
    AbsoluteLayout.SetLayoutFlags(middleText,
        AbsoluteLayoutFlags.None);
    
    AbsoluteLayout.SetLayoutBounds(middleText,
        new Rectangle(100f, 200f, 200f, 50f));
    
    simpleLayout.Children.Add(topLeftText);
    simpleLayout.Children.Add(middleText);
    
    }]]></code>
      </example>
      <para>The following image shows the AbsoluteLayout demo from the <format type="text/html"><a href="https://developer.xamarin.com/samples/tag/Microsoft.Maui.Controls/" target="_blank">FormsGallery</a></format> sample.
    </para>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/AbsoluteLayout.TripleScreenShot.png" />
      </para>
      <example>
        <para>XAML for Microsoft.Maui.Controls supports the following attached properties for the <see cref="T:Microsoft.Maui.Controls.AbsoluteLayout" /> class:</para>
        <list type="table">
          <listheader>
            <term>Attached Property</term>
            <description>Value</description>
          </listheader>
          <item>
            <term>AbsoluteLayout.LayoutBounds</term>
            <description>
              <para>A comma-separated list—possibly with spaces—of four values that specify the bounding rectangle's position and dimensions. The first two values in the list must represent numbers. The latter two values may each either be numbers, or the string "AutoSize". The <c>AbsoluteLayout.LayoutFlags</c> attached property determines how the values in the list are interpreted to create the bounding rectangle.</para>
            </description>
          </item>
          <item>
            <term>AbsoluteLayout.LayoutFlags</term>
            <description>
              <para>
                <see cref="T:Microsoft.Maui.Layouts.AbsoluteLayoutFlags" /> enumeration value names: <c>All</c>, <c>None</c>, <c>HeightProportional</c>, <c>WidthProportional</c>, <c>SizeProportional</c>, <c>XProportional</c>, <c>YProportional</c>, or <c>PositionProportional</c>. Application developers can combine any of these flags together by supplying a comma-separated list. </para>
            </description>
          </item>
        </list>
        <para>Application developers can use XAML to lay out elements with the <see cref="T:Microsoft.Maui.Controls.AbsoluteLayout" /> class. The example below places a blue <see cref="T:Microsoft.Maui.Controls.BoxView" /> inside an <see cref="T:Microsoft.Maui.Controls.AbsoluteLayout" />: </para>
        <code lang="XAML"><![CDATA[<AbsoluteLayout VerticalOptions="FillAndExpand"
                    HorizontalOptions="FillAndExpand">
        <BoxView    AbsoluteLayout.LayoutBounds="0.25, 0.25, 0.5, 0.5"
                    Color="Blue"
                    AbsoluteLayout.LayoutFlags="All" />
    </AbsoluteLayout>
    ]]></code>
      </example>
      <para>The <see cref="T:Microsoft.Maui.Controls.AbsoluteLayout" /> class can lay its child elements out in proportional units, device units, or a combination of both. Application developers should remember the following points when specifying a <see cref="T:Microsoft.Maui.Controls.Shapes.Rectangle" /> structure that will define the layout bounds of a child element:
            <list type="bullet"><item><term>For elements whose height and width fit on the screen, proportional position dimensions in the range [0,1] represent elements that are completely on the screen, regardless of whether the height, width, or both are specified in device or proportional units.</term></item><item><term>The above point means that, to specify an element in the lower right hand corner of the screen and that is half as wide and half as all as the screen, with a  <see cref="T:Microsoft.Maui.Layouts.AbsoluteLayoutFlags" /> value of <c>All</c>, the application developer would specify "1.0, 1.0, 0.5, 0.5".</term></item><item><term>The app developer can inadvertently cause child elements for which one or both size dimensions were specified proportionally to be displayed partially off the screen, or hidden altogether, by specifying device-unit positions that do not leave enough room for the calculated size of the child.</term></item><item><term>Each part of the bounding <see cref="T:Microsoft.Maui.Controls.Shapes.Rectangle" /> structure is interpreted according to the <see cref="T:Microsoft.Maui.Layouts.AbsoluteLayoutFlags" /> value that controls it. A given rectangle might, for example, have an X-coordinate that is in device units, a Y-coordinate that is in proportional units, a height that is in proportional units, and a width that is in device units, or any other combination of device and proportional units. </term></item><item><term>Rectangles that, when interpreted by using the current <see cref="T:Microsoft.Maui.Layouts.AbsoluteLayoutFlags" /> set on the child, represent bounding boxes that are partially or wholly off-screen—for example, by having a width that is larger than the screen width—may give unexpected results.</term></item></list></para>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.AbsoluteLayout.AutoSize">
            <summary>A value that indicates that the width or height of the child should be sized to that child's native size.</summary><value>
        </value><remarks>
          <para>Application developers can set the width or height of the <see cref="P:Microsoft.Maui.Controls.VisualElement.Bounds" /> property to <see cref="P:Microsoft.Maui.Controls.AbsoluteLayout.AutoSize" /> on a visual element when adding to the layout to cause that element to be measured during the layout pass and sized appropriately.</para>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.AbsoluteLayout.LayoutFlagsProperty">
            <summary>Implements the attached property that contains the <see cref="T:Microsoft.Maui.Layouts.AbsoluteLayoutFlags" /> values for child elements.</summary><remarks>The interface for this property is defined by the <see cref="M:Microsoft.Maui.Controls.AbsoluteLayout.GetLayoutFlags(Microsoft.Maui.Controls.BindableObject)" /> and <see cref="M:Microsoft.Maui.Controls.AbsoluteLayout.SetLayoutFlags(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Layouts.AbsoluteLayoutFlags)" /> methods.
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.AbsoluteLayout.LayoutBoundsProperty">
            <summary>Implements the attached property that represents the layout bounds of child elements. Bindable at run time with the string "LayoutBounds". See Remarks.</summary><remarks>The interface for this property is defined by the <see cref="M:Microsoft.Maui.Controls.AbsoluteLayout.GetLayoutBounds(Microsoft.Maui.Controls.BindableObject)" /> and <see cref="M:Microsoft.Maui.Controls.AbsoluteLayout.SetLayoutBounds(Microsoft.Maui.IView,Microsoft.Maui.Graphics.Rect)" /> methods.
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.AbsoluteLayout.GetLayoutFlags(Microsoft.Maui.Controls.BindableObject)">
            <param name="bindable">A visual element.</param><summary>Gets the layout flags that were specified when <paramref name="bindable" /> was added to an <see cref="T:Microsoft.Maui.Controls.AbsoluteLayout" />.</summary><returns>The layout flags of the object.</returns><remarks>
          <para>This method supports the <c>AbsoluteLayout.LayoutFlags</c> XAML attached property. In XAML, Application developers can specify the following <see cref="T:Microsoft.Maui.Layouts.AbsoluteLayoutFlags" /> enumeration value names for the value of this property on the children of a <see cref="T:Microsoft.Maui.Controls.AbsoluteLayout" />:</para>
          <list type="bullet">
            <item>
              <term>
                <c>All</c>
              </term>
            </item>
            <item>
              <term>
                <c>None</c>
              </term>
            </item>
            <item>
              <term>
                <c>HeightProportional</c>
              </term>
            </item>
            <item>
              <term>
                <c>WidthProportional</c>
              </term>
            </item>
            <item>
              <term>
                <c>SizeProportional</c>
              </term>
            </item>
            <item>
              <term>
                <c>XProportional</c>
              </term>
            </item>
            <item>
              <term>
                <c>YProportional</c>
              </term>
            </item>
            <item>
              <term>
                <c>PositionProportional</c>
              </term>
            </item>
          </list>
          <para>Application developers can combine any of the above values by supplying a comma-separated list.</para>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.AbsoluteLayout.GetLayoutBounds(Microsoft.Maui.Controls.BindableObject)">
            <param name="bindable">A visual element.</param><summary>Gets the layout bounds of <paramref name="bindable" />.</summary><returns>The layout bounds of the object.</returns><remarks>
          <para>This method supports the <c>AbsoluteLayout.LayoutBounds</c> XAML attached property. In XAML, Application developers can specify a comma-separated list—possibly with spaces—of four values that specify the bounding rectangle's position and dimensions. The first two values in the list must represent numbers. The latter two values may each either be numbers, or the string "AutoSize". The <c>AbsoluteLayout.LayoutFlags</c> attached property determines how the values in the list are interpreted to create the bounding rectangle.</para>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.AbsoluteLayout.SetLayoutFlags(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Layouts.AbsoluteLayoutFlags)">
            <param name="bindable">The view on which to set the layout flags.</param><param name="flags">A <see cref="T:Microsoft.Maui.Layouts.AbsoluteLayoutFlags" /> that describes the how to interpret the layout bounds for <paramref name="bindable" />.</param><summary>Sets the layout flags of a view that will be used to interpret the layout bounds set on it when it is added to the layout.</summary><remarks>
          <para>This method supports the <c>AbsoluteLayout.LayoutFlags</c> XAML attached property. In XAML, Application developers can specify the following <see cref="T:Microsoft.Maui.Layouts.AbsoluteLayoutFlags" /> enumeration value names for the value of this property on the children of a <see cref="T:Microsoft.Maui.Controls.AbsoluteLayout" />:</para>
          <list type="bullet">
            <item>
              <term>
                <c>All</c>
              </term>
            </item>
            <item>
              <term>
                <c>None</c>
              </term>
            </item>
            <item>
              <term>
                <c>HeightProportional</c>
              </term>
            </item>
            <item>
              <term>
                <c>WidthProportional</c>
              </term>
            </item>
            <item>
              <term>
                <c>SizeProportional</c>
              </term>
            </item>
            <item>
              <term>
                <c>XProportional</c>
              </term>
            </item>
            <item>
              <term>
                <c>YProportional</c>
              </term>
            </item>
            <item>
              <term>
                <c>PositionProportional</c>
              </term>
            </item>
          </list>
          <para>Application developers can combine any of the above values by supplying a comma-separated list. Application developers can call this method to update the layout flags of a view after it is added.</para>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.AbsoluteLayout.SetLayoutBounds(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Graphics.Rect)">
            <param name="bindable">The view to delimit by <paramref name="bounds" />.</param><param name="bounds">A rectangle that represents the desired size and shape of <paramref name="bindable" />.</param><summary>Sets the layout bounds of a view that will be used to size it when it is layed out.</summary><remarks>
          <para>This method supports the <c>AbsoluteLayout.LayoutBounds</c> XAML attached property. In XAML, Application developers can specify a comma-separated list—possibly with spaces—of four values that specify the bounding rectangle's position and dimensions. The first two values in the list must represent numbers. The latter two values may each either be numbers, or the string "AutoSize". The <c>AbsoluteLayout.LayoutFlags</c> attached property determines how the values in the list are interpreted to create the bounding rectangle. Application developers can call this method to update the layout of a view after it is added.</para>
        </remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.BoundsTypeConverter">
            <summary>A <see cref="T:System.ComponentModel.TypeConverter" /> that converts strings into <see cref="T:Microsoft.Maui.Controls.Shapes.Rectangle" />s for use with <see cref="T:Microsoft.Maui.Controls.AbsoluteLayout" />s.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.FlexLayout">
            <summary>A Flexbox-like layout that lays out child elements in optionally wrappable rows or columns of child elements.</summary><remarks>
      <para>FlexLayout is a <see cref="T:Microsoft.Maui.Controls.Layout" /> that efficiently lays out it's <see cref="P:Microsoft.Maui.Controls.Layout.Children" /> in a manner similar to that of <format type="text/html"><a href="https://www.w3.org/TR/css-flexbox-1/">CSS Flexbox</a></format>.</para>
      <para>The <see cref="P:Microsoft.Maui.Controls.FlexLayout.Direction" /> property determines the primary axis of the layout. The <see cref="P:Microsoft.Maui.Controls.FlexLayout.JustifyContent" /> property determines how <see cref="P:Microsoft.Maui.Controls.Layout.Children" /> are laid out along the primary axis. The <see cref="P:Microsoft.Maui.Controls.FlexLayout.AlignItems" /> property specifies how <see cref="P:Microsoft.Maui.Controls.Layout.Children" /> are laid out along the cross axis; the <see cref="P:Microsoft.Maui.Controls.FlexLayout.AlignContent" /> property works similarly, but applies to entire rows or columns, not individual elements.</para>
      <para>The initial size of a child element is set with <see cref="M:Microsoft.Maui.Controls.FlexLayout.SetBasis(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Layouts.FlexBasis)" /> and its resizing behavior is set with  <see cref="M:Microsoft.Maui.Controls.FlexLayout.SetGrow(Microsoft.Maui.Controls.BindableObject,System.Single)" /> and <see cref="M:Microsoft.Maui.Controls.FlexLayout.SetShrink(Microsoft.Maui.Controls.BindableObject,System.Single)" />.</para>
    </remarks><related type="article" href="https://docs.microsoft.com/en-us/xamarin/xamarin-forms/user-interface/layouts/flex-layout">The Microsoft.Maui.Controls FlexLayout</related>
        </member>
        <member name="F:Microsoft.Maui.Controls.FlexLayout.DirectionProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.FlexLayout.Direction" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.FlexLayout.JustifyContentProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.FlexLayout.JustifyContent" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.FlexLayout.AlignContentProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.FlexLayout.AlignContent" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.FlexLayout.AlignItemsProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.FlexLayout.AlignItems" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.FlexLayout.PositionProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.FlexLayout.Position" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.FlexLayout.WrapProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.FlexLayout.Wrap" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.FlexLayout.OrderProperty">
            <summary>Backing store for the attached property that determines this element's visual order among its siblings.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.FlexLayout.GrowProperty">
            <summary>Backing store for the attached property that determines the proportional growth that this element will accept to acccommodate the layout in the row or column.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.FlexLayout.ShrinkProperty">
            <summary>Backing store for the attached property that determines the proportional reduction in size that this element will accept to acccommodate the layout in the row or column.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.FlexLayout.AlignSelfProperty">
            <summary>Backing store for the attached property that optionally overrides the item alignment for this child within its row or column in the parent.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.FlexLayout.BasisProperty">
            <summary>Backing store for the attached property that contains information about this element's relative or absolute basis.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.FlexLayout.Direction">
            <summary>Gets or sets the flex direction for child elements within this layout.</summary><value>The flex direction for child elements within this layout.</value><remarks>
          <para>The following image shows the options for <see cref="P:Microsoft.Maui.Controls.FlexLayout.Direction" /> with <see cref="P:Microsoft.Maui.Controls.FlexLayout.JustifyContent" /> set to <see cref="F:Microsoft.Maui.Layouts.FlexJustify.Start" /> and <see cref="P:Microsoft.Maui.Controls.FlexLayout.AlignItems" /> set to <see cref="F:Microsoft.Maui.Layouts.FlexAlignItems.Stretch" />:</para>
          <para>
            <img href="~/xml/Microsoft.Maui.Controls/_images/FlexDirection.All.png" />
          </para>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.FlexLayout.JustifyContent">
            <summary>Gets or sets a value that that describes how child elements are justified when there is extra space around them.</summary><value>A value that that describes how child elements are justified when there is extra space around them.</value><remarks>
          <para>The following image shows options for <see cref="P:Microsoft.Maui.Controls.FlexLayout.JustifyContent" /> when <see cref="P:Microsoft.Maui.Controls.FlexLayout.Direction" /> is set to <see cref="F:Microsoft.Maui.Layouts.FlexDirection.Column" /> and <see cref="P:Microsoft.Maui.Controls.FlexLayout.AlignItems" /> is set to <see cref="F:Microsoft.Maui.Layouts.FlexAlignItems.Stretch" />:</para>
          <para>
            <img href="~/xml/Microsoft.Maui.Controls/_images/FlexJustify.All.png" />
          </para>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.FlexLayout.AlignContent">
            <summary>Gets or sets a value that controls how multiple rows or columns of child elements are aligned.</summary><value>To be added.</value><remarks>
          <para>This property behaves similarly to <see cref="P:Microsoft.Maui.Controls.FlexLayout.AlignItems" />, but applies to how entire rows or columns are aligned, not individual elements. The below image illustrates three different <see cref="P:Microsoft.Maui.Controls.FlexLayout.AlignContent" /> values working on wrapped rows. The iOS screenshot shows <see cref="F:Microsoft.Maui.Layouts.FlexAlignContent.SpaceBetween" />, the Android screenshot shows <see cref="F:Microsoft.Maui.Layouts.FlexAlignContent.SpaceAround" />, and the UWP screenshot shows <see cref="F:Microsoft.Maui.Layouts.FlexAlignContent.SpaceEvenly" />.</para>
          <para>
            <img href="~/xml/Microsoft.Maui.Controls/_images/ExperimentAlignContent2-Large.png" />
          </para>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.FlexLayout.AlignItems">
            <summary>Gets or sets a value that controls how child elements are laid out within their row or column.</summary><value>A value that controls how child elements are laid out within their row or column.</value><remarks>
          <para>The following image shows the options for <see cref="P:Microsoft.Maui.Controls.FlexLayout.AlignItems" /> with <see cref="P:Microsoft.Maui.Controls.FlexLayout.Direction" /> set to <see cref="F:Microsoft.Maui.Layouts.FlexDirection.Column" /> and <see cref="P:Microsoft.Maui.Controls.FlexLayout.JustifyContent" /> set to <see cref="F:Microsoft.Maui.Layouts.FlexJustify.Start" />:</para>
          <para>
            <img href="~/xml/Microsoft.Maui.Controls/_images/FlexAlign.All.png" />
          </para>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.FlexLayout.Position">
            <summary>Gets or sets a value that controls whether the coordinates of child elements are specified in absolute or relative terms.</summary><value>A value that controls whether the coordinates of child elements are specified in absolute or relative terms.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.FlexLayout.Wrap">
            <summary>Gets or sets a value that controls whether and how child elements within this layout wrap.</summary><value>A value that controls whether and how child elements within this layout wrap.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.FlexLayout.GetOrder(Microsoft.Maui.Controls.BindableObject)">
            <param name="bindable">The object for which to retrieve the property value.</param><summary>Returns the visual order of the element among its siblings.</summary><returns>The visual order of the element among its siblings.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.FlexLayout.SetOrder(Microsoft.Maui.Controls.BindableObject,System.Int32)">
            <param name="bindable">The object for which to retrieve the property value.</param><param name="value">The new flex order value.</param><summary>Sets the visual order priority of the element among its siblings.</summary><remarks>
          <para>Multiple elements may have the same ordering priority, in which case they will appear in the order in which they occur in the <see cref="P:Microsoft.Maui.Controls.Layout.Children" /> list. By default, the value of <see cref="M:Microsoft.Maui.Controls.FlexLayout.GetOrder(Microsoft.Maui.Controls.BindableObject)" /> is 0.</para>
          <para>For instance, if 3 children <c>a</c>, <c>b</c>, and <c>c</c> are added in order, and the developer wishes <c>c</c> to appear in the middle, the proper code is <c>FlexLayout.SetOrder(b, 1)</c>. (A developer mistaking order priority for an index might wrongly expect <c>FlexLayout.SetOrder(c, 1)</c> to work, but as <c>a</c> and <c>b</c> will still have order priority <c>0</c>, the elements in that case would still layout in the sequence <c>a, b, c</c>.</para>
          <para>
            <img href="~/xml/Microsoft.Maui.Controls/_images/FlexLayout.SetOrder.png" />
          </para>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.FlexLayout.GetGrow(Microsoft.Maui.Controls.BindableObject)">
            <param name="bindable">The object for which to retrieve the property value.</param><summary>Returns the value that determines the proportional growth that this element will accept to acccommodate the layout in the row or column.</summary><returns>The value that determines the proportional growth that this element will accept to acccommodate the layout in the row or column.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.FlexLayout.SetGrow(Microsoft.Maui.Controls.BindableObject,System.Single)">
            <param name="bindable">The object for which to retrieve the property value.</param><param name="value">The new flex growth value.</param><summary>Sets the value that determines the proportional growth that this element will accept to acccommodate the layout in the row or column.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.FlexLayout.GetShrink(Microsoft.Maui.Controls.BindableObject)">
            <param name="bindable">The object for which to retrieve the property value.</param><summary>Returns the value that determines the proportional reduction in size that this element will accept to acccommodate the layout in the row or column.</summary><returns>The proportional reduction in size that this element will accept to acccommodate the layout in the row or column.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.FlexLayout.SetShrink(Microsoft.Maui.Controls.BindableObject,System.Single)">
            <param name="bindable">The object for which to retrieve the property value.</param><param name="value">The new flex shrink value.</param><summary>Sets the value that determines the proportional reduction in size that this element will accept to acccommodate the layout in the row or column.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.FlexLayout.GetAlignSelf(Microsoft.Maui.Controls.BindableObject)">
            <param name="bindable">The object for which to retrieve the property value.</param><summary>Returns the value that optionally overrides the item alignment for this child within its row or column in the parent.</summary><returns>The value that optionally overrides the item alignment for this child within its row or column in the parent.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.FlexLayout.SetAlignSelf(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Layouts.FlexAlignSelf)">
            <param name="bindable">The object for which to retrieve the property value.</param><param name="value">The new self-alignment value.</param><summary>Sets a value that optionally overrides the parent element's item aliginment for this child element.</summary><remarks>
          <para>The following image shows the effect of <c>FlexLayout.SetAlignSelf(c, FlexAlignSelf.Start);</c> on a layout with<see cref="P:Microsoft.Maui.Controls.FlexLayout.AlignItems" /> value of <see cref="F:Microsoft.Maui.Layouts.FlexAlignItems.Stretch" />: </para>
          <para>
            <img href="~/xml/Microsoft.Maui.Controls/_images/FlexLayout.SetAlignSelf.png" />
          </para>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.FlexLayout.GetBasis(Microsoft.Maui.Controls.BindableObject)">
            <param name="bindable">The object for which to retrieve the property value.</param><summary>Returns the value that describes this element's relative or absolute basis length.</summary><returns>The value that describes this element's relative or absolute basis length.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.FlexLayout.SetBasis(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Layouts.FlexBasis)">
            <param name="bindable">The object for which to retrieve the property value.</param><param name="value">The new flex basis value.</param><summary>Sets the value that describes this element's relative or absolute basis length.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Grid">
            <summary>A layout that arranges views in rows and columns.</summary><remarks>
      <example>
        <para>The following example shows a basic use:</para>
        <code lang="csharp lang-csharp"><![CDATA[
using System;
using Microsoft.Maui.Controls;
    
namespace FormsGallery
{
    class GridDemoPage : ContentPage
    {
        public GridDemoPage()
        {
            Grid grid = new Grid
            {
                VerticalOptions = LayoutOptions.FillAndExpand,
                RowDefinitions = 
                {
                    new RowDefinition { Height = GridLength.Auto },
                    new RowDefinition { Height = GridLength.Auto },
                    new RowDefinition { Height = new GridLength(1, GridUnitType.Star) },
                    new RowDefinition { Height = new GridLength(100, GridUnitType.Absolute) }
                },
                ColumnDefinitions = 
                {
                    new ColumnDefinition { Width = GridLength.Auto },
                    new ColumnDefinition { Width = new GridLength(1, GridUnitType.Star) },
                    new ColumnDefinition { Width = new GridLength(100, GridUnitType.Absolute) }
                }
            };
    
            grid.Children.Add(new Label
                {
                    Text = "Grid",
                    FontSize = Device.GetNamedSize (NamedSize.Large, typeof(Label)),
                    HorizontalOptions = LayoutOptions.Center
                }, 0, 3, 0, 1);
    
            grid.Children.Add(new Label
                {
                    Text = "Autosized cell",
                    TextColor = Color.White,
                    BackgroundColor = Color.Blue
                }, 0, 1);
    
            grid.Children.Add(new BoxView
                {
                    Color = Color.Silver,
                    HeightRequest = 0
                }, 1, 1);
    
            grid.Children.Add(new BoxView
                {
                    Color = Color.Teal
                }, 0, 2);
    
            grid.Children.Add(new Label
                {
                    Text = "Leftover space",
                    TextColor = Color.Purple,
                    BackgroundColor = Color.Aqua,
                    HorizontalTextAlignment = TextAlignment.Center,
                    VerticalTextAlignment = TextAlignment.Center,
                }, 1, 2);
    
            grid.Children.Add(new Label
                {
                    Text = "Span two rows (or more if you want)",
                    TextColor = Color.Yellow,
                    BackgroundColor = Color.Navy,
                    HorizontalTextAlignment = TextAlignment.Center,
                    VerticalTextAlignment = TextAlignment.Center
                }, 2, 3, 1, 3);
    
            grid.Children.Add(new Label
                {
                    Text = "Span 2 columns",
                    TextColor = Color.Blue,
                    BackgroundColor = Color.Yellow,
                    HorizontalTextAlignment = TextAlignment.Center,
                    VerticalTextAlignment = TextAlignment.Center
                }, 0, 2, 3, 4);
    
            grid.Children.Add(new Label
                {
                    Text = "Fixed 100x100",
                    TextColor = Color.Aqua,
                    BackgroundColor = Color.Red,
                    HorizontalTextAlignment = TextAlignment.Center,
                    VerticalTextAlignment = TextAlignment.Center
                }, 2, 3);
    
            // Accomodate iPhone status bar.
            this.Padding = new Thickness(10, Device.OnPlatform(20, 0, 0), 10, 5);
    
            // Build the page.
            this.Content = grid;
        }
    }
}
]]></code>
      </example>
      <para>The following shows Grids on the various platforms:</para>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/Grid.TripleScreenShot.png" />
      </para>
      <para>It is convenient for the <see cref="T:Microsoft.Maui.Controls.Grid" /> layout class to store row and column indices of each of its child elements. Additionally, when a <see cref="T:Microsoft.Maui.Controls.View" /> element is laid out with a grid, application developers can access and change the child's position and span from the child itself by using the <see cref="M:Microsoft.Maui.Controls.Grid.GetRow(Microsoft.Maui.Controls.BindableObject)" />, <see cref="M:Microsoft.Maui.Controls.Grid.SetRow(Microsoft.Maui.Controls.BindableObject,System.Int32)" />, <see cref="M:Microsoft.Maui.Controls.Grid.GetRowSpan(Microsoft.Maui.Controls.BindableObject)" />, <see cref="M:Microsoft.Maui.Controls.Grid.SetRowSpan(Microsoft.Maui.Controls.BindableObject,System.Int32)" /> static methods, and the equivalent static methods for columns and column spans.</para>
      <para>The documentation for the following <see cref="T:Microsoft.Maui.Controls.Grid" /> member methods contains XAML syntax examples:
<list type="bullet"><item><term><see cref="M:Microsoft.Maui.Controls.Grid.SetRow(Microsoft.Maui.Controls.BindableObject,System.Int32)" /></term></item><item><term><see cref="M:Microsoft.Maui.Controls.Grid.SetRowSpan(Microsoft.Maui.Controls.BindableObject,System.Int32)" /></term></item><item><term><see cref="M:Microsoft.Maui.Controls.Grid.SetColumn(Microsoft.Maui.Controls.BindableObject,System.Int32)" /></term></item><item><term><see cref="M:Microsoft.Maui.Controls.Grid.SetColumnSpan(Microsoft.Maui.Controls.BindableObject,System.Int32)" /></term></item></list></para>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Grid.ColumnDefinitionsProperty">
            <summary>Implements the <see cref="P:Microsoft.Maui.Controls.Grid.ColumnDefinitions" /> property, and allows the <see cref="T:Microsoft.Maui.Controls.Grid" /> class to bind it to properties on other objects at run time.</summary><remarks>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Grid.RowDefinitionsProperty">
            <summary>Implements the <see cref="P:Microsoft.Maui.Controls.Grid.RowDefinitions" /> property, and allows the <see cref="T:Microsoft.Maui.Controls.Grid" /> class to bind it to properties on other objects at run time.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Grid.RowSpacingProperty">
            <summary>Implements the <see cref="P:Microsoft.Maui.Controls.Grid.RowSpacing" /> property, and allows the <see cref="T:Microsoft.Maui.Controls.Grid" /> class to bind it to properties on other objects at run time.</summary><remarks>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Grid.ColumnSpacingProperty">
            <summary>Implements the <see cref="P:Microsoft.Maui.Controls.Grid.ColumnSpacing" /> property, and allows the <see cref="T:Microsoft.Maui.Controls.Grid" /> class to bind it to properties on other objects at run time.</summary><remarks>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Grid.RowProperty">
            <summary>Implements the attached property that represents the zero-based row index of a child element. See Remarks.</summary><remarks>
          <para>The interface for this property is defined by the <see cref="M:Microsoft.Maui.Controls.Grid.GetRow(Microsoft.Maui.Controls.BindableObject)" /> and <see cref="M:Microsoft.Maui.Controls.Grid.SetRow(Microsoft.Maui.Controls.BindableObject,System.Int32)" /> methods.</para>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Grid.RowSpanProperty">
            <summary>Implements the attached property that represents the number of rows that a child element spans, and allows the <see cref="T:Microsoft.Maui.Controls.Grid" /> class to bind it to properties on other objects at run time.</summary><remarks>
          <para>The interface for this property is defined by the <see cref="M:Microsoft.Maui.Controls.Grid.GetRowSpan(Microsoft.Maui.Controls.BindableObject)" /> and <see cref="M:Microsoft.Maui.Controls.Grid.SetRowSpan(Microsoft.Maui.Controls.BindableObject,System.Int32)" /> methods.</para>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Grid.ColumnProperty">
            <summary>Implements the attached property that represents the zero-based column index of a child element. See Remarks.</summary><remarks>
          <para>The interface for this property is defined by the <see cref="M:Microsoft.Maui.Controls.Grid.GetColumn(Microsoft.Maui.Controls.BindableObject)" /> and <see cref="M:Microsoft.Maui.Controls.Grid.SetColumn(Microsoft.Maui.Controls.BindableObject,System.Int32)" /> methods.</para>
        </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Grid.ColumnSpanProperty">
            <summary>Implements the attached property that represents the number of columns that a child element spans. See Remarks.</summary><remarks>
          <para>The interface for this property is defined by the <see cref="M:Microsoft.Maui.Controls.Grid.GetColumnSpan(Microsoft.Maui.Controls.BindableObject)" /> and <see cref="M:Microsoft.Maui.Controls.Grid.SetColumnSpan(Microsoft.Maui.Controls.BindableObject,System.Int32)" /> methods.</para>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Grid.GetColumn(Microsoft.Maui.Controls.BindableObject)">
            <param name="bindable">An element that belongs to the Grid layout.</param><summary>Gets the column of the <paramref name="bindable" /> child element.</summary><returns>The column that the child element is in.</returns><remarks>
          <para>The <see cref="M:Microsoft.Maui.Controls.Grid.GetColumn(Microsoft.Maui.Controls.BindableObject)" /> method corresponds to the value that is set by the following XAML attached property.</para>
          <list type="table">
            <listheader>
              <term>Attached Property</term>
              <description>Value</description>
            </listheader>
            <item>
              <term>Column</term>
              <description>
                <para>An integer that represents the Column in which the item will appear.</para>
              </description>
            </item>
          </list>
          <para>The remarks for the <see cref="M:Microsoft.Maui.Controls.Grid.SetColumn(Microsoft.Maui.Controls.BindableObject,System.Int32)" /> method contain syntax for and information about the <c>Column</c> attached property.</para>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Grid.GetColumnSpan(Microsoft.Maui.Controls.BindableObject)">
            <param name="bindable">An element that belongs to the Grid layout.</param><summary>Gets the column span of the <paramref name="bindable" /> child element.</summary><returns>The column that the child element is in.</returns><remarks>
          <para>The <see cref="M:Microsoft.Maui.Controls.Grid.GetColumnSpan(Microsoft.Maui.Controls.BindableObject)" /> method corresponds to the value that is set by the following XAML attached property.</para>
          <list type="table">
            <listheader>
              <term>Attached Property</term>
              <description>Value</description>
            </listheader>
            <item>
              <term>ColumnSpan</term>
              <description>
                <para>An integer that represents the number of Columns that the item will span.</para>
              </description>
            </item>
          </list>
          <para>The remarks for the <see cref="M:Microsoft.Maui.Controls.Grid.SetColumnSpan(Microsoft.Maui.Controls.BindableObject,System.Int32)" /> method contain syntax for and information about the <c>ColumnSpan</c> attached property.</para>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Grid.GetRow(Microsoft.Maui.Controls.BindableObject)">
            <param name="bindable">An element that belongs to the Grid layout.</param><summary>Gets the row of the <paramref name="bindable" /> child element.</summary><returns>The row that the child element is in.</returns><remarks>
          <para>The <see cref="M:Microsoft.Maui.Controls.Grid.GetRow(Microsoft.Maui.Controls.BindableObject)" /> method corresponds to the following XAML attached property:</para>
          <list type="table">
            <listheader>
              <term>Attached Property</term>
              <description>Value</description>
            </listheader>
            <item>
              <term>Row</term>
              <description>
                <para>An integer that represents the row in which the item will appear.</para>
              </description>
            </item>
          </list>
          <para>The remarks for the <see cref="M:Microsoft.Maui.Controls.Grid.SetRow(Microsoft.Maui.Controls.BindableObject,System.Int32)" /> method contain syntax for and information about the <c>Row</c> attached property.</para>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Grid.GetRowSpan(Microsoft.Maui.Controls.BindableObject)">
            <param name="bindable">An element that belongs to the Grid layout.</param><summary>Gets the row span of the <paramref name="bindable" /> child element.</summary><returns>The row that the child element is in.</returns><remarks>
          <para>The <see cref="M:Microsoft.Maui.Controls.Grid.GetRowSpan(Microsoft.Maui.Controls.BindableObject)" /> method corresponds to the following XAML attached properties:</para>
          <list type="table">
            <listheader>
              <term>Attached Property</term>
              <description>Value</description>
            </listheader>
            <item>
              <term>RowSpan</term>
              <description>An integer that represents the number of rows that the item will span.<para /></description>
            </item>
          </list>
          <para>The remarks for the <see cref="M:Microsoft.Maui.Controls.Grid.SetRowSpan(Microsoft.Maui.Controls.BindableObject,System.Int32)" /> method contain syntax for and information about the <c>RowSpan</c> attached property.</para>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Grid.SetColumn(Microsoft.Maui.Controls.BindableObject,System.Int32)">
            <param name="bindable">A child element of this Grid to move to a different column.</param><param name="value">The column in which to place the child element.</param><summary>Changes the column in which a child element will be placed.</summary><remarks>
          <para>The <see cref="M:Microsoft.Maui.Controls.Grid.GetColumnSpan(Microsoft.Maui.Controls.BindableObject)" /> method corresponds to the value that is set by the following XAML attached property.</para>
          <list type="table">
            <listheader>
              <term>Attached Property</term>
              <description>Value</description>
            </listheader>
            <item>
              <term>ColumnSpan</term>
              <description>
                <para>An integer that represents the Column in which the item will appear.</para>
              </description>
            </item>
          </list>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Grid.SetColumnSpan(Microsoft.Maui.Controls.BindableObject,System.Int32)">
            <param name="bindable">A child element of this Grid on which to assign a new column span.</param><param name="value">The new column span.</param><summary>Changes the column span of the specified child element.</summary><remarks>
          <para>The <see cref="M:Microsoft.Maui.Controls.Grid.GetColumn(Microsoft.Maui.Controls.BindableObject)" /> method corresponds to the value that is set by the following XAML attached property.</para>
          <list type="table">
            <listheader>
              <term>Attached Property</term>
              <description>Value</description>
            </listheader>
            <item>
              <term>Column</term>
              <description>
                <para>An integer that represents the number of Columns that the item will span.</para>
              </description>
            </item>
          </list>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Grid.SetRow(Microsoft.Maui.Controls.BindableObject,System.Int32)">
            <param name="bindable">A child element of this Grid to move to a different row.</param><param name="value">The row in which to place the child element.</param><summary>Changes the row in which a child element will be placed.</summary><remarks>
          <para>The <see cref="M:Microsoft.Maui.Controls.Grid.SetRow(Microsoft.Maui.Controls.BindableObject,System.Int32)" /> method corresponds to the following XAML attached property:</para>
          <list type="table">
            <listheader>
              <term>Attached Property</term>
              <description>Value</description>
            </listheader>
            <item>
              <term>Row</term>
              <description>
                <para>An integer that represents the row in which the item will appear.</para>
              </description>
            </item>
          </list>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Grid.SetRowSpan(Microsoft.Maui.Controls.BindableObject,System.Int32)">
            <param name="bindable">A child element of this Grid on which to assign a new row span.</param><param name="value">The new row span.</param><summary>Changes the row span of the specified child element.</summary><remarks>
          <para>The <see cref="M:Microsoft.Maui.Controls.Grid.SetRowSpan(Microsoft.Maui.Controls.BindableObject,System.Int32)" /> method corresponds to the following XAML attached property:</para>
          <list type="table">
            <listheader>
              <term>Attached Property</term>
              <description>Value</description>
            </listheader>
            <item>
              <term>RowSpan</term>
              <description>An integer that represents the number of rows that the item will span.<para /></description>
            </item>
          </list>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Grid.ColumnDefinitions">
            <summary>Provides the interface for the bound property that gets or sets the ordered collection of <see cref="T:Microsoft.Maui.Controls.ColumnDefinition" /> objects that control the layout of columns in the <see cref="T:Microsoft.Maui.Controls.Grid" />.</summary><value>A ColumnDefinitionCollection for the Grid instance.</value><remarks>
          <para>ColumnDefinitions is an ordered set of ColumnDefinition objects that determine the width of each column. Each successive ColumnDefintion controls the width of each successive column. If ColumnDefinitions is empty, or if there are more columns than definitions, then columns for which there is no definition are rendered as if they were controlled by a ColumnDefinition object that has its <see cref="P:Microsoft.Maui.Controls.ColumnDefinition.Width" /> property set to <see cref="P:Microsoft.Maui.GridLength.Star" />.</para>
          <para>The <see cref="P:Microsoft.Maui.Controls.Grid.ColumnDefinitions" /> property has XAML syntax support. The syntax for this operation is shown below.</para>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Grid.RowDefinitions">
            <summary>Provides the interface for the bound property that gets or sets the collection of RowDefinition objects that control the heights of each row.</summary><value>A RowDefinitionCollection for the Grid instance.</value><remarks>
          <para>RowDefinitions is an ordered set of <see cref="T:Microsoft.Maui.Controls.RowDefinition" /> objects that determine the height of each row. Each successive RowDefintion controls the width of each successive row. If RowDefinitions is empty, or if there are more rows than definitions, then rows for which there is no definition are rendered as if they were controlled by a RowDefinition object that has its <see cref="P:Microsoft.Maui.Controls.RowDefinition.Height" /> property set to <see cref="P:Microsoft.Maui.GridLength.Star" />.</para>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Grid.RowSpacing">
            <summary>Gets or sets the amount of space left between rows in the Grid. This is a bindable property.</summary><value>The space between rows</value><remarks>
          <para>The <see cref="P:Microsoft.Maui.Controls.Grid.RowSpacing" /> property does not control spacing on the top and bottom edges of the <see cref="T:Microsoft.Maui.Controls.Grid" /> layout. Application developers can control the spacing around the outside of the <see cref="T:Microsoft.Maui.Controls.Grid" /> layout by setting the <see cref="P:Microsoft.Maui.Controls.Page.Padding" /> property of the visual element to which it belongs.</para>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Grid.ColumnSpacing">
            <summary>Provides the interface for the bound property that gets or sets the distance between columns in the Grid.</summary><value>The space between columns in this <see cref="T:Microsoft.Maui.Controls.Grid" /> layout. The default is 6.</value><remarks>
          <para>The <see cref="P:Microsoft.Maui.Controls.Grid.ColumnSpacing" /> property does not control spacing on the left and right edges of the <see cref="T:Microsoft.Maui.Controls.Grid" /> layout. Application developers can control the spacing around the outside of the <see cref="T:Microsoft.Maui.Controls.Grid" /> layout by setting the <see cref="P:Microsoft.Maui.Controls.Page.Padding" /> property of the visual element to which it belongs.</para>
        </remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.StackLayout">
            <summary>A <see cref="T:Microsoft.Maui.Controls.Layout" /> that positions child elements in a single line which can be oriented vertically or horizontally.</summary><remarks>
      <para>Because <see cref="T:Microsoft.Maui.Controls.StackLayout" /> layouts override the bounds on their child elements, application developers should not set bounds on them.</para>
      <example>
        <para>The following example code, adapted from the <format type="text/html"><a href="https://docs.microsoft.com/samples/xamarin/xamarin-forms-samples/formsgallery/" target="_blank">FormsGallery</a></format> example shows how to create a new <see cref="T:Microsoft.Maui.Controls.StackLayout" /> with children that explore many of the layout behaviors of <see cref="T:Microsoft.Maui.Controls.StackLayout" />:</para>
        <code lang="csharp lang-csharp"><![CDATA[
StackLayout stackLayout = new StackLayout
{
    Spacing = 0,
    VerticalOptions = LayoutOptions.FillAndExpand,
    Children = 
    {
        new Label
        {
            Text = "StackLayout",
            HorizontalOptions = LayoutOptions.Start
        },
        new Label
        {
            Text = "stacks its children",
            HorizontalOptions = LayoutOptions.Center
        },
        new Label
        {
            Text = "vertically",
            HorizontalOptions = LayoutOptions.End
        },
        new Label
        {
            Text = "by default,",
            HorizontalOptions = LayoutOptions.Center
        },
        new Label
        {
            Text = "but horizontal placement",
            HorizontalOptions = LayoutOptions.Start
        },
        new Label
        {
            Text = "can be controlled with",
            HorizontalOptions = LayoutOptions.Center
        },
        new Label
        {
            Text = "the HorizontalOptions property.",
            HorizontalOptions = LayoutOptions.End
        },
        new Label
        {
            Text = "An Expand option allows one or more children " +
                   "to occupy the an area within the remaining " +
                   "space of the StackLayout after it's been sized " +
                   "to the height of its parent.",
            VerticalOptions = LayoutOptions.CenterAndExpand,
            HorizontalOptions = LayoutOptions.End
        },
        new StackLayout
        {
            Spacing = 0,
            Orientation = StackOrientation.Horizontal,
            Children = 
            {
                new Label
                {
                    Text = "Stacking",
                },
                new Label
                {
                    Text = "can also be",
                    HorizontalOptions = LayoutOptions.CenterAndExpand
                },
                new Label
                {
                    Text = "horizontal.",
                },
            }
        }
    }
};
]]></code>
      </example>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/StackLayout.TripleScreenShot.png" />
      </para>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.StackLayout.OrientationProperty">
            <summary>Identifies the Orientation bindable property.</summary><remarks>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.StackLayout.Orientation">
            <summary>Gets or sets the value which indicates the direction which child elements are positioned.</summary><value>A <see cref="T:Microsoft.Maui.Controls.StackOrientation" /> which indicates the direction children layouts flow. The default value is Vertical.</value><remarks>Setting the Orientation of a StackLayout triggers a layout cycle if the stack is already inside of a parent layout. To prevent wasted layout cycles, set the orientation prior to adding the StackLayout to a parent.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.LayoutAlignment">
            <summary>Values that represent LayoutAlignment.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.LayoutAlignment.Start">
            <summary>The start of an alignment. Usually the Top or Left.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.LayoutAlignment.Center">
            <summary>The center of an alignment.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.LayoutAlignment.End">
            <summary>The end of an alignment. Usually the Bottom or Right.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.LayoutAlignment.Fill">
            <summary>Fill the entire area if possible.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.LayoutOptions">
            <summary>A struct whose static members define various alignment and expansion options.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.LayoutOptions.Start">
            <summary>A <see cref="T:Microsoft.Maui.Controls.LayoutOptions" /> structure that describes an element that appears at the start of its parent and does not expand.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.LayoutOptions.Center">
            <summary>A <see cref="T:Microsoft.Maui.Controls.LayoutOptions" /> structure that describes an element that is centered and does not expand.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.LayoutOptions.End">
            <summary>A <see cref="T:Microsoft.Maui.Controls.LayoutOptions" /> structure that describes an element that appears at the end of its parent and does not expand.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.LayoutOptions.Fill">
            <summary>A <see cref="T:Microsoft.Maui.Controls.LayoutOptions" /> stucture that describes an element that has no padding around itself and does not expand.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.LayoutOptions.StartAndExpand">
            <summary>A <see cref="T:Microsoft.Maui.Controls.LayoutOptions" /> structure that describes an element that appears at the start of its parent and expands.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.LayoutOptions.CenterAndExpand">
            <summary>A <see cref="T:Microsoft.Maui.Controls.LayoutOptions" /> structure that describes an element that is centered and expands.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.LayoutOptions.EndAndExpand">
            <summary>A <see cref="T:Microsoft.Maui.Controls.LayoutOptions" /> object that describes an element that appears at the end of its parent and expands.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.LayoutOptions.FillAndExpand">
            <summary>A <see cref="T:Microsoft.Maui.Controls.LayoutOptions" /> structure that describes an element that has no padding around itself and expands.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.LayoutOptions.#ctor(Microsoft.Maui.Controls.LayoutAlignment,System.Boolean)">
            <param name="alignment">An alignment value.</param><param name="expands">Whether or not an element will expand to fill available space in its parent.</param><summary>Creates a new <see cref="T:Microsoft.Maui.Controls.LayoutOptions" /> object with <paramref name="alignment" /> and <paramref name="expands" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.LayoutOptions.Alignment">
            <summary>Gets or sets a value that indicates how an element will be aligned.</summary><value>The <see cref="T:Microsoft.Maui.Controls.LayoutAlignment" /> flags that describe the behavior of an element.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.LayoutOptions.Expands">
            <summary>Gets or sets a value that indicates whether or not the element that is described by this <see cref="T:Microsoft.Maui.Controls.LayoutOptions" /> structure will occupy the largest space that its parent will give to it.</summary><value>Whether or not the element that is described by this <see cref="T:Microsoft.Maui.Controls.LayoutOptions" /> structure will occupy the largest space that its parent will give it. <see langword="true" /> if the element will occupy the largest space the parent will give to it. <see langword="false" /> if the element will be as compact as it can be.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.LayoutOptionsConverter">
            <summary>Class that takes a string representation of a <see cref="T:Microsoft.Maui.Controls.LayoutOptions" /> and returns a corresponding <see cref="T:Microsoft.Maui.Controls.LayoutOptions" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.LinearGradientBrush">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.LinearGradientBrush.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.LinearGradientBrush.#ctor(Microsoft.Maui.Controls.GradientStopCollection)">
            <param name="gradientStops">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.LinearGradientBrush.#ctor(Microsoft.Maui.Controls.GradientStopCollection,Microsoft.Maui.Graphics.Point,Microsoft.Maui.Graphics.Point)">
            <param name="gradientStops">To be added.</param><param name="startPoint">To be added.</param><param name="endPoint">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.LinearGradientBrush.IsEmpty">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.LinearGradientBrush.StartPointProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.LinearGradientBrush.StartPoint">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.LinearGradientBrush.EndPointProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.LinearGradientBrush.EndPoint">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ListProxy.Contains(System.Object)">
            <summary>
                Gets whether or not the current window contains the <paramref name="item" />.
            </summary>
            <param name="item">The item to search for.</param>
            <returns><c>true</c> if the item was found in a list or the current window, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.ListProxy.IndexOf(System.Object)">
            <summary>
                Gets the index for the <paramref name="item" /> if in a list or the current window.
            </summary>
            <param name="item">The item to search for.</param>
            <returns>The index of the item if in a list or the current window, -1 otherwise.</returns>
        </member>
        <member name="T:Microsoft.Maui.Controls.ListProxyChangedEventArgs">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ListProxyChangedEventArgs.OldList">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ListProxyChangedEventArgs.NewList">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ListProxyChangedEventArgs.#ctor(System.Collections.Generic.IReadOnlyCollection{System.Object},System.Collections.Generic.IReadOnlyCollection{System.Object})">
            <param name="oldList">To be added.</param><param name="newList">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ListStringTypeConverter">
            <summary>Type converter for converting properly formatted string lists to lists.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ListView">
            <summary>An <see cref="T:Microsoft.Maui.Controls.ItemsView`1" /> that displays a collection of data as a vertical list.</summary><remarks>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/ListView.TripleScreenShot.png" />
      </para>
      <para>The following example shows a basic use:</para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[
using System;
using System.Collections.Generic;
using Microsoft.Maui.Controls;
    
namespace FormsGallery
{
class ListViewDemoPage : ContentPage
    {
        class Person
        {
            public Person(string name, DateTime birthday, Color favoriteColor)
            {
                this.Name = name;
                this.Birthday = birthday;
                this.FavoriteColor = favoriteColor;
            }
    
            public string Name { private set; get; }
    
            public DateTime Birthday { private set; get; }
    
            public Color FavoriteColor { private set; get; }
        };
    
        public ListViewDemoPage()
        {
            Label header = new Label
            {
                Text = "ListView",
                FontSize = Device.GetNamedSize (NamedSize.Large, typeof(Label)),
                HorizontalOptions = LayoutOptions.Center
            };
    
            // Define some data.
            List<Person> people = new List<Person>
            {
                new Person("Abigail", new DateTime(1975, 1, 15), Color.Aqua),
                new Person("Bob", new DateTime(1976, 2, 20), Color.Black),
                // ...etc.,...
                new Person("Yvonne", new DateTime(1987, 1, 10), Color.Purple),
                new Person("Zachary", new DateTime(1988, 2, 5), Color.Red)
            };
    
            // Create the ListView.
            ListView listView = new ListView
            {
                // Source of data items.
                ItemsSource = people,
    
                // Define template for displaying each item.
                // (Argument of DataTemplate constructor is called for 
                //      each item; it must return a Cell derivative.)
                ItemTemplate = new DataTemplate(() =>
                    {
                        // Create views with bindings for displaying each property.
                        Label nameLabel = new Label();
                        nameLabel.SetBinding(Label.TextProperty, "Name");
    
                        Label birthdayLabel = new Label();
                        birthdayLabel.SetBinding(Label.TextProperty,
                            new Binding("Birthday", BindingMode.OneWay, 
                                null, null, "Born {0:d}"));
    
                        BoxView boxView = new BoxView();
                        boxView.SetBinding(BoxView.ColorProperty, "FavoriteColor");
    
                        // Return an assembled ViewCell.
                        return new ViewCell
                        {
                            View = new StackLayout
                            {
                                Padding = new Thickness(0, 5),
                                Orientation = StackOrientation.Horizontal,
                                Children = 
                                {
                                    boxView,
                                    new StackLayout
                                    {
                                        VerticalOptions = LayoutOptions.Center,
                                        Spacing = 0,
                                        Children = 
                                        {
                                            nameLabel,
                                            birthdayLabel
                                        }
                                        }
                                }
                                }
                        };
                    })
            };
    
            // Accomodate iPhone status bar.
            this.Padding = new Thickness(10, Device.OnPlatform(20, 0, 0), 10, 5);
    
            // Build the page.
            this.Content = new StackLayout
            {
                Children = 
                {
                    header,
                    listView
                }
                };
        }
    }
}
    
]]></code>
      </example>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ListView.IsPullToRefreshEnabledProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.ListView.IsPullToRefreshEnabled" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ListView.IsRefreshingProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.ListView.IsRefreshing" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ListView.RefreshCommandProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.ListView.RefreshCommand" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ListView.HeaderProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.ListView.Header" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ListView.HeaderTemplateProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.ListView.HeaderTemplate" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ListView.FooterProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.ListView.Footer" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ListView.FooterTemplateProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.ListView.FooterTemplate" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ListView.SelectedItemProperty">
            <summary>Identifies the <see cref="F:Microsoft.Maui.Controls.ListView.SelectedItemProperty" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ListView.SelectionModeProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.ListView.SelectionMode" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ListView.HasUnevenRowsProperty">
            <summary>Identifies the <see cref="F:Microsoft.Maui.Controls.ListView.HasUnevenRowsProperty" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ListView.RowHeightProperty">
            <summary>The backing store for the <see cref="F:Microsoft.Maui.Controls.ListView.RowHeightProperty" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ListView.GroupHeaderTemplateProperty">
            <summary>Identifies the <see cref="P:Microsoft.Maui.Controls.ListView.GroupHeaderTemplate" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ListView.IsGroupingEnabledProperty">
            <summary>Identifies the <see cref="F:Microsoft.Maui.Controls.ListView.IsGroupingEnabledProperty" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ListView.SeparatorVisibilityProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.ListView.SeparatorVisibility" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ListView.SeparatorColorProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.ListView.SeparatorColor" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ListView.RefreshControlColorProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.ListView.RefreshControlColor" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ListView.HorizontalScrollBarVisibilityProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.ListView.HorizontalScrollBarVisibility" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ListView.VerticalScrollBarVisibilityProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.ListView.VerticalScrollBarVisibility" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ListView._refreshAllowed">
            <summary>
                Controls whether anything happens in BeginRefresh(), is set based on RefreshCommand.CanExecute
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Controls.ListView.#ctor">
            <summary>Creates and initializes a new instance of the <see cref="T:Microsoft.Maui.Controls.ListView" /> class.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ListView.#ctor(Microsoft.Maui.Controls.ListViewCachingStrategy)">
            <summary>Creates and initializes a new instance of the <see cref="T:Microsoft.Maui.Controls.ListView" /> class.</summary><remarks>To be added.</remarks><param name="cachingStrategy">A value that indicates how the List View should manage memory when displaying data items using a data template.</param><summary>Creates and initializes a new instance of the <see cref="T:Microsoft.Maui.Controls.ListView" /> class, with the specified caching strategy.</summary><remarks>
          <para>For memory and performance reasons, application developers should strongly prefer <see cref="F:Microsoft.Maui.Controls.ListViewCachingStrategy.RecycleElement" />, when possible. See <see cref="T:Microsoft.Maui.Controls.ListViewCachingStrategy" /> for more details.</para>
          <para>
            <block type="note">When developers specify <see cref="F:Microsoft.Maui.Controls.ListViewCachingStrategy.RecycleElement" />, <c>OnElementChanged</c> events are not raised when cells are recycled. Instead,  the cell is retained and its property values change when the binding context is updated to that of an available cell, <c>OnElementPropertyChanged</c> events are raised. Application developers should remember to listen for the correct events, and should note that their renderers will need to be updated if the default behavior changes to <see cref="F:Microsoft.Maui.Controls.ListViewCachingStrategy.RecycleElement" /> in a future release. </block>
          </para>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ListView.Footer">
            <summary>Gets or sets the string, binding, or view that will be displayed at the bottom of the list view.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ListView.FooterTemplate">
            <summary>Gets or sets a data template to use to format a data object for display at the bottom of the list view.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ListView.GroupDisplayBinding">
            <summary>Gets or sets the binding to use for displaying the group header.</summary><value>The <see cref="T:Microsoft.Maui.Controls.BindingBase" /> instance to apply to grouped lists, or <see langword="null" />.</value><remarks>
          <para>
                        This binding can be used to simply set a the text of the group headers without defining a full template and uses the default visuals
                        of the platform to display it. The binding is applied to the <see cref="T:System.Collections.IEnumerable" /> of the group.
                    </para>
          <para>
                        This property is mutually exclusive with <see cref="P:Microsoft.Maui.Controls.ListView.GroupHeaderTemplate" /> property. Setting it will set
                        <see cref="P:Microsoft.Maui.Controls.ListView.GroupHeaderTemplate" /> to <see langword="null" />.
                    </para>
        </remarks><example>
          <para>This example shows an alphabetized list of people, grouped by first initial with the display binding set.</para>
          <code lang="csharp lang-csharp"><![CDATA[
    class Person
    {
        public string FullName
        {
            get;
            set;
        }
    
        public string Address
        {
            get;
            set;
        }
    }
                        ]]></code>
          <code lang="csharp lang-csharp"><![CDATA[
    class Group : ObservableCollection<Person>
    {
        public Group (string firstInitial)
        {
            FirstInitial = firstInitial;
        }
    
        public string FirstInitial
        {
            get;
            private set;
        }
    }
                        ]]></code>
          <code lang="csharp lang-csharp"><![CDATA[
    ListView CreateListView()
    {
        var listView = new ListView {
            IsGroupingEnabled = true,
            GroupDisplayBinding = new Binding ("FirstInitial"),
            GroupShortNameBinding = new Binding ("FirstInitial")
        };
    
        var template = new DataTemplate (typeof (TextCell));
        template.SetBinding (TextCell.TextProperty, "FullName");
        template.SetBinding (TextCell.DetailProperty, "Address");
    
        itemsView.ItemTemplate = template;
        itemsView.ItemsSource = new[] {
            new Group ("C") {
                new Person { FullName = "Caprice Nave" }
            },
    
            new Group ("J") {
                new Person { FullName = "James Smith", Address = "404 Nowhere Street" },
                new Person { FullName = "John Doe", Address = "404 Nowhere Ave" }
            }
        };
    }
                        ]]></code>
        </example>
        </member>
        <member name="P:Microsoft.Maui.Controls.ListView.GroupHeaderTemplate">
            <summary>Gets or sets a <see cref="T:Microsoft.Maui.Controls.DataTemplate" /> for group headers.</summary><value>The <see cref="T:Microsoft.Maui.Controls.DataTemplate" /> for group headers, or <see langword="null" />.</value><remarks>
          <para>
            Use this property to define a template for a <see cref="T:Microsoft.Maui.Controls.Cell" /> that will be used as the header for groups in this
            <see cref="T:Microsoft.Maui.Controls.ListView" />. The <see cref="P:Microsoft.Maui.Controls.BindableObject.BindingContext" /> will be the <see cref="T:System.Collections.IEnumerable" />
            for each group.
          </para>
          <para>
            GroupHeaderTemplate is mutually exclusive with <see cref="P:Microsoft.Maui.Controls.ListView.GroupDisplayBinding" />. Setting this property
            will set <see cref="P:Microsoft.Maui.Controls.ListView.GroupDisplayBinding" /> to <see langword="null" />.
          </para>
          <para>Empty groups will still display a group header.</para>
        </remarks><altmember cref="P:Microsoft.Maui.Controls.ItemsView`1.ItemsSource" /><altmember cref="P:Microsoft.Maui.Controls.ListView.GroupDisplayBinding" /><altmember cref="P:Microsoft.Maui.Controls.ListView.IsGroupingEnabled" />
        </member>
        <member name="P:Microsoft.Maui.Controls.ListView.GroupShortNameBinding">
            <summary>Gets or sets a binding for the name to display in grouped jump lists.</summary><value>The <see cref="T:Microsoft.Maui.Controls.BindingBase" /> instance to apply to grouped lists, or <see langword="null" />.</value><remarks>
          <para>
            When grouping items in a <see cref="T:Microsoft.Maui.Controls.ListView" />, it is often useful to have jump lists to jump to specific
            sections in the list. For example, in an alphabetically grouped lists, the jump list would be the the letter of each group.
            This binding is applied against the <see cref="T:System.Collections.IEnumerable" /> of each group to select the short name to display
            in the jump list.
          </para>
          <para>
            Note: On Android, there is no displayed jump list.
          </para>
        </remarks><example>
          <para>This example shows an alphabetized list of people, grouped by first initial with the short name binding set.</para>
          <code lang="csharp lang-csharp"><![CDATA[
class Person
{
  public string FullName
  {
    get;
    set;
  }
    
  public string Address
  {
    get;
    set;
  }
}
          ]]></code>
          <code lang="csharp lang-csharp"><![CDATA[
class Group : ObservableCollection<Person>
{
  public Group (string firstInitial)
  {
    FirstInitial = firstInitial;
  }
    
  public string FirstInitial
  {
    get;
    private set;
  }
}
          ]]></code>
          <code lang="csharp lang-csharp"><![CDATA[
ListView CreateListView()
{
  var listView = new ListView {
    IsGroupingEnabled = true,
    GroupDisplayBinding = new Binding ("FirstInitial"),
    GroupShortNameBinding = new Binding ("FirstInitial")
  };
    
  var template = new DataTemplate (typeof (TextCell));
  template.SetBinding (TextCell.TextProperty, "FullName");
  template.SetBinding (TextCell.DetailProperty, "Address");
    
  itemsView.ItemTemplate = template;
  itemsView.ItemsSource = new[] {
        new Group ("C") {
            new Person { FullName = "Caprice Nave" }
        },
    
    new Group ("J") {
            new Person { FullName = "James Smith", Address = "404 Nowhere Street" },
            new Person { FullName = "John Doe", Address = "404 Nowhere Ave" }
        }
  };
}
          ]]></code>
        </example>
        </member>
        <member name="P:Microsoft.Maui.Controls.ListView.HasUnevenRows">
            <summary>Gets or sets a Boolean value that indicates whether this <see cref="T:Microsoft.Maui.Controls.ListView" /> element has uneven rows.</summary><value>
          <see langword="true" /> if this <see cref="T:Microsoft.Maui.Controls.ListView" /> control has uneven rows. Otherwise, <see langword="false" /></value><remarks>
          <para>To automatically size row height to fit content, the developer first sets the <see cref="P:Microsoft.Maui.Controls.ListView.HasUnevenRows" /> property to <see langword="true" />; and, second, either leaves <see cref="P:Microsoft.Maui.Controls.ListView.RowHeight" /> at its default value of -1, or sets it to -1 if it has been changed.</para>
          <para>Alternatively, to ensure a constant size for all rows, the developer first sets <see cref="P:Microsoft.Maui.Controls.ListView.HasUnevenRows" /> to <see langword="false" />, and then either: leaves <see cref="P:Microsoft.Maui.Controls.ListView.RowHeight" /> at its default value of -1 (or sets it back to that value if it has been changed) in order to get the default height for the system; or sets the <see cref="P:Microsoft.Maui.Controls.ListView.RowHeight" /> property to the desired uniform row height.</para>
          <para>A more detailed discussion follows, below.</para>
          <para>When the app developer sets the <see cref="P:Microsoft.Maui.Controls.ListView.HasUnevenRows" /> property to <see langword="false" />, the behavior of the list view depends on the <see cref="P:Microsoft.Maui.Controls.ListView.RowHeight" /> property. First, if the developer sets the <see cref="P:Microsoft.Maui.Controls.ListView.RowHeight" /> property to a positive value, then all rows in the <see cref="T:Microsoft.Maui.Controls.ListView" />, irrespective of the height of their content, will be as tall as the specified <see cref="P:Microsoft.Maui.Controls.ListView.RowHeight" /> property value. Second, if the develper instead does not set the <see cref="P:Microsoft.Maui.Controls.ListView.RowHeight" /> property, or sets it to a nonpositive value, then all rows in the <see cref="T:Microsoft.Maui.Controls.ListView" />, irrespective of the height of their content, will have the default row height for the system.</para>
          <para>When the app developer sets the <see cref="P:Microsoft.Maui.Controls.ListView.HasUnevenRows" /> property to <see langword="true" />, the behavior of the list view still depends on the <see cref="P:Microsoft.Maui.Controls.ListView.RowHeight" /> property. First, if the developer either does not set the <see cref="P:Microsoft.Maui.Controls.ListView.RowHeight" /> property or sets it to -1, list view items are autosized to fit their contents. This is the desired behavior and the intended use case for a <see cref="P:Microsoft.Maui.Controls.ListView.HasUnevenRows" /> value of <see langword="true" />, as noted above. Second, if the developer sets the <see cref="P:Microsoft.Maui.Controls.ListView.RowHeight" /> property to 0 or to a negative value other than -1, then all rows in the <see cref="T:Microsoft.Maui.Controls.ListView" /> will, irrespective of the height of their content, have the default height for the system. Third, and finally, if the developer sets <see cref="P:Microsoft.Maui.Controls.ListView.RowHeight" /> to a positive value, then all rows in the <see cref="T:Microsoft.Maui.Controls.ListView" /> will, irrespective of the height of their content, be as tall as <see cref="P:Microsoft.Maui.Controls.ListView.RowHeight" />, as if <see cref="P:Microsoft.Maui.Controls.ListView.HasUnevenRows" /> had been set to <see langword="false" />.
      </para>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ListView.Header">
            <summary>Gets or sets the string, binding, or view that will be displayed at the top of the list view.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ListView.HeaderTemplate">
            <summary>Gets or sets a data template to use to format a data object for display at the top of the list view.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ListView.IsGroupingEnabled">
            <summary>Gets or sets whether or not grouping is enabled for <see cref="T:Microsoft.Maui.Controls.ListView" />.</summary><value>
          <see langword="true" /> if grouping is enabled, <see langword="false" /> otherwise and by default.
        </value><remarks>To be added.</remarks><altmember cref="P:Microsoft.Maui.Controls.ListView.GroupDisplayBinding" /><altmember cref="P:Microsoft.Maui.Controls.ListView.GroupHeaderTemplate" />
        </member>
        <member name="P:Microsoft.Maui.Controls.ListView.IsPullToRefreshEnabled">
            <summary>Gets or sets a value that tells whether the user can swipe down to cause the application to refresh.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ListView.IsRefreshing">
            <summary>Gets or sets a value that tells whether the list view is currently refreshing.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ListView.RefreshCommand">
            <summary>Gets or sets the command that is run when the list view enters the refreshing state.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ListView.RowHeight">
            <summary>Gets or sets a value that represents the height of a row.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ListView.SelectedItem">
            <summary>Gets or sets the currently selected item from the <see cref="P:Microsoft.Maui.Controls.ItemsView`1.ItemsSource" />.</summary><value>The selected item or <see langword="null" /> if no item is selected.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ListView.SelectionMode">
            <summary>Gets or sets a value that controls whether and how many items can be selected.</summary><value>
          <see cref="F:Microsoft.Maui.Controls.ListViewSelectionMode.None" /> if no selections can be made. <see cref="F:Microsoft.Maui.Controls.ListViewSelectionMode.Single" /> if one selection can be made.</value><remarks>If an item is selected, changing <see cref="P:Microsoft.Maui.Controls.ListView.SelectionMode" /> to <see cref="F:Microsoft.Maui.Controls.ListViewSelectionMode.None" /> will cause the item to be deselected, and <see cref="E:Microsoft.Maui.Controls.ListView.ItemSelected" /> to be raised with a <see langword="null" /> item value.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ListView.SeparatorColor">
            <summary>Gets or sets the color of the bar that separates list items.</summary><value>To be added.</value><remarks>The default value is <c>Color.Default</c>. This property has no effect if <see cref="P:Microsoft.Maui.Controls.ListView.SeparatorVisibility" /> is <see langword="false" />.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ListView.RefreshControlColor">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ListView.SeparatorVisibility">
            <summary>Gets or sets a value that tells whether separators are visible between items.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ListView.HorizontalScrollBarVisibility">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ListView.VerticalScrollBarVisibility">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ListView.CachingStrategy">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ListView.RefreshAllowed">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ListView.FooterElement">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ListView.HeaderElement">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ListView.SendCellAppearing(Microsoft.Maui.Controls.Cell)">
            <param name="cell">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ListView.SendCellDisappearing(Microsoft.Maui.Controls.Cell)">
            <param name="cell">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ListView.SendScrolled(Microsoft.Maui.Controls.ScrolledEventArgs)">
            <param name="args">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ListView.SendRefreshing">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ListView.BeginRefresh">
            <summary>Enters the refreshing state by setting the <see cref="P:Microsoft.Maui.Controls.ListView.IsRefreshing" /> property to <see langword="true" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ListView.EndRefresh">
            <summary>Exits the refreshing state by setting the <see cref="P:Microsoft.Maui.Controls.ListView.IsRefreshing" /> property to <see langword="false" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ListView.ScrollTo(System.Object,Microsoft.Maui.Controls.ScrollToPosition,System.Boolean)">
            <param name="item">The item from your <see cref="P:Microsoft.Maui.Controls.ItemsView`1.ItemsSource" /> to scroll to.</param><param name="position">How the item should be positioned on screen.</param><param name="animated">Whether or not the scroll should be animated.</param><summary>Scrolls the ListView to the <paramref name="item" />.</summary><remarks>
          <para>A linear search is done for the item, so if the same reference appears multiple times in the list, the first item will be scrolled to. This includes if grouping is enabled.</para>
        </remarks><exception cref="T:System.ArgumentException">
          <paramref name="position" /> contains an invalid value for <see cref="T:Microsoft.Maui.Controls.ScrollToPosition" />.</exception>
        </member>
        <member name="M:Microsoft.Maui.Controls.ListView.ScrollTo(System.Object,System.Object,Microsoft.Maui.Controls.ScrollToPosition,System.Boolean)">
            <param name="item">The item from your <see cref="P:Microsoft.Maui.Controls.ItemsView`1.ItemsSource" /> to scroll to.</param><param name="group">The group from your <see cref="P:Microsoft.Maui.Controls.ItemsView`1.ItemsSource" /> to scroll to.</param><param name="position">How the item should be positioned on screen.</param><param name="animated">Whether or not the scroll should be animated.</param><summary>Scrolls the ListView to the <paramref name="item" /> in the <paramref name="group" /></summary><remarks>
          <para>A linear search is done for the item, so if the same reference appears multiple times in the <paramref name="group" />, the first item will be scrolled to. The same item in a different group will be ignored.</para>
        </remarks><exception cref="T:System.ArgumentException">
          <paramref name="position" /> contains an invalid value for <see cref="T:Microsoft.Maui.Controls.ScrollToPosition" />.
                </exception><exception cref="T:System.InvalidOperationException">
          <see cref="P:Microsoft.Maui.Controls.ListView.IsGroupingEnabled" /> is <see langword="false" />.</exception>
        </member>
        <member name="M:Microsoft.Maui.Controls.ListView.CreateDefaultCell(System.Object)">
            <param name="item">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ListView.GetDisplayTextFromGroup(System.Object)">
            <param name="cell">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ListView.NotifyRowTapped(System.Int32,System.Int32,Microsoft.Maui.Controls.Cell)">
            <param name="groupIndex">For internal use by the Microsoft.Maui.Controls platform.</param><param name="inGroupIndex">For internal use by the Microsoft.Maui.Controls platform.</param><param name="cell">To be added.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ListView.NotifyRowTapped(System.Int32,System.Int32,Microsoft.Maui.Controls.Cell,System.Boolean)">
            <param name="groupIndex">To be added.</param><param name="inGroupIndex">To be added.</param><param name="cell">To be added.</param><param name="isContextMenuRequested">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ListView.NotifyRowTapped(System.Int32,Microsoft.Maui.Controls.Cell)">
            <param name="index">For internal use by the Microsoft.Maui.Controls platform.</param><param name="cell">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ListView.NotifyRowTapped(System.Int32,Microsoft.Maui.Controls.Cell,System.Boolean)">
            <param name="index">To be added.</param><param name="cell">To be added.</param><param name="isContextmenuRequested">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ListView.On``1">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Controls.ListViewCachingStrategy">
            <summary>Enumerates caching strategies for a ListView.</summary><remarks>
      <para>Application developers can specify one of these values when constructing a <see cref="T:Microsoft.Maui.Controls.ListView" /> to determine whether the List View will minimize their memory footprint and speed execution by recycling list cells, or will instead generate a cell for every item in the list. Currently, the default behavior is to retain item data in their generated cells when they are not needed. (Items are not needed, for example, when they are far enough off screen that their display is not imminent.) This behavior corresponds to a value of <see cref="F:Microsoft.Maui.Controls.ListViewCachingStrategy.RetainElement" />. For performance reasons, it is likely that the default behavior will be changed to <see cref="F:Microsoft.Maui.Controls.ListViewCachingStrategy.RecycleElement" /> in a future release. In the meantime, for memory and performance reasons, app developers should specify <see cref="F:Microsoft.Maui.Controls.ListViewCachingStrategy.RecycleElement" /> when constructing a new List View.</para>
      <para>The performance advantage of <see cref="F:Microsoft.Maui.Controls.ListViewCachingStrategy.RecycleElement" /> is so great that application developers have been provided with a XAML syntax shortcut for initializing List Views. Instead of <c>x:TypeArguments</c> syntax that specifies a parameter for the <see cref="M:Microsoft.Maui.Controls.ListView.#ctor(Microsoft.Maui.Controls.ListViewCachingStrategy)" /> constructor, XAML for Microsoft.Maui.Controls provides a XAML attribute for a non-existent property that corresponds to the caching strategy argument of the constructor. Application developers can set the <c>CachingStrategy</c> attribute to either of the <c>RecycleElement</c> (preferred) or <c>RetainElement</c> values to choose a caching strategy. For example:</para>
      <code lang="XAML"><![CDATA[
<ListView CachingStrategy="RecycleElement" >
    <ListView.ItemTemplate>
        <DataTemplate>
            <ViewCell>
                <!-- ... -->
            </ViewCell>
        </DataTemplate>
    </ListView.ItemTemplate>
</ListView>]]></code>
      <para>
        Note: when developers specify <see cref="F:Microsoft.Maui.Controls.ListViewCachingStrategy.RecycleElement" />, <c>OnElementChanged</c> events are not raised when cells are recycled. Instead,  the cell is retained and its property values change when the binding context is updated to that of an available cell, <c>OnElementPropertyChanged</c> events are raised. Application developers should remember to listen for the correct events, and should note that their renderers will need to be updated if the default behavior changes to <see cref="F:Microsoft.Maui.Controls.ListViewCachingStrategy.RecycleElement" /> in a future release.
      </para>
      <para>
        Note: the UWP platform ignores <see cref="F:Microsoft.Maui.Controls.ListViewCachingStrategy.RetainElement" />, because it always uses caching to improve performance. Therefore, if the developer has opted not to use data bindings, they must use <see cref="M:Microsoft.Maui.Controls.ListView.OnBindingContextChanged" /> to update cell data on UWP, because it always behaves as if <see cref="F:Microsoft.Maui.Controls.ListViewCachingStrategy.RecycleElement" /> was specified.
      </para>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ListViewCachingStrategy.RetainElement">
            <summary>Indicates that for every item in the List View's <see cref="P:Microsoft.Maui.Controls.ItemsView`1.ItemsSource" /> property, a single unique element will be constructed from the DataTemplate.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.ListViewCachingStrategy.RecycleElement">
            <summary>Indicates that unneeded cells will have their binding contexts updated to that of a cell that is needed.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.ListViewCachingStrategy.RecycleElementAndDataTemplate">
            <summary>Indicates that, in addition to the behavior specified by <see cref="F:Microsoft.Maui.Controls.ListViewCachingStrategy.RecycleElement" />, <see cref="T:Microsoft.Maui.Controls.DataTemplate" /> objects that are selected by a <see cref="T:Microsoft.Maui.Controls.DataTemplateSelector" /> are cached by the data template type.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.ListViewSelectionMode">
            <summary>Enumerates values that control whether items in a list view can or cannot be selected.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ListViewSelectionMode.None">
            <summary>Indicates that items cannot be selected.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.ListViewSelectionMode.Single">
            <summary>Indicates that a single item can be selected.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.MeasureFlags">
            <summary>Enumerates values that tell whether margins are included when laying out windows.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.MeasureFlags.None">
            <summary>Do not include margins in a layout measurement.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.MeasureFlags.IncludeMargins">
            <summary>Include margins in a layout measurement.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.MenuFlyoutSeparator">
            <summary>
            Represents a horizontal line that separates items in a menu. 
            </summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.MessagingCenter">
            <summary>Associates a callback on subscribers with a specific message name.</summary><remarks>
      <para>The following shows a simple example of a strongly-typed callback using <see cref="T:Microsoft.Maui.Controls.MessagingCenter" /> is:</para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[
public class SubscriberThing 
{
	public int IntProperty { get; set; }
}
    
var subscriber = new SubscriberThing();
MessagingCenter.Subscribe<MyPage, int> (subscriber, "IntPropertyMessage", (s, e) => {
	subscriber.IntProperty = e; 
});
    
//...later...
    
MessagingCenter.Send<MyPage, int>(this, "IntPropertyMessage", 2);
Assert.AreEqual(2, subscriber.IntProperty);
          ]]></code>
      </example>
    </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.MessagingCenter.Instance">
            <summary>Gets the singleton instance of the <see cref="T:Microsoft.Maui.Controls.MessagingCenter" />.</summary><value>The singleton instance of the <see cref="T:Microsoft.Maui.Controls.MessagingCenter" />.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ModalEventArgs">
            <summary>Base class for <see cref="T:Microsoft.Maui.Controls.ModalPushedEventArgs" />, <see cref="T:Microsoft.Maui.Controls.ModalPushingEventArgs" />, <see cref="T:Microsoft.Maui.Controls.ModalPoppedEventArgs" />, and <see cref="T:Microsoft.Maui.Controls.ModalPoppingEventArgs" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ModalEventArgs.Modal">
            <summary>Gets or sets the page whose navigation triggered the event.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ModalPoppedEventArgs">
            <summary>Arguments for the event that is raised when a modal window is popped from the navigation stack.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ModalPoppedEventArgs.#ctor(Microsoft.Maui.Controls.Page)">
            <param name="modal">The modal page.</param><summary>Constructs a new <see cref="T:Microsoft.Maui.Controls.ModalPoppedEventArgs" /> object for the page that was just popped.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ModalPoppingEventArgs">
            <summary>Arguments for the event that is raised when a modal window is popping from the navigation stack.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ModalPoppingEventArgs.#ctor(Microsoft.Maui.Controls.Page)">
            <param name="modal">The modal page.</param><summary>Constructs a new <see cref="T:Microsoft.Maui.Controls.ModalPoppingEventArgs" /> object for the page that is being popped.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ModalPoppingEventArgs.Cancel">
            <summary>Gets or sets a value that tells whether the modal navigation was canceled.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ModalPushedEventArgs">
            <summary>Arguments for the event that is raised when a modal window is pushed onto the navigation stack.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ModalPushedEventArgs.#ctor(Microsoft.Maui.Controls.Page)">
            <param name="modal">The modal page.</param><summary>Constructs a new <see cref="T:Microsoft.Maui.Controls.ModalPushedEventArgs" /> object for the page that was just popped.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ModalPushingEventArgs">
            <summary>Arguments for the event that is raised when a modal window is being pushed onto the navigation stack.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ModalPushingEventArgs.#ctor(Microsoft.Maui.Controls.Page)">
            <param name="modal">The modal page.</param><summary>Constructs a new <see cref="T:Microsoft.Maui.Controls.ModalPushingEventArgs" /> object for the page that is being pushed.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.MultiBinding">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.MultiBinding.Converter">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.MultiBinding.ConverterParameter">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.MultiBinding.Bindings">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.NamedSize">
            <summary>Represents pre-defined font sizes.</summary><remarks>The exact pixel-value depends on the platform on which Microsoft.Maui.Controls is running.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.NamedSize.Default">
            <summary>The default font size.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.NamedSize.Micro">
            <summary>The smallest readable font size for the device. Think about this like legal footnotes.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.NamedSize.Small">
            <summary>A small but readable font size. Use this for block of text.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.NamedSize.Medium">
            <summary>A default font size, to be used in stand alone labels or buttons.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.NamedSize.Large">
            <summary>A Large font size, for titles or other important text elements.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.NamedSize.Body">
            <summary>Body.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.NamedSize.Header">
            <summary>Header.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.NamedSize.Title">
            <summary>Title.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.NamedSize.Subtitle">
            <summary>Subtitle.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.NamedSize.Caption">
            <summary>Caption.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.NameScopeExtensions">
            <summary>Extension methods for <see cref="T:Microsoft.Maui.Controls.Element" />  that adds a strongly-typed FindByName method.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.NavigationEventArgs">
            <summary>EventArgs for the NavigationPage's navigation events.</summary><remarks>
    </remarks><altmember cref="E:Microsoft.Maui.Controls.NavigationPage.Pushed" /><altmember cref="E:Microsoft.Maui.Controls.NavigationPage.Popped" /><altmember cref="E:Microsoft.Maui.Controls.NavigationPage.PoppedToRoot" />
        </member>
        <member name="M:Microsoft.Maui.Controls.NavigationEventArgs.#ctor(Microsoft.Maui.Controls.Page)">
            <param name="page">The page that was popped or is newly visible.</param><summary>
        </summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.NavigationEventArgs.Page">
            <summary>Gets the page that was removed or is newly visible.</summary><value>
        </value><remarks>
          <para>For <see cref="E:Microsoft.Maui.Controls.NavigationPage.Pushed" />, this is the <see cref="T:Microsoft.Maui.Controls.Page" /> that was removed. For <see cref="E:Microsoft.Maui.Controls.NavigationPage.Pushed" />
					and <see cref="E:Microsoft.Maui.Controls.NavigationPage.PoppedToRoot" /> it is the newly visible page, the pushed page or the root respectively.</para>
        </remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.On">
            <summary>Class that is used within <c>OnPlatform</c> tags in XAML when specifying values on platforms.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.On.Platform">
            <summary>Gets or sets the list of specified platforms.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.On.Value">
            <summary>Gets or sets the value on the current platform.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.OpenGLView">
            <summary>A <see cref="T:Microsoft.Maui.Controls.View" /> that displays OpenGL content.</summary><remarks>
      <para>
        <see cref="T:Microsoft.Maui.Controls.OpenGLView" />s are easiest to program using Shared Projects, in which case the reference to OpenTK is straightforward. The following example shows a simple OpenGL app with a render loop:</para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[
using Microsoft.Maui.Controls;
using OpenTK.Graphics.ES30;
    
namespace opengl
{
    public class OpenGLPage : ContentPage
    {
        float red, green, blue;
    
        public OpenGLPage ()
        {
            Title = "OpenGL";
            var view = new OpenGLView { HasRenderLoop = true };
            var toggle = new Switch { IsToggled = true };
            var button = new Button { Text = "Display" };
    
            view.HeightRequest = 300;
            view.WidthRequest = 300;
    
            view.OnDisplay = r => {
    
                GL.ClearColor (red, green, blue, 1.0f);
                GL.Clear ((ClearBufferMask.ColorBufferBit | ClearBufferMask.DepthBufferBit));
    
                red += 0.01f;
                if (red >= 1.0f)
                    red -= 1.0f;
                green += 0.02f;
                if (green >= 1.0f)
                    green -= 1.0f;
                blue += 0.03f;
                if (blue >= 1.0f)
                    blue -= 1.0f;
            };
    
            toggle.Toggled += (s, a) => {
                view.HasRenderLoop = toggle.IsToggled;
            };
            button.Clicked += (s, a) => view.Display ();
    
            var stack = new StackLayout { 
                Padding = new Size (20, 20),
                Children = {view, toggle, button}
            };
    
            Content = stack;
        }
    }
}
    
          ]]></code>
      </example>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/OpenGLView.Example.png" />
      </para>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.OpenGLView.HasRenderLoopProperty">
            <summary>Identifies the <see cref="P:Microsoft.Maui.Controls.OpenGLView.HasRenderLoop" /> bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.OpenGLView.HasRenderLoop">
            <summary>Whether this <see cref="T:Microsoft.Maui.Controls.OpenGLView" /> has a custom rendering loop.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.OpenGLView.OnDisplay">
            <summary>Overridden to create a custom rendering loop.</summary><value>To be added.</value><remarks>
          <para>When overridden, creates a custom renderer: </para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
    var view = new OpenGLView { HasRenderLoop = true };
    view.OnDisplay = r => {
    
        GL.ClearColor (red, green, blue, 1.0f);
        GL.Clear ((ClearBufferMask.ColorBufferBit | ClearBufferMask.DepthBufferBit));
    
        red += 0.01f;
        if (red >= 1.0f)
            red -= 1.0f;
        green += 0.02f;
        if (green >= 1.0f)
            green -= 1.0f;
        blue += 0.03f;
        if (blue >= 1.0f)
            blue -= 1.0f;
    };
          ]]></code>
          </example>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.OpenGLView.Display">
            <summary>Called prior to rendering.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.OpenGLView.#ctor">
            <summary>Creates a new <see cref="T:Microsoft.Maui.Controls.OpenGLView" /> object with default values.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.OpenGLView.On``1">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Controls.OrientationStateTrigger">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.OrientationStateTrigger.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.OrientationStateTrigger.Orientation">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.OrientationStateTrigger.OrientationProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PanGestureRecognizer">
            <summary>A gesture recognizer for panning content that is larger than its parent view.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PanGestureRecognizer.TouchPointsProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.PanGestureRecognizer.TouchPoints" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.PanGestureRecognizer.TouchPoints">
            <summary>Gets or sets the number of touch points in the gesture.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PanUpdatedEventArgs">
            <summary>Event that is raised when a pan gesture updates.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PanUpdatedEventArgs.#ctor(Microsoft.Maui.GestureStatus,System.Int32,System.Double,System.Double)">
            <param name="type">Whether the gesture just began, is continuing, was completed, or is canceled.</param><param name="gestureId">An identifier for the gesture.</param><param name="totalx">The total change in the X direction since the beginning of the gesture.</param><param name="totaly">The total change in the Y direction since the beginning of the gesture.</param><summary>Creates a new <see cref="T:Microsoft.Maui.Controls.PanUpdatedEventArgs" /> with the specified values.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PanUpdatedEventArgs.#ctor(Microsoft.Maui.GestureStatus,System.Int32)">
            <param name="type">Whether the gesture just began, is continuing, was completed, or is canceled.</param><param name="gestureId">An identifier for the gesture.</param><summary>Creates a new <see cref="T:Microsoft.Maui.Controls.PanUpdatedEventArgs" /> with the specified values.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.PanUpdatedEventArgs.GestureId">
            <summary>Gets the identifier for the gesture that raised the event.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.PanUpdatedEventArgs.StatusType">
            <summary>Gets a value that tells if this event is for a newly started gesture, a running gesture, a completed gesture, or a canceled gesture.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.PanUpdatedEventArgs.TotalX">
            <summary>Gets the total change in the X direction since the beginning of the gesture.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.PanUpdatedEventArgs.TotalY">
            <summary>Gets the total change in the Y direction since the beginning of the gesture.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PinchGestureRecognizer">
            <summary>Recognizer for pinch gestures.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PinchGestureUpdatedEventArgs">
            <summary>Event arguments for the <see cref="E:Microsoft.Maui.Controls.PinchGestureRecognizer.PinchUpdated" /> event.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PinchGestureUpdatedEventArgs.#ctor(Microsoft.Maui.GestureStatus,System.Double,Microsoft.Maui.Graphics.Point)">
            <param name="status">Whether the gesture is starting, running, or has ended.</param><param name="scale">The current scale of the pinch gesture.</param><param name="origin">The updated origin of the pinch gesture.</param><summary>Constructs a new <see cref="T:Microsoft.Maui.Controls.PinchGestureUpdatedEventArgs" /> object with the specified values.</summary><remarks>
          <para>The origin of the pinch is the center of the pinch gesture, and changes if the user translates their pinch while they scale. Application developers may want to store the pinch origin when the gesture begins and use it for all scaling operations for that gesture.</para>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PinchGestureUpdatedEventArgs.#ctor(Microsoft.Maui.GestureStatus)">
            <param name="status">The new gesture status.</param><summary>Constructs a new <see cref="T:Microsoft.Maui.Controls.PinchGestureUpdatedEventArgs" /> object with default values.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.PinchGestureUpdatedEventArgs.Scale">
            <summary>The relative size of the user's pinch gesture since the last update was received.</summary><value>The distance between the user's digits, divided by the last reported distance between the user's digits in the pinch gesture.</value><remarks>
          <para>The initial value of the <see cref="P:Microsoft.Maui.Controls.PinchGestureUpdatedEventArgs.Scale" /> property for each new pinch gesture is <c>1.0</c>.</para>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.PinchGestureUpdatedEventArgs.ScaleOrigin">
            <summary>The updated origin of the pinch gesture.</summary><value>The midpoint of the pinch gesture.</value><remarks>
          <para>The origin of the pinch is the center of the pinch gesture, and changes if the user translates their pinch while they scale. Application developers may want to store the pinch origin when the gesture begins and use it for all scaling operations for that gesture.</para>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.PinchGestureUpdatedEventArgs.Status">
            <summary>Whether the gesture started, is running, or has finished.</summary><value>Whether the gesture started, is running, or has finished.</value><remarks>
          <para>The origin of the pinch, <see cref="P:Microsoft.Maui.Controls.PinchGestureUpdatedEventArgs.ScaleOrigin" />, is the center of the pinch gesture, and changes if the user translates their pinch while they scale. Application developers may want to store the pinch origin when the gesture begins and use it for all scaling operations for that gesture.</para>
          <para>The initial value of the <see cref="P:Microsoft.Maui.Controls.PinchGestureUpdatedEventArgs.Scale" /> property for each new pinch gesture is <c>1.0</c>.</para>
        </remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.Application">
            <summary>AppCompat application instance on Android.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.Application.SendDisappearingEventOnPauseProperty">
            <summary>Backing store for the attached property that controls whether the disappearing event is sent when the application is paused.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.Application.GetSendDisappearingEventOnPause(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The platform specific element on which to perform the operation.</param><summary>Returns a Boolean value that tells whether the disappearing event is sent when the application is paused.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.Application.SetSendDisappearingEventOnPause(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">The platform specific element on which to perform the operation.</param><param name="value">The new property value to assign.</param><summary>Sets a Boolean value that controls whether the disappearing event is sent when the application is paused.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.Application.GetSendDisappearingEventOnPause(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.Application})">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><summary>Returns a Boolean value that tells whether the disappearing event is sent when the application is paused.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.Application.SendDisappearingEventOnPause(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.Application},System.Boolean)">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><param name="value">The new property value to assign.</param><summary>Sets a Boolean value that controls whether the disappearing event is sent when the application is paused.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.Application.SendAppearingEventOnResumeProperty">
            <summary>Backing store for the attached property that controls whether the appearing event is sent when the application resumes.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.Application.GetSendAppearingEventOnResume(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The platform specific element on which to perform the operation.</param><summary>Returns a Boolean value that tells whether the appearing event is sent when the application resumes.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.Application.SetSendAppearingEventOnResume(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">The platform specific element on which to perform the operation.</param><param name="value">The new property value to assign.</param><summary>Sets a Boolean value that controls whether the appearing event is sent when the application resumes.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.Application.GetSendAppearingEventOnResume(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.Application})">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><summary>Returns a Boolean value that tells whether the appearing event is sent when the application resumes.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.Application.SendAppearingEventOnResume(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.Application},System.Boolean)">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><param name="value">The new property value to assign.</param><summary>Sets a value that controls whether the appearing event is sent when the application resumes.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.Application.ShouldPreserveKeyboardOnResumeProperty">
            <summary>Backing store for the property that controls whether the keyboard state should be preserved when the application resumes.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.Application.GetShouldPreserveKeyboardOnResume(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The platform specific element on which to perform the operation.</param><summary>Returns a Boolean value that tells whether the keyboard state should be preserved when the application resumes.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.Application.SetShouldPreserveKeyboardOnResume(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">The platform specific element on which to perform the operation.</param><param name="value">The new property value to assign.</param><summary>Sets a Boolean value that controls whether the keyboard state should be preserved when the application resumes.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.Application.GetShouldPreserveKeyboardOnResume(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.Application})">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><summary>Returns a Boolean value that tells whether the keyboard state should be preserved when the application resumes.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.Application.ShouldPreserveKeyboardOnResume(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.Application},System.Boolean)">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><param name="value">The new property value to assign.</param><summary>Sets a Boolean value that controls whether the keyboard state should be preserved when the application resumes.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.NavigationPage">
            <summary>Appcompat platform specific navigation page.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.NavigationPage.BarHeightProperty">
            <summary>Backing store for the attached property that controls the height of the navigation bar.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.NavigationPage.GetBarHeight(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The element whose bar height to get.</param><summary>Gets the navigation bar height for the specified <paramref name="element" />.</summary><returns>The new bar height.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.NavigationPage.SetBarHeight(Microsoft.Maui.Controls.BindableObject,System.Int32)">
            <param name="element">The element whose bar height to set.</param><param name="value">The new bar height value.</param><summary>Sets the new bar height value for the element.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.NavigationPage.GetBarHeight(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.NavigationPage})">
            <param name="config">The platform configuration for the element whose bar height to get.</param><summary>Gets the navigation bar height for the specified element.</summary><returns>The new bar height.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.NavigationPage.SetBarHeight(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.NavigationPage},System.Int32)">
            <param name="config">The platform configuration for the element whose bar height to set.</param><param name="value">The new bar height value.</param><summary>Sets the new bar height value for the element and returns a fluid API object.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WindowSoftInputModeAdjust">
            <summary>Enumerates values that control how an on-screen input interface is visually accommodated.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WindowSoftInputModeAdjust.Pan">
            <summary>Indicates that the content of the control will pan, possibly off of the screen, to accommodate the input interface.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WindowSoftInputModeAdjust.Resize">
            <summary>Indicates that the content of the control will resize to accommodate the input interface.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WindowSoftInputModeAdjust.Unspecified">
            <summary>Indicates that the behavior of the control for oversized content is not specified.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Application">
            <summary>The application instance that Microsoft.Maui.Controls created on the Android platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Application.WindowSoftInputModeAdjustProperty">
            <summary>The backing store for the attached property that controls whether the soft input mode pans or resizes content to allow the display of the on-screen input UI.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Application.GetWindowSoftInputModeAdjust(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The platform specific element on which to perform the operation.</param><summary>Returns a value that tells whether the soft input mode of the provided <paramref name="element" /> pans or resizes its content to allow the display of the on-screen input UI.</summary><returns>A value that tells whether the soft input mode of the provided <paramref name="element" /> pans or resizes its content to allow the display of the on-screen input UI.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Application.SetWindowSoftInputModeAdjust(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WindowSoftInputModeAdjust)">
            <param name="element">The platform specific element on which to perform the operation.</param><param name="value">The new property value to assign.</param><summary>Sets a value that controls whether the soft input mode of the provided <paramref name="element" /> pans or resizes its content to allow the display of the on-screen input UI.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Application.GetWindowSoftInputModeAdjust(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.Application})">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><summary>Returns a value that tells whether the soft input mode of the provided platform configuration pans or resizes its content to allow the display of the on-screen input UI.</summary><returns>A value that tells whether the soft input mode of the provided platform configuration pans or resizes its content to allow the display of the on-screen input UI.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Application.UseWindowSoftInputModeAdjust(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.Application},Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WindowSoftInputModeAdjust)">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><param name="value">The new property value to assign.</param><summary>Sets a value that controls whether the soft input mode of the provided platform configuration pans or resizes its content to allow the display of the on-screen input UI.</summary><returns>A value that controls whether the soft input mode of the provided platform configuration pans or resizes its content to allow the display of the on-screen input UI.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Button">
            <summary>Controls padding and shadows for buttons on the Android platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Button.UseDefaultPaddingProperty">
            <summary>Backing store for the attached property that controls whether the button will use the default padding.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Button.GetUseDefaultPadding(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The Android button for which to get the padding behavior.</param><summary>Returns a Boolean value that tells whether the default padding will be used.</summary><returns>A Boolean value that tells whether the default padding will be used.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Button.SetUseDefaultPadding(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">The Android button whose padding behavior to set.</param><param name="value">
          <see langword="true" /> to use the default padding. Otherwise, <see langword="false" /></param><summary>Sets a Boolean value that controls whether the button will use the default padding.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Button.UseDefaultPadding(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.Button})">
            <param name="config">The configuration for the Android button whose padding behavior to check.</param><summary>Returns <see langword="true" /> if the button will use the default padding. Otherwise, returns <see langword="false" />.</summary><returns>
          <see langword="true" /> if the button will use the default padding. Otherwise, <see langword="false" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Button.SetUseDefaultPadding(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.Button},System.Boolean)">
            <param name="config">The configuration for the Android button whose padding behavior to set.</param><param name="value">
          <see langword="true" /> to use the default padding. Otherwise, <see langword="false" /></param><summary>Sets a Boolean value that controls whether the button will use the default padding.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Button.UseDefaultShadowProperty">
            <summary>Backing store for the attached property that controls whether the button will use the default shadow.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Button.GetUseDefaultShadow(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The Android button for which to get the shadow behavior.</param><summary>Returns a Boolean value that tells whether the default shadow will be used.</summary><returns>A Boolean value that tells whether the default shadow will be used.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Button.SetUseDefaultShadow(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">The Android button whose shadow behavior to set.</param><param name="value">
          <see langword="true" /> to use the default shadow. Otherwise, <see langword="false" /></param><summary>Sets a Boolean value that controls whether the button will use the default shadow.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Button.UseDefaultShadow(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.Button})">
            <param name="config">The configuration for the Android button whose shadow behavior to check.</param><summary>Returns <see langword="true" /> if the button will use the default shadow. Otherwise, returns <see langword="false" />.</summary><returns>
          <see langword="true" /> if the button will use the default shadow. Otherwise, <see langword="false" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Button.SetUseDefaultShadow(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.Button},System.Boolean)">
            <param name="config">The configuration for the Android button whose shadow behavior to set.</param><param name="value">
          <see langword="true" /> to use the default shadow. Otherwise, <see langword="false" /></param><summary>Sets a Boolean value that controls whether the button will use the default shadow.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Entry">
            <summary>Controls input method editor (IME) options for entry fields on the Android platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Entry.ImeOptionsProperty">
            <summary>Backing store for the attached property that specifies input method editor options.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Entry.GetImeOptions(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The Android entry for which to get the input method editor options.</param><summary>Returns flags that specify input method editor options, such as the kind of action that is sent by the editor.</summary><returns>The flags that specify input method editor options, such as the kind of action that is sent by the editor.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Entry.SetImeOptions(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags)">
            <param name="element">The Android entry for which to set the input method editor options.</param><param name="value">The new options to set.</param><summary>Sets the attached property that specifies input method editor options</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Entry.ImeOptions(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.Entry})">
            <param name="config">The platform configuration for the Android entry for which to get the input method editor options.</param><summary>Returns flags that specify input method editor options, such as the kind of action that is sent by the editor.</summary><returns>The flags that specify input method editor options, such as the kind of action that is sent by the editor.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Entry.SetImeOptions(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.Entry},Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags)">
            <param name="config">The platform configuration for the Android entry for which to set the input method editor options.</param><param name="value">The new options to set.</param><summary>Sets the attached property that specifies input method editor options</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags">
            <summary>Enumerates input method editor (IME) options for entry fields on the Android platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags.Default">
            <summary>The null IME option, which indicates no options.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags.None">
            <summary>Indicates no action will be made available.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags.Go">
            <summary>Indicates that the action key will send a <c>go</c> action.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags.Search">
            <summary>Indicates that the action key will send a <c>search</c> action.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags.Send">
            <summary>Indicates that the action key will send a <c>send</c> action.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags.Next">
            <summary>Indicates that the action key will send a <c>next</c> action.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags.Done">
            <summary>Indicates that the action key will send a <c>done</c> action.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags.Previous">
            <summary>Indicates that the action key will send a <c>previous</c> action.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags.ImeMaskAction">
            <summary>The mask to select action options.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags.NoPersonalizedLearning">
            <summary>Indicates that the spellchecker will neither learn from the user, nor suggest corrections based on what the user has previously typed.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags.NoFullscreen">
            <summary>Indicates that the editor UI should not go fullscreen.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags.NoExtractUi">
            <summary>Indicates that no UI will be shown for extracted text.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags.NoAccessoryAction">
            <summary>Indicates that no UI will be displayed for custom actions.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.IsShadowEnabledProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.GetIsShadowEnabled(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.SetIsShadowEnabled(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.GetIsShadowEnabled(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.ImageButton})">
            <param name="config">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.SetIsShadowEnabled(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.ImageButton},System.Boolean)">
            <param name="config">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.ShadowColorProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.GetShadowColor(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.SetShadowColor(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Graphics.Color)">
            <param name="element">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.GetShadowColor(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.ImageButton})">
            <param name="config">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.SetShadowColor(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.ImageButton},Microsoft.Maui.Graphics.Color)">
            <param name="config">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.ShadowRadiusProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.GetShadowRadius(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.SetShadowRadius(Microsoft.Maui.Controls.BindableObject,System.Double)">
            <param name="element">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.GetShadowRadius(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.ImageButton})">
            <param name="config">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.SetShadowRadius(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.ImageButton},System.Double)">
            <param name="config">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.ShadowOffsetProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.GetShadowOffset(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.SetShadowOffset(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Graphics.Size)">
            <param name="element">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.GetShadowOffset(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.ImageButton})">
            <param name="config">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.SetShadowOffset(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.ImageButton},Microsoft.Maui.Graphics.Size)">
            <param name="config">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ListView">
            <summary>The list view instance that Microsoft.Maui.Controls created on the Android platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ListView.IsFastScrollEnabledProperty">
            <summary>Backing store for the attached property that controls whether fast scrolling is enabled.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ListView.GetIsFastScrollEnabled(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The platform specific element on which to perform the operation.</param><summary>Returns a Boolean value that tells whether fast scrolling is enabled.</summary><returns>A Boolean value that tells whether fast scrolling is enabled.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ListView.SetIsFastScrollEnabled(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">The platform specific element on which to perform the operation.</param><param name="value">The new property value to assign.</param><summary>Sets the attached property that controls whether fast scrolling is enabled.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ListView.IsFastScrollEnabled(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.ListView})">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><summary>Returns a Boolean value that tells whether fast scrolling is enabled.</summary><returns>A Boolean value that tells whether fast scrolling is enabled.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ListView.SetIsFastScrollEnabled(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.ListView},System.Boolean)">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><param name="value">The new property value to assign.</param><summary>Sets the attached property that controls whether fast scrolling is enabled.</summary><returns>The updated configuration object, on which more methods may be called.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ShellItem">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.SwipeView">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.SwipeView.SwipeTransitionModeProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.SwipeView.GetSwipeTransitionMode(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.SwipeView.SetSwipeTransitionMode(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.SwipeTransitionMode)">
            <param name="element">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.SwipeView.GetSwipeTransitionMode(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.SwipeView})">
            <param name="config">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.SwipeView.SetSwipeTransitionMode(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.SwipeView},Microsoft.Maui.SwipeTransitionMode)">
            <param name="config">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage">
            <summary>The tabbed page instance that Microsoft.Maui.Controls created on the Android platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.IsSwipePagingEnabledProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.IsSwipePagingEnabled(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.TabbedPage})" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.GetIsSwipePagingEnabled(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The platform specific element on which to perform the operation.</param><summary>Returns a Boolean value that tells whether swiped paging is enabled.</summary><returns>A Boolean value that tells whether swipe paging is enabled.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.SetIsSwipePagingEnabled(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">The platform specific element on which to perform the operation.</param><param name="value">The new property value to assign.</param><summary>Sets a value that controls whether page swiping is enabled to the provided <paramref name="value" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.IsSwipePagingEnabled(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.TabbedPage})">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><summary>Gets a Boolean value that controls whether swipe paging is enabled.</summary><returns>
          <see langword="true" /> if swiped paging is enabled. Otherwise, <see langword="false" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.SetIsSwipePagingEnabled(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.TabbedPage},System.Boolean)">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><param name="value">The new property value to assign.</param><summary>Sets a value that controls whether page swiping is enabled to the provided <paramref name="value" />.</summary><returns>The configuration that was updated.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.EnableSwipePaging(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.TabbedPage})">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><summary>Enables swiped paging.</summary><returns>The updated element on the Android platform.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.DisableSwipePaging(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.TabbedPage})">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><summary>Disables swiped paging.</summary><returns>The updated element on the Android platform.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.IsSmoothScrollEnabledProperty">
            <summary>The <see cref="T:Microsoft.Maui.Controls.BindableProperty" /> associated with the <see cref="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.IsSmoothScrollEnabled(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.TabbedPage})" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.GetIsSmoothScrollEnabled(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">To be added.</param><summary>Gets whether smooth scrolling is enabled for <paramref name="element" />.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.SetIsSmoothScrollEnabled(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">The <see cref="T:Microsoft.Maui.Controls.BindableObject" /> to adjust.</param><param name="value">
          <see langword="true" /> if <paramref name="element" /> should enable smooth scrolling.</param><summary>Enables or disables smooth scrolling on <paramref name="element" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.IsSmoothScrollEnabled(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.TabbedPage})">
            <param name="config">To be added.</param><summary>Gets whether smooth scrolling is enabled for <c>this</c><see cref="T:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage" />.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.SetIsSmoothScrollEnabled(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.TabbedPage},System.Boolean)">
            <param name="config">
          <c>this</c>
        </param><param name="value">
          <see langword="true" /> if smooth scrolling should be enabled.</param><summary>Enables or disables smooth scrolling on <c>this</c><see cref="T:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage" />.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.EnableSmoothScroll(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.TabbedPage})">
            <param name="config">To be added.</param><summary>Turns on smooth scrolling for <c>this</c><see cref="T:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage" />.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.DisableSmoothScroll(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.TabbedPage})">
            <param name="config">To be added.</param><summary>Turns off smooth scrolling for <c>this</c><see cref="T:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage" />.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.OffscreenPageLimitProperty">
            <summary>Backing store for the attached offscreen page limit property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.GetOffscreenPageLimit(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The platform specific element on which to perform the operation.</param><summary>Returns the number of offscreen pages are cached in memory.</summary><returns>The number of offscreen pages are cached in memory.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.SetOffscreenPageLimit(Microsoft.Maui.Controls.BindableObject,System.Int32)">
            <param name="element">The platform specific element on which to perform the operation.</param><param name="value">The new property value to assign.</param><summary>Sets the number of off-screen pages that are stored in memory to the provided <paramref name="value" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.OffscreenPageLimit(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.TabbedPage})">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><summary>Returns the number of offscreen pages are cached in memory.</summary><returns>The number of offscreen pages are cached in memory.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.SetOffscreenPageLimit(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.TabbedPage},System.Int32)">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><param name="value">The new property value to assign.</param><summary>Sets the number of off-screen pages that are stored in memory to the provided <paramref name="value" />.</summary><returns>The configuration that was updated.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.ToolbarPlacementProperty">
            <summary>Backing store for the attached property that controls the placement of the toolbar.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.GetToolbarPlacement(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The platform specific element on which to perform the operation.</param><summary>Returns the toolbar placement.</summary><returns>The toolbar placement.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.SetToolbarPlacement(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ToolbarPlacement)">
            <param name="element">The platform specific element whose value to set.</param><param name="value">The new toolbar placement value.</param><summary>Sets the toolbar placement.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.GetToolbarPlacement(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.TabbedPage})">
            <param name="config">The platform specific configuration for the element on which to perform the operation.</param><summary>Returns the toolbar placement.</summary><returns>The toolbar placement.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.SetToolbarPlacement(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.TabbedPage},Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ToolbarPlacement)">
            <param name="config">The platform configuration for the platform specific element whose value to set.</param><param name="value">The new toolbar placement value.</param><summary>Sets the toolbar placement.</summary><returns>A fluent object on which the developer can make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.GetMaxItemCount(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The platform specific element on which to perform the operation.</param><summary>Returns the maximum allowed number of items.</summary><returns>The maximum allowed number of items.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.GetMaxItemCount(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.TabbedPage})">
            <param name="config">The platform specific configuration for the element on which to perform the operation.</param><summary>Returns the maximum allowed number of items.</summary><returns>The maximum allowed number of items.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ToolbarPlacement">
            <summary>Enumerates toolbar positions.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ToolbarPlacement.Default">
            <summary>Indicates that the toolbar is placed at the default location on the screen.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ToolbarPlacement.Top">
            <summary>Indicates that the toolbar is placed at the top of the screen.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ToolbarPlacement.Bottom">
            <summary>Indicates that the toolbar is placed at the bottom of the screen.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ViewCell">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ViewCell.IsContextActionsLegacyModeEnabledProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ViewCell.GetIsContextActionsLegacyModeEnabled(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ViewCell.SetIsContextActionsLegacyModeEnabled(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ViewCell.GetIsContextActionsLegacyModeEnabled(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.Cell})">
            <param name="config">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ViewCell.SetIsContextActionsLegacyModeEnabled(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.Cell},System.Boolean)">
            <param name="config">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.VisualElement">
            <summary>Controls the legacy color mode and elevation for visual elements on the Android platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.VisualElement.ElevationProperty">
            <summary>Backing store for the elevation property for visual elements on the Android platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.VisualElement.GetElevation(Microsoft.Maui.Controls.VisualElement)">
            <param name="element">The visual element on the Android platform whose elevation to get.</param><summary>Gets the elevation for the element.</summary><returns>The elevation for the element.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.VisualElement.SetElevation(Microsoft.Maui.Controls.VisualElement,System.Nullable{System.Single})">
            <param name="element">The visual element on the Android platform whose elevation to set.</param><param name="value">The new elevation value.</param><summary>Sets the elevation for the visual element.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.VisualElement.GetElevation(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.VisualElement})">
            <param name="config">The platform configuration for the visual element on the Android platform whose elevation to get.</param><summary>Gets the elevation for the element.</summary><returns>The elevation for the element.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.VisualElement.SetElevation(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.VisualElement},System.Nullable{System.Single})">
            <param name="config">The visual element on the Android platform whose elevation to set.</param><param name="value">The new elevation value.</param><summary>Sets the elevation for the visual element.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.VisualElement.IsLegacyColorModeEnabledProperty">
            <summary>Backing store for the attached property that controls whether the legacy color mode is enabled.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.VisualElement.GetIsLegacyColorModeEnabled(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The visual element on the Android platform whose legacy color mode status to get.</param><summary>Gets a Boolean value that tells whether the legacy color mode is enabled.</summary><returns>A Boolean value that tells whether the legacy color mode is enabled.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.VisualElement.SetIsLegacyColorModeEnabled(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">The platform configuration for the visual element on the Android platform whose legacy color mode status to set.</param><param name="value">
          <see langword="true" /> to enable legacy color mode. Otherwise, <see langword="false" />.</param><summary>Sets a Boolean value that controls whether the legacy color mode is enabled.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.VisualElement.GetIsLegacyColorModeEnabled(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.VisualElement})">
            <param name="config">The platform configuration for the visual element on the Android platform whose legacy color mode status to get.</param><summary>Gets a Boolean value that tells whether the legacy color mode is enabled.</summary><returns>A Boolean value that tells whether the legacy color mode is enabled.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.VisualElement.SetIsLegacyColorModeEnabled(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.VisualElement},System.Boolean)">
            <param name="config">The platform configuration for the visual element on the Android platform whose legacy color mode status to set.</param><param name="value">
          <see langword="true" /> to enable legacy color mode. Otherwise, <see langword="false" />.</param><summary>Sets a Boolean value that controls whether the legacy color mode is enabled.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.MixedContentHandling">
            <summary>Enumerates web view behaviors when handling mixed content.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.MixedContentHandling.AlwaysAllow">
            <summary>Allow all content, whether secure or insecure.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.MixedContentHandling.NeverAllow">
            <summary>Never allow insecure content when loading from a secure URL.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.MixedContentHandling.CompatibilityMode">
            <summary>Selectively allow both secure and insecure content in a way that is not controlled by the application developer.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WebView">
            <summary>Controls the mixed content mode on web views on the Android platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WebView.MixedContentModeProperty">
            <summary>Backing store for the attached property that controls the loading behavior for content that is a mix of secure and insecure content.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WebView.GetMixedContentMode(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The Android web view for which to get the loading behavior for content that is a mix of secure and insecure content.</param><summary>Returns the mixed content mode for the web view.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WebView.SetMixedContentMode(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.MixedContentHandling)">
            <param name="element">The Android web view for which to set the loading behavior for content that is a mix of secure and insecure content.</param><param name="value">The new mixed content mode.</param><summary>Sets the mixed content mode for the web view.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WebView.MixedContentMode(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.WebView})">
            <param name="config">The platform configuration for the Android web view for which to get the loading behavior for content that is a mix of secure and insecure content.</param><summary>Gets the mixed content loading behavior.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WebView.SetMixedContentMode(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.WebView},Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.MixedContentHandling)">
            <param name="config">The platform configuration for the Android web view for which to set the loading behavior for content that is a mix of secure and insecure content.</param><param name="value">The new mixed content mode.</param><summary>Sets the mixed content mode for the web view.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WebView.EnableZoomControlsProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WebView.GetEnableZoomControls(Microsoft.Maui.Controls.WebView)">
            <param name="element">The element on which to perform the operation.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WebView.SetEnableZoomControls(Microsoft.Maui.Controls.WebView,System.Boolean)">
            <param name="element">The element on which to perform the operation.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WebView.EnableZoomControls(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.WebView},System.Boolean)">
            <param name="config">The platform configuration for the element on which to perform the operation.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WebView.ZoomControlsEnabled(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.WebView})">
            <param name="config">The platform configuration for the element on which to perform the operation.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WebView.SetEnableZoomControls(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.WebView},System.Boolean)">
            <param name="config">The platform configuration for the element on which to perform the operation.</param><param name="value">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WebView.DisplayZoomControlsProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WebView.GetDisplayZoomControls(Microsoft.Maui.Controls.WebView)">
            <param name="element">The element on which to perform the operation.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WebView.SetDisplayZoomControls(Microsoft.Maui.Controls.WebView,System.Boolean)">
            <param name="element">The element on which to perform the operation.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WebView.DisplayZoomControls(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.WebView},System.Boolean)">
            <param name="config">The platform configuration for the element on which to perform the operation.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WebView.ZoomControlsDisplayed(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.WebView})">
            <param name="config">The platform configuration for the element on which to perform the operation.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WebView.SetDisplayZoomControls(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Android,Microsoft.Maui.Controls.WebView},System.Boolean)">
            <param name="config">The platform configuration for the element on which to perform the operation.</param><param name="value">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.Android">
            <summary>Marker class that identifies the Android platform.</summary><remarks>
      <para>Developers specify the type name of this marker class to the <see cref="M:Microsoft.Maui.Controls.IElementConfiguration`1.On``1" /> method to specify the underlying Android control on which to run a platform-specific effect.</para>
    </remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.iOS">
            <summary>Marker class that identifies the iOS platform.</summary><remarks>
      <para>Developers specify the type name of this marker class to the <see cref="M:Microsoft.Maui.Controls.IElementConfiguration`1.On``1" /> method to specify the underlying iOS control on which to run a platform-specific effect.</para>
    </remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.Windows">
            <summary>Marker class that identifies the Windows platform.</summary><remarks>
      <para>Developers specify the type name of this marker class to the <see cref="M:Microsoft.Maui.Controls.IElementConfiguration`1.On``1" /> method to specify the underlying Windows control on which to run a platform-specific effect.</para>
    </remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.Tizen">
            <summary>Marker class that identifies the Tizen platform.</summary><remarks>
      <para>Developers specify the type name of this marker class to the <see cref="M:Microsoft.Maui.Controls.IElementConfiguration`1.On``1" /> method to specify the underlying Tizen control on which to run a platform-specific effect.</para>
    </remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.macOS">
            <summary>Marker class that identifies the macOS platform.</summary><remarks>Developers specify the type name of this marker class to the <see cref="M:Microsoft.Maui.Controls.IElementConfiguration`1.On``1" /> method to specify the underlying iOS control on which to run a platform-specific effect.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.GTK">
            <summary>Marker class that identifies the Linux platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.BoxView">
            <summary>Controls the presence of the corner radius of box views on the GTK platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.BoxView.HasCornerRadiusProperty">
            <summary>Backing store for the attached property that controls whether the box view has a corner radius.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.BoxView.GetHasCornerRadius(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The box view element on the GTK platform whose corner radius to get.</param><summary>Returns a Boolean value that tells whether the box view has a corner radius set.</summary><returns>A Boolean value that tells whether the box view has a corner radius set.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.BoxView.SetHasCornerRadius(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">The box view element on the GTK platform whose corner radius presence to set.</param><param name="tabPosition">The new corner radius presence value.</param><summary>Sets the corner radius presence.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.BoxView.GetHasCornerRadius(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.GTK,Microsoft.Maui.Controls.BoxView})">
            <param name="config">The platform configuration for the box view element on the GTK platform whose corner radius to get.</param><summary>Returns a Boolean value that tells whether the box view has a corner radius set.</summary><returns>A Boolean value that tells whether the box view has a corner radius set.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.BoxView.SetHasCornerRadius(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.GTK,Microsoft.Maui.Controls.BoxView},System.Boolean)">
            <param name="config">The platform configuration for the  element on the GTK platform whose  to set.</param><param name="value">The new corner radius presence value</param><summary>Sets the corner radius presence.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.NavigationPage">
            <summary>Provides access to the back button icon on navigation pages on the GTK platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.NavigationPage.BackButtonIconProperty">
            <summary>Backing store for the attached property that stores the back button icon.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.NavigationPage.GetBackButtonIcon(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The navigation page on the GTK platform whose back button icon to get.</param><summary>Gets the icon for the back button.</summary><returns>The path to the back button icon.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.NavigationPage.SetBackButtonIcon(Microsoft.Maui.Controls.BindableObject,System.String)">
            <param name="element">The navigation page on the GTK platform whose back button icon to get.</param><param name="backButtonIcon">The new back button icon path.</param><summary>Sets the path to the back button icon.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.NavigationPage.GetBackButtonIcon(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.GTK,Microsoft.Maui.Controls.NavigationPage})">
            <param name="config">The platform configuration for the navigation page on the GTK platform whose back button icon to get.</param><summary>Gets the path to the back button icon.</summary><returns>The path to the back button icon.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.NavigationPage.SetBackButtonIcon(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.GTK,Microsoft.Maui.Controls.NavigationPage},System.String)">
            <param name="config">The platform configuration for the navigation page on the GTK platform whose back button icon to set.</param><param name="value">The new back button icon path.</param><summary>Sets the path to the back button icon.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.TabbedPage">
            <summary>Controls the tab position on tabbed pages on the GTK platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.TabbedPage.TabPositionProperty">
            <summary>Backing store for the attached property that controls the tab position.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.TabbedPage.GetTabPosition(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The tabbed page on the GTK platform whose tab position to get.</param><summary>Gets the tab position.</summary><returns>The tab position.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.TabbedPage.SetTabPosition(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.TabPosition)">
            <param name="element">The tabbed page on the GTK platform whose tab position to set.</param><param name="tabPosition">The new tab position.</param><summary>Sets the tab position.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.TabbedPage.GetTabPosition(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.GTK,Microsoft.Maui.Controls.TabbedPage})">
            <param name="config">The platform configuration for the tabbed page on the GTK platform whose tab position to get.</param><summary>Gets the tab position.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.TabbedPage.SetTabPosition(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.GTK,Microsoft.Maui.Controls.TabbedPage},Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.TabPosition)">
            <param name="config">The platform configuration for the tabbed page on the GTK platform whose tab position to set.</param><param name="value">The new tab position.</param><summary>Sets the tab position.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.TabPosition">
            <summary>Enumerates tab positions on a tabbed page on the GTK platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.TabPosition.Default">
            <summary>Indicates that the default tab location is used.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.TabPosition.Top">
            <summary>Indicates that the tabs are placed at the top of the navigation page.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.TabPosition.Bottom">
            <summary>Indicates that the tabs are placed at the bottom of the tabbed page.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Application">
            <summary>Provides control over simultaneous recognition for pan gesture recognizers.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Application.PanGestureRecognizerShouldRecognizeSimultaneouslyProperty">
            <summary>Backing store for the attached property that controls whether the pan gesture recognizer should participate in simultaneous recognition of gestures.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Application.GetPanGestureRecognizerShouldRecognizeSimultaneously(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The element on which to perform the operation.</param><summary>Returns a Boolean value that tells whether the pan gesture recognizer should participate in simultaneous recognition of gestures.</summary><returns>
          <see langword="true" /> for simultaneous recognition. Otherwise, <see langword="false" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Application.SetPanGestureRecognizerShouldRecognizeSimultaneously(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">The element on which to perform the operation.</param><param name="value">
          <see langword="true" /> for simultaneous recognition. Otherwise, <see langword="false" />.</param><summary>Sets a Boolean value that controls whether the pan gesture recognizer should participate in simultaneous recognition of gestures.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Application.GetPanGestureRecognizerShouldRecognizeSimultaneously(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.Application})">
            <param name="config">The platform configuration for the element on which to perform the operation.</param><summary>Returns a Boolean value that tells whether the pan gesture recognizer should participate in simultaneous recognition of gestures.</summary><returns>
          <see langword="true" /> for simultaneous recognition. Otherwise, <see langword="false" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Application.SetPanGestureRecognizerShouldRecognizeSimultaneously(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.Application},System.Boolean)">
            <param name="config">The platform configuration for the element on which to perform the operation.</param><param name="value">
          <see langword="true" /> for simultaneous recognition. Otherwise, <see langword="false" />.</param><summary>Sets a Boolean value that controls whether the pan gesture recognizer should participate in simultaneous recognition of gestures.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Application.HandleControlUpdatesOnMainThreadProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Application.GetHandleControlUpdatesOnMainThread(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The element on which to perform the operation.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Application.SetHandleControlUpdatesOnMainThread(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">The element on which to perform the operation.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Application.GetHandleControlUpdatesOnMainThread(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.Application})">
            <param name="config">The platform configuration for the element on which to perform the operation.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Application.SetHandleControlUpdatesOnMainThread(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.Application},System.Boolean)">
            <param name="config">The platform configuration for the element on which to perform the operation.</param><param name="value">To be added.</param><summary>To be added.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Application.EnableAccessibilityScalingForNamedFontSizesProperty">
            <summary>Backing store for the attached property that controls whether named font sizes should participate in the device's accessibility scaling.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Application.GetEnableAccessibilityScalingForNamedFontSizes(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The element on which to perform the operation.</param><summary>Returns a Boolean value that tells whether named font sizes should participate in the device's accessibility scaling.</summary><returns>
          <see langword="true" /> for device's accessibility scaling. Otherwise, <see langword="false" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Application.SetEnableAccessibilityScalingForNamedFontSizes(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">The element on which to perform the operation.</param><param name="value">
          <see langword="true" /> for device's accessibility scaling. Otherwise, <see langword="false" />.</param><summary>Sets a Boolean value that controls whether named font sizes should participate in the device's accessibility scaling.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Application.GetEnableAccessibilityScalingForNamedFontSizes(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.Application})">
            <param name="config">The platform configuration for the element on which to perform the operation.</param><summary>Returns a Boolean value that tells whether named font sizes should participate in the device's accessibility scaling.</summary><returns>
          <see langword="true" /> for device's accessibility scaling. Otherwise, <see langword="false" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Application.SetEnableAccessibilityScalingForNamedFontSizes(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.Application},System.Boolean)">
            <param name="config">The platform configuration for the element on which to perform the operation.</param><param name="value">
          <see langword="true" /> for device's accessibility scaling. Otherwise, <see langword="false" />.</param><summary>Sets a Boolean value that controls whether named font sizes should participate in the device's accessibility scaling.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.BlurEffectStyle">
            <summary>Enumerates blur effect styles.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.BlurEffectStyle.None">
            <summary>Indicates no blur.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.BlurEffectStyle.ExtraLight">
            <summary>
            Available in iOS 8.0 and later.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.BlurEffectStyle.Light">
            <summary>
            Available in iOS 8.0 and later.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.BlurEffectStyle.Dark">
            <summary>
            Available in iOS 8.0 and later.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Cell">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Cell.DefaultBackgroundColorProperty">
            <summary>The backing store for the <see cref="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Cell.DefaultBackgroundColor(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.Cell})" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Cell.GetDefaultBackgroundColor(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Cell.SetDefaultBackgroundColor(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Graphics.Color)">
            <param name="element">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Cell.DefaultBackgroundColor(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.Cell})">
            <param name="config">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Cell.SetDefaultBackgroundColor(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.Cell},Microsoft.Maui.Graphics.Color)">
            <param name="config">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.DatePicker">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.DatePicker.UpdateModeProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.DatePicker.GetUpdateMode(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.DatePicker.SetUpdateMode(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UpdateMode)">
            <param name="element">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.DatePicker.UpdateMode(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.DatePicker})">
            <param name="config">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.DatePicker.SetUpdateMode(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.DatePicker},Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UpdateMode)">
            <param name="config">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Entry">
            <summary>The entry instance that Microsoft.Maui.Controls created on the iOS platform.</summary><remarks>
      <para>Developers can use this platform-specific instance to control whether text in the entry instance will be resized to fit the available width. If font size adjustment is turned on, the control will progressively reduce the font sized down to a minimum value as the user enters text.</para>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Entry.AdjustsFontSizeToFitWidthProperty">
            <summary>Backing store for the attached property that controls whether the entry control automatically adjusts the font size.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Entry.CursorColorProperty">
            <summary>Backing store for the attached property that controls the color of the cursor.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Entry.GetAdjustsFontSizeToFitWidth(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The platform specific element on which to perform the operation.</param><summary>Returns a Boolean value that tells whether the entry control automatically adjusts the font size of text that the user enters.</summary><returns>A Boolean value that tells whether the entry control automatically adjusts the font size of text that the user enters.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Entry.SetAdjustsFontSizeToFitWidth(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">The platform specific element on which to perform the operation.</param><param name="value">The new property value to assign.</param><summary>Sets a Boolean value that tells whether the entry control automatically adjusts the font size of text that the user enters.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Entry.AdjustsFontSizeToFitWidth(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.Entry})">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><summary>Returns a Boolean value that tells whether the entry control automatically adjusts the font size.</summary><returns>A Boolean value that tells whether the entry control automatically adjusts the font size.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Entry.SetAdjustsFontSizeToFitWidth(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.Entry},System.Boolean)">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><param name="value">The new property value to assign.</param><summary>Sets a Boolean value that tells whether automatic font size adjusmtent is enabled on the element.</summary><returns>The updated configuration object on which developers can make successive method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Entry.EnableAdjustsFontSizeToFitWidth(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.Entry})">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><summary>Enables automatic font size adjustment on the platform-specific element.</summary><returns>The updated configuration object on which developers can make successive method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Entry.DisableAdjustsFontSizeToFitWidth(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.Entry})">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><summary>Disables automatic font size adjustment on the platform-specific element.</summary><returns>The updated configuration object on which developers can make successive method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Entry.GetCursorColor(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The element whose cursor color to get.</param><summary>Gets the color of the cursor.</summary><returns>The color of the cursor.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Entry.SetCursorColor(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Graphics.Color)">
            <param name="element">The element whose cursor color to Set.</param><param name="value">The new cursor color.</param><summary>Sets the color of the cursor.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Entry.GetCursorColor(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.Entry})">
            <param name="config">The platform configuration for the element whose cursor color to get.</param><summary>Gets the color of the cursor.</summary><returns>The color of the cursor.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Entry.SetCursorColor(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.Entry},Microsoft.Maui.Graphics.Color)">
            <param name="config">The platform configuration for the element whose cursor color to Set.</param><param name="value">The new cursor color.</param><summary>Sets the color of the cursor and returns a fluent object.</summary><returns>A fluent object on which the developer can make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.FlyoutPage">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.FlyoutPage.ApplyShadowProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.FlyoutPage.GetApplyShadow(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.FlyoutPage.SetApplyShadow(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.FlyoutPage.SetApplyShadow(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.FlyoutPage},System.Boolean)">
            <param name="config">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.FlyoutPage.GetApplyShadow(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.FlyoutPage})">
            <param name="config">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.GroupHeaderStyle">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.GroupHeaderStyle.Plain">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.GroupHeaderStyle.Grouped">
            <summary>To be added.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.LargeTitleDisplayMode">
            <summary>Enumerates preferences for displaying large titles.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.LargeTitleDisplayMode.Automatic">
            <summary>Display large titles if the previous screen had displayed large titles.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.LargeTitleDisplayMode.Always">
            <summary>Always display large titles.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.LargeTitleDisplayMode.Never">
            <summary>Never display large titles.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ListView">
            <summary>Provides access to the separator style for list views on the iOS platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ListView.SeparatorStyleProperty">
            <summary>Backing store for the attached property that controls the separator style.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ListView.GetSeparatorStyle(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The list view element whose separator style to get.</param><summary>Returns the separator style for a list view.</summary><returns>The separator style for a list view.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ListView.SetSeparatorStyle(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SeparatorStyle)">
            <param name="element">The list view element whose separator style to set</param><param name="value">The new separator style value.</param><summary>Sets the separator style for a list view.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ListView.GetSeparatorStyle(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.ListView})">
            <param name="config">The platform configuration for the list view element whose separator style to get.</param><summary>Returns the separator style for a list view.</summary><returns>The separator style for a list view.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ListView.SetSeparatorStyle(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.ListView},Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SeparatorStyle)">
            <param name="config">The platform configuration for the list view element whose separator style to set.</param><param name="value">The new separator style value.</param><summary>Sets the separator style for a list view.</summary><returns>A fluent object on which the developer can make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ListView.GroupHeaderStyleProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ListView.GetGroupHeaderStyle(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ListView.SetGroupHeaderStyle(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.GroupHeaderStyle)">
            <param name="element">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ListView.GetGroupHeaderStyle(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.ListView})">
            <param name="config">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ListView.SetGroupHeaderStyle(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.ListView},Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.GroupHeaderStyle)">
            <param name="config">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ListView.RowAnimationsEnabledProperty">
            <summary>The backing store for the <see cref="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ListView.RowAnimationsEnabled(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.ListView})" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ListView.GetRowAnimationsEnabled(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ListView.SetRowAnimationsEnabled(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ListView.SetRowAnimationsEnabled(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.ListView},System.Boolean)">
            <param name="config">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ListView.RowAnimationsEnabled(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.ListView})">
            <param name="config">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage">
            <summary>The navigation page instance that Microsoft.Maui.Controls created on the iOS platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.IsNavigationBarTranslucentProperty">
            <summary>Backing store for the <see cref="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.IsNavigationBarTranslucent(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.NavigationPage})" /> method.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.GetIsNavigationBarTranslucent(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The platform specific element on which to perform the operation.</param><summary>Returns a Boolean value that tells whether the navigation bar on the platform-specific navigation page is translucent.</summary><returns>A Boolean value that tells whether the navigation bar on the platform-specific navigation page is translucent.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.SetIsNavigationBarTranslucent(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">The platform specific element on which to perform the operation.</param><param name="value">The new property value to assign.</param><summary>Sets a Boolean value that controls whether the navigation bar on the platform-specific navigation page is translucent.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.IsNavigationBarTranslucent(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.NavigationPage})">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><summary>Returns a Boolean value that tells whether the navigation bar on the platform-specific navigation page is translucent.</summary><returns>A Boolean value that tells whether the navigation bar on the platform-specific navigation page is translucent.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.SetIsNavigationBarTranslucent(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.NavigationPage},System.Boolean)">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><param name="value">The new property value to assign.</param><summary>Sets a Boolean value that controls whether the navigation bar on the platform-specific navigation page is translucent.</summary><returns>The updated configuration object on which developers can make successive method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.EnableTranslucentNavigationBar(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.NavigationPage})">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><summary>Makes the navigation bar translucent on the platform-specific element.</summary><returns>The updated configuration object on which developers can make successive method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.DisableTranslucentNavigationBar(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.NavigationPage})">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><summary>Makes the navigation bar opaque on the platform-specific element.</summary><returns>The updated configuration object on which developers can make successive method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.StatusBarTextColorModeProperty">
            <summary>Backing store for the attached property that controls whether the status bar text color is adjusted to match the luminosity of the navigation bar for the platform-specific navigation page.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.GetStatusBarTextColorMode(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The platform specific element on which to perform the operation.</param><summary>Returns a value that controls whether the status bar text color is adjusted to match the luminosity of the navigation bar for the platform-specific navigation page.</summary><returns>A value that controls whether the status bar text color is adjusted to match the luminosity of the navigation bar for the platform-specific navigation page.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.SetStatusBarTextColorMode(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.StatusBarTextColorMode)">
            <param name="element">The platform specific element on which to perform the operation.</param><param name="value">The new property value to assign.</param><summary>Sets a value that controls whether the status bar text color is adjusted to match the luminosity of the navigation bar for the platform-specific navigation page.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.GetStatusBarTextColorMode(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.NavigationPage})">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><summary>Returns a value that controls whether the status bar text color is adjusted to match the luminosity of the navigation bar for the platform-specific navigation page.</summary><returns>A value that controls whether the status bar text color is adjusted to match the luminosity of the navigation bar for the platform-specific navigation page.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.SetStatusBarTextColorMode(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.NavigationPage},Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.StatusBarTextColorMode)">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><param name="value">The new property value to assign.</param><summary>Sets a value that controls whether the status bar text color is adjusted to match the luminosity of the navigation bar for the platform-specific navigation page.</summary><returns>The updated configuration object on which developers can make successive method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.PrefersLargeTitlesProperty">
            <summary>Backing store for the attached property that controls the navigation page's preference for large titles.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.GetPrefersLargeTitles(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The element whose large title preference to get.</param><summary>Returns the large title preference of <paramref name="element" />.</summary><returns>The large title preference of <paramref name="element" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.SetPrefersLargeTitles(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">The element whose preference to set.</param><param name="value">The new large title preference behavior.</param><summary>Sets the large title preference behavior of <paramref name="element" /> to <paramref name="value" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.SetPrefersLargeTitles(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.NavigationPage},System.Boolean)">
            <param name="config">The element whose preference to set.</param><param name="value">The new large title preference behavior.</param><summary>Sets the large title preference behavior of <paramref name="config" /> to <paramref name="value" />.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.PrefersLargeTitles(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.NavigationPage})">
            <param name="config">The element whose large title preference to get.</param><summary>Returns a value that indicates the element's preference for large titles.</summary><returns>A value that indicates the element's preference for large titles.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.HideNavigationBarSeparatorProperty">
            <summary>Backing store for the attached property that controls whether the navigation bar separator is hidden.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.GetHideNavigationBarSeparator(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The element for which to return whether the navigation bar separator is hidden.</param><summary>Returns <see langword="true" /> if the separator is hidden. Otherwise, returns <see langword="false" />.</summary><returns>see langword="true" /&gt; if the separator is hidden. Otherwise, <see langword="false" /></returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.SetHideNavigationBarSeparator(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">The element for which to set whether the navigation bar separator is hidden.</param><param name="value">
          <see langword="true" /> to hide the separator. Otherwise, <see langword="false" />.</param><summary>Developers set this to <see langword="true" /> to hide the separator. Otherwise, <see langword="false" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.SetHideNavigationBarSeparator(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.NavigationPage},System.Boolean)">
            <param name="config">The platform configuration for the element for which to set whether the navigation bar separator is hidden.</param><param name="value">
          <see langword="true" /> to hide the separator. Otherwise, <see langword="false" />.</param><summary>Developers set this to <see langword="true" /> to hide the separator. Otherwise, <see langword="false" />.</summary><returns>A fluent object on which the developer can make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.HideNavigationBarSeparator(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.NavigationPage})">
            <param name="config">The platform configuration for the element for which to return whether the navigation bar separator is hidden.</param><summary>Returns <see langword="true" /> if the separator is hidden. Otherwise, returns <see langword="false" />.</summary><returns>
          <see langword="true" /> if the separator is hidden. Otherwise, <see langword="false" /></returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page">
            <summary>The page instance that Microsoft.Maui.Controls created on the iOS platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.PrefersStatusBarHiddenProperty">
            <summary>Sets a value that controls whether it is preferred that the status bar is shown, hidden, or relies on the system default.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.GetPrefersStatusBarHidden(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The platform specific element on which to perform the operation.</param><summary>Returns a value that tells whether it is preferred that the status bar is shown, hidden, or relies on the system default.</summary><returns>A value that tells whether it is preferred that the status bar is shown, hidden, or relies on the system default.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.SetPrefersStatusBarHidden(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.StatusBarHiddenMode)">
            <param name="element">The platform specific element on which to perform the operation.</param><param name="value">The new property value to assign.</param><summary>Sets a value that controls whether it is preferred that the status bar is shown, hidden, or relies on the system default.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.PrefersStatusBarHidden(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.Page})">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><summary>Sets a value that controls whether it is preferred that the status bar is shown, hidden, or relies on the system default.</summary><returns>A value that controls whether it is preferred that the status bar is shown, hidden, or relies on the system default.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.SetPrefersStatusBarHidden(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.Page},Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.StatusBarHiddenMode)">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><param name="value">The new property value to assign.</param><summary>Sets a value that controls whether it is preferred that the status bar is shown, hidden, or relies on the system default.</summary><returns>The updated configuration object on which developers can make successive method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.PreferredStatusBarUpdateAnimationProperty">
            <summary>Backing store for the attached property that controls whether the preferred animation style to use when updating the status bar is <c>None</c>, <c>Slide</c>, or <c>Fade</c>.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.GetPreferredStatusBarUpdateAnimation(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The platform specific element on which to perform the operation.</param><summary>Returns a value that tells whether the preferred animation style to use when updating the status bar is <c>None</c>, <c>Slide</c>, or <c>Fade</c>.</summary><returns>A value that tells whether the preferred animation style to use when updating the status bar is <c>None</c>, <c>Slide</c>, or <c>Fade</c>.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.SetPreferredStatusBarUpdateAnimation(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIStatusBarAnimation)">
            <param name="element">The platform specific element on which to perform the operation.</param><param name="value">The new property value to assign.</param><summary>Sets a value that controls whether the preferred animation style to use when updating the status bar is <c>None</c>, <c>Slide</c>, or <c>Fade</c>.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.PreferredStatusBarUpdateAnimation(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.Page})">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><summary>Returns a value that tells whether the preferred animation style to use when updating the status bar is <c>None</c>, <c>Slide</c>, or <c>Fade</c>.</summary><returns>A value that tells whether the preferred animation style to use when updating the status bar is <c>None</c>, <c>Slide</c>, or <c>Fade</c>.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.SetPreferredStatusBarUpdateAnimation(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.Page},Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIStatusBarAnimation)">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><param name="value">The new property value to assign.</param><summary>Sets a value that controls whether the preferred animation style to use when updating the status bar is <c>None</c>, <c>Slide</c>, or <c>Fade</c>.</summary><returns>The updated configuration object on which developers can make successive method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.UseSafeAreaProperty">
            <summary>Backing store for the attached property that controls whether the padding is overridden with the safe area.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.GetUseSafeArea(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The element whose safe area behavior to get.</param><summary>Gets a Boolean value that tells whether padding values are overridden with values that conform to the safe area on the device.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.SetUseSafeArea(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">The element whose safe area use behavior to set.</param><param name="value">The new safe area inset behavior.</param><summary>Sets a value that controls whether padding values are overridden with the safe area insets.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.SetUseSafeArea(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.Page},System.Boolean)">
            <param name="config">The element whose safe area use behavior to set.</param><param name="value">The new safe area inset behavior.</param><summary>Sets a value that controls whether padding values are overridden with the safe area insets.</summary><returns>The updated configuration object on which developers can make successive method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.UsingSafeArea(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.Page})">
            <param name="config">The element whose safe area behavior to get.</param><summary>Returns a Boolean value that tells whether the padding is overridden with the safe area.</summary><returns>A Boolean value that tells whether the padding is overridden with the safe area.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.LargeTitleDisplayProperty">
            <summary>Backing store for the attached property that defines the large title preferences of the page.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.GetLargeTitleDisplay(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The element whose large title display preferences to get.</param><summary>Returns the large title display preferences for <paramref name="element" />.</summary><returns>The large title display preferences for <paramref name="element" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.SetLargeTitleDisplay(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.LargeTitleDisplayMode)">
            <param name="element">The element whose large title display preference to set.</param><param name="value">The new large title display preferences.</param><summary>Sets the large title display preferences of <paramref name="element" /> to <paramref name="value" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.LargeTitleDisplay(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.Page})">
            <param name="config">The element whose large title preferences to return.</param><summary>Returns a value that describes the large title behavior preference of <paramref name="config" />.</summary><returns>A value that describes the large title behavior preference of <paramref name="config" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.SetLargeTitleDisplay(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.Page},Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.LargeTitleDisplayMode)">
            <param name="config">The element whose large title display preference to set.</param><param name="value">The new large title display preferences.</param><summary>Sets the large title display preferences of <paramref name="config" /> to <paramref name="value" />.</summary><returns>The updated configuration object on which developers can make successive method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.SafeAreaInsetsProperty">
            <summary>Backing store for the attached property that represents the safe area insets.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.GetSafeAreaInsets(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The element whose safe area insets to get.</param><summary>Returns the safe area insets for <paramref name="element" />.</summary><returns>The safe area insets for <paramref name="element" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.SafeAreaInsets(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.Page})">
            <param name="config">The element whose safe area insets to return.</param><summary>Returns a <see cref="T:Microsoft.Maui.Thickness" /> object that represents the safe area insets.</summary><returns>A <see cref="T:Microsoft.Maui.Thickness" /> object that represents the safe area insets.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.SetSafeAreaInsets(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.Page},Microsoft.Maui.Thickness)">
            <param name="config">The element whose safe area insets to set.</param><param name="value">The new safe area insets.</param><summary>Sets the safe area insets of <paramref name="config" /> to <paramref name="value" /></summary><returns>The updated configuration object on which developers can make successive method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.ModalPresentationStyleProperty">
            <summary>The <see cref="T:Microsoft.Maui.Controls.BindableProperty" /> associated with the modal presentation style.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.ModalPresentationStyle(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.Page})">
            <param name="config">
          <c>this</c>
          <see cref="T:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page" />.</param><summary>Gets the modal presentation style of <c>this</c><see cref="T:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page" />.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.SetModalPresentationStyle(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.Page},Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIModalPresentationStyle)">
            <param name="config">
          <c>this</c>
        </param><param name="value">The desired <see cref="T:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIModalPresentationStyle" />.</param><summary>Sets the modal presentation style to <paramref name="value" />.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.GetModalPresentationStyle(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The <see cref="T:Microsoft.Maui.Controls.BindableObject" /> whose modal presentation style is being retrieved.</param><summary>Gets the <see cref="T:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIModalPresentationStyle" /> for <paramref name="element" />.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.PrefersHomeIndicatorAutoHiddenProperty">
            <summary>The backing store for the <see cref="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.PrefersHomeIndicatorAutoHidden(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.Page})" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.GetPrefersHomeIndicatorAutoHidden(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.SetPrefersHomeIndicatorAutoHidden(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.PrefersHomeIndicatorAutoHidden(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.Page})">
            <param name="config">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.SetPrefersHomeIndicatorAutoHidden(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.Page},System.Boolean)">
            <param name="config">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Picker">
            <summary>The picker instance that Microsoft.Maui.Controls created on the iOS platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Picker.UpdateModeProperty">
            <summary>Backing store for the attached property that controls whether elements in the picker are continuously updated while scrolling or updated once after scrolling has completed.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Picker.GetUpdateMode(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The platform specific element on which to perform the operation.</param><summary>Returns a value that tells whether elements in the picker are continuously updated while scrolling or updated once after scrolling has completed.</summary><returns>A value that tells whether elements in the picker are continuously updated while scrolling or updated once after scrolling has completed.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Picker.SetUpdateMode(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UpdateMode)">
            <param name="element">The platform specific element on which to perform the operation.</param><param name="value">The new property value to assign.</param><summary>Sets a value that controls whether elements in the picker are continuously updated while scrolling or updated once after scrolling has completed.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Picker.UpdateMode(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.Picker})">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><summary>Returns a value that tells whether elements in the picker are continuously updated while scrolling or updated once after scrolling has completed.</summary><returns>A value that tells whether elements in the picker are continuously updated while scrolling or updated once after scrolling has completed.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Picker.SetUpdateMode(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.Picker},Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UpdateMode)">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><param name="value">The new property value to assign.</param><summary>Sets a value that controls whether elements in the picker are continuously updated while scrolling or updated once after scrolling has completed.</summary><returns>The updated configuration object on which developers can make successive method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ScrollView">
            <summary>The scroll view instance that Microsoft.Maui.Controls created on the iOS platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ScrollView.ShouldDelayContentTouchesProperty">
            <summary>Backing store for the attached property that controls whether iOS will wait to determine if a touch is intended as a scroll, or scroll immediately.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ScrollView.GetShouldDelayContentTouches(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The platform specific element on which to perform the operation.</param><summary>Returns a Boolean value that tells whether iOS will wait to determine if a touch is intended as a scroll, or scroll immediately.</summary><returns>A Boolean value that tells whether iOS will wait to determine if a touch is intended as a scroll, or scroll immediately.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ScrollView.SetShouldDelayContentTouches(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">The platform specific element on which to perform the operation.</param><param name="value">The new property value to assign.</param><summary>Sets a Boolean value that tells whether iOS will wait to determine if a touch is intended as a scroll, or scroll immediately.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ScrollView.ShouldDelayContentTouches(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.ScrollView})">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><summary>Returns a Boolean value that tells whether iOS will wait to determine if a touch is intended as a scroll, or scroll immediately.</summary><returns>A Boolean value that tells whether iOS will wait to determine if a touch is intended as a scroll, or scroll immediately.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ScrollView.SetShouldDelayContentTouches(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.ScrollView},System.Boolean)">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><param name="value">The new property value to assign.</param><summary>Sets a Boolean value that tells whether iOS will wait to determine if a touch is intended as a scroll, or scroll immediately.</summary><returns>The updated configuration object, on which more methods may be called.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SearchBar">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SearchBar.SearchBarStyleProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SearchBar.GetSearchBarStyle(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SearchBar.SetSearchBarStyle(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UISearchBarStyle)">
            <param name="element">To be added.</param><param name="style">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SearchBar.GetSearchBarStyle(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.SearchBar})">
            <param name="config">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SearchBar.SetSearchBarStyle(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.SearchBar},Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UISearchBarStyle)">
            <param name="config">To be added.</param><param name="style">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SeparatorStyle">
            <summary>Enumerates list view separator styles.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SeparatorStyle.Default">
            <summary>Indicates the default iOS separator behavior.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SeparatorStyle.FullWidth">
            <summary>Indicates that separators will be drawn from one edge of the list view to the other.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Slider">
            <summary>Platform-specific functionality for sliders the iOS platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Slider.UpdateOnTapProperty">
            <summary>Backing store for the attached property that controls whether tapping on the slider updates its value.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Slider.GetUpdateOnTap(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The element for which to get whether tapping on the slider updates its value.</param><summary>Returns a Boolean value that tells whether tapping on the slider will update its value.</summary><returns>
          <see langword="true" /> if tapping updates the value. Otherwise, <see langword="false" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Slider.SetUpdateOnTap(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">The element for which to set whether tapping on the slider updates its value.</param><param name="value">
          <see langword="true" /> if tapping will update the value. Otherwise, <see langword="false" />.</param><summary>Sets a Boolean value that tells whether tapping on the slider will update its value.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Slider.GetUpdateOnTap(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.Slider})">
            <param name="config">The platform configuration for the element for which to get whether tapping on the slider updates its value.</param><summary>Returns a Boolean value that tells whether tapping on the slider will update its value.</summary><returns>
          <see langword="true" /> if tapping updates the value. Otherwise, <see langword="false" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Slider.SetUpdateOnTap(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.Slider},System.Boolean)">
            <param name="config">The platform configuration for the element for which to set whether tapping on the slider updates its value.</param><param name="value">
          <see langword="true" /> if tapping will update the value. Otherwise, <see langword="false" />.</param><summary>Sets a Boolean value that tells whether tapping on the slider will update its value.</summary><returns>A fluent object on which the developer may make more method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.StatusBarHiddenMode">
            <summary>Enumerates status bar hiding behavior preferences.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.StatusBarHiddenMode.Default">
            <summary>Indicates that the default behavior on the system should be used.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.StatusBarHiddenMode.True">
            <summary>Indicates that the status bar should be hidden.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.StatusBarHiddenMode.False">
            <summary>Indicates that the status bar should not be hidden.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.StatusBarTextColorMode">
            <summary>Enumerates text color adjustment options for the status bar.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.StatusBarTextColorMode.MatchNavigationBarTextLuminosity">
            <summary>Indicates that the status bar text should match the luminosity of the navigation bar.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.StatusBarTextColorMode.DoNotAdjust">
            <summary>Indicates that the text color should not be adjusted.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SwipeView">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SwipeView.SwipeTransitionModeProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SwipeView.GetSwipeTransitionMode(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SwipeView.SetSwipeTransitionMode(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.SwipeTransitionMode)">
            <param name="element">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SwipeView.GetSwipeTransitionMode(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.SwipeView})">
            <param name="config">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SwipeView.SetSwipeTransitionMode(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.SwipeView},Microsoft.Maui.SwipeTransitionMode)">
            <param name="config">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TabbedPage">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TabbedPage.TranslucencyModeProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TabbedPage.GetTranslucencyMode(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TabbedPage.SetTranslucencyMode(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TranslucencyMode)">
            <param name="element">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TabbedPage.GetTranslucencyMode(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.TabbedPage})">
            <param name="config">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TabbedPage.SetTranslucencyMode(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.TabbedPage},Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TranslucencyMode)">
            <param name="config">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TimePicker">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TimePicker.UpdateModeProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TimePicker.GetUpdateMode(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TimePicker.SetUpdateMode(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UpdateMode)">
            <param name="element">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TimePicker.UpdateMode(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.TimePicker})">
            <param name="config">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TimePicker.SetUpdateMode(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.TimePicker},Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UpdateMode)">
            <param name="config">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TranslucencyMode">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TranslucencyMode.Default">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TranslucencyMode.Translucent">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TranslucencyMode.Opaque">
            <summary>To be added.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIModalPresentationStyle">
            <summary>Enumerates valid modal presentation styles.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIModalPresentationStyle.FullScreen">
            <summary>The content is displayed in a manner that covers the screen.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIModalPresentationStyle.FormSheet">
            <summary>The content is displayed in the center of the screen.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIModalPresentationStyle.Automatic">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIModalPresentationStyle.OverFullScreen">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIModalPresentationStyle.PageSheet">
            <summary>To be added.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UISearchBarStyle">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UISearchBarStyle.Default">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UISearchBarStyle.Prominent">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UISearchBarStyle.Minimal">
            <summary>To be added.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIStatusBarAnimation">
            <summary>Enumerates animation styles for status bar updates.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIStatusBarAnimation.None">
            <summary>Indicates that no animation is preferred.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIStatusBarAnimation.Slide">
            <summary>Indicates that it is preferred that updates should slide in.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIStatusBarAnimation.Fade">
            <summary>Indicates that it is preferred that updates should fade in.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UpdateMode">
            <summary>Enumerates values that control whether elements in a picker are continuously updated while scrolling or updated once after scrolling has completed.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UpdateMode.Immediately">
            <summary>Bound properties on picker elements should be continuously updated while the user scrolls.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UpdateMode.WhenFinished">
            <summary>Bound properties on picker elements should be updated after scrolling is finished.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement">
            <summary>Provides access to the blur effect, shadow effect, and legacy color mode on the iOS platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.BlurEffectProperty">
            <summary>Backing store for the attached property that controls which, if any, blur effect is applied.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.GetBlurEffect(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The platform specific element on which to perform the operation.</param><summary>Returns a value that controls which, if any, blur effect is applied.</summary><returns>A value that controls which, if any, blur effect is applied.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.SetBlurEffect(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.BlurEffectStyle)">
            <param name="element">The platform specific element on which to perform the operation.</param><param name="value">The new property value to assign.</param><summary>Sets a value that controls which, if any, blur effect is applied.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.GetBlurEffect(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.VisualElement})">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><summary>Returns a value that tells which, if any, blur effect is applied.</summary><returns>A value that tells which, if any, blur effect is applied.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.UseBlurEffect(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.VisualElement},Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.BlurEffectStyle)">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><param name="value">The new property value to assign.</param><summary>Sets the blur effect to use.</summary><returns>The updated configuration object on which developers can make successive method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.IsShadowEnabledProperty">
            <summary>Backing store for the attached property that controls whether the shadow effect is enabled.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.GetIsShadowEnabled(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The platform specific element on which to perform the operation.</param><summary>Gets a Boolean value that tells whether the shadow effect is enabled.</summary><returns>
          <see langword="true" /> if the shadow effect is enabled. Otherwise, <see langword="false" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.SetIsShadowEnabled(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">The platform specific element on which to perform the operation.</param><param name="value">
          <see langword="true" /> to enable the shadow. Otherwise, <see langword="false" />.</param><summary>Sets a Boolean value that controls whether the shadow effect is enabled.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.GetIsShadowEnabled(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.VisualElement})">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><summary>Gets a Boolean value that tells whether the shadow effect is enabled.</summary><returns>
          <see langword="true" /> if the shadow effect is enabled. Otherwise, <see langword="false" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.SetIsShadowEnabled(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.VisualElement},System.Boolean)">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><param name="value">
          <see langword="true" /> to enable the shadow. Otherwise, <see langword="false" />.</param><summary>Sets a Boolean value that controls whether the shadow effect is enabled.</summary><returns>The updated configuration object on which developers can make successive method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.ShadowColorProperty">
            <summary>Backing store for the attached property that controls the shadow color.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.GetShadowColor(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The platform specific element on which to perform the operation.</param><summary>Gets the shadow color.</summary><returns>The shadow color.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.SetShadowColor(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Graphics.Color)">
            <param name="element">The platform specific element on which to perform the operation.</param><param name="value">The new shadow color value.</param><summary>Sets the shadow color.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.GetShadowColor(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.VisualElement})">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><summary>Gets the shadow color.</summary><returns>The shadow color.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.SetShadowColor(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.VisualElement},Microsoft.Maui.Graphics.Color)">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><param name="value">The new shadow color value.</param><summary>Sets the shadow color.</summary><returns>The updated configuration object on which developers can make successive method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.ShadowRadiusProperty">
            <summary>Backing store for the attached property that controls the shadow radius.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.GetShadowRadius(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The platform specific element on which to perform the operation.</param><summary>Gets the shadow radius.</summary><returns>The shadow radius.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.SetShadowRadius(Microsoft.Maui.Controls.BindableObject,System.Double)">
            <param name="element">The platform specific element on which to perform the operation.</param><param name="value">The new shadow radius value.</param><summary>Sets the shadow radius.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.GetShadowRadius(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.VisualElement})">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><summary>Gets the shadow radius.</summary><returns>The shadow radius.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.SetShadowRadius(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.VisualElement},System.Double)">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><param name="value">The new shadow radius value.</param><summary>Sets the shadow radius.</summary><returns>The updated configuration object on which developers can make successive method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.ShadowOffsetProperty">
            <summary>Backing store for the attached property that controls the shadow offset.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.GetShadowOffset(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The platform specific element on which to perform the operation.</param><summary>Gets the shadow offset.</summary><returns>The shadow offset.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.SetShadowOffset(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Graphics.Size)">
            <param name="element">The platform specific element on which to perform the operation.</param><param name="value">The new shadow offset value.</param><summary>Sets the shadow offset.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.GetShadowOffset(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.VisualElement})">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><summary>Gets the shadow offset.</summary><returns>The shadow offset.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.SetShadowOffset(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.VisualElement},Microsoft.Maui.Graphics.Size)">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><param name="value">The new shadow offset value.</param><summary>Sets the shadow offset.</summary><returns>The updated configuration object on which developers can make successive method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.ShadowOpacityProperty">
            <summary>Backing store for the attached property that controls the shadow opacity.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.GetShadowOpacity(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The platform specific element on which to perform the operation.</param><summary>Gets the shadow opacity.</summary><returns>The shadow opacity.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.SetShadowOpacity(Microsoft.Maui.Controls.BindableObject,System.Double)">
            <param name="element">The platform specific element on which to perform the operation.</param><param name="value">The new shadow opacity value.</param><summary>Sets the shadow opacity.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.GetShadowOpacity(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.VisualElement})">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><summary>Gets the shadow opacity.</summary><returns>The shadow opacity.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.SetShadowOpacity(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.VisualElement},System.Double)">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><param name="value">The new shadow opacity value.</param><summary>Sets the shadow opacity.</summary><returns>The updated configuration object on which developers can make successive method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.IsLegacyColorModeEnabledProperty">
            <summary>Backing store for the attached property that turns the legacy color mode on and off.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.GetIsLegacyColorModeEnabled(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The platform specific element on which to perform the operation.</param><summary>Returns the legacy color mode.</summary><returns>
          <see langword="true" /> if the legacy color mode is enabled. Otherwise, <see langword="false" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.SetIsLegacyColorModeEnabled(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">The platform specific element on which to perform the operation.</param><param name="value">
          <see langword="true" /> to enable legacy color mode. Otherwise, <see langword="false" />.</param><summary>Sets the legacy color mode.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.GetIsLegacyColorModeEnabled(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.VisualElement})">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><summary>Returns the legacy color mode.</summary><returns>
          <see langword="true" /> if the legacy color mode is enabled. Otherwise, <see langword="false" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.SetIsLegacyColorModeEnabled(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.VisualElement},System.Boolean)">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><param name="value">
          <see langword="true" /> to enable legacy color mode. Otherwise, <see langword="false" />.</param><summary>Sets the legacy color mode.</summary><returns>A fluent object on which the developer may make more method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.CanBecomeFirstResponderProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.GetCanBecomeFirstResponder(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.SetCanBecomeFirstResponder(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.CanBecomeFirstResponder(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.VisualElement})">
            <param name="config">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.SetCanBecomeFirstResponder(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.iOS,Microsoft.Maui.Controls.VisualElement},System.Boolean)">
            <param name="config">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationPage">
            <summary>The navigation page instance that Microsoft.Maui.Controls created on the macOS platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationPage.NavigationTransitionPushStyleProperty">
            <summary>Backing store for the attached property that controls the transition style of the platform-specific navigation page when a page is pushed on the navigation stack.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationPage.NavigationTransitionPopStyleProperty">
            <summary>Backing store for the attached property that controls the transition style of the platform-specific navigation page when a page is popped from the navigation stack.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationPage.GetNavigationTransitionPushStyle(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The platform specific element on which to perform the operation.</param><summary>Returns the NavigationTransitionStyle value that tells what transition is used when a page is push on the navigation stack.</summary><returns>The NavigationTransitionStyle value that tells the current transition when a page is pushed on the navigation stack.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationPage.SetNavigationTransitionPushStyle(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle)">
            <param name="element">The platform specific element on which to perform the operation.</param><param name="value">The new transition style.</param><summary>Sets the transition style which is used, when pushing pages on the navigation stack.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationPage.GetNavigationTransitionPushStyle(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.macOS,Microsoft.Maui.Controls.NavigationPage})">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><summary>Returns the NavigationTransitionStyle value that tells what transition is used when a page is pushed on the navigation stack.</summary><returns>The NavigationTransitionStyle value that tells the current transition when a page is pushed on the navigation stack.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationPage.GetNavigationTransitionPopStyle(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The platform specific element on which to perform the operation.</param><summary>Returns the NavigationTransitionStyle value that tells what transition is used when a page is popped from the navigation stack.</summary><returns>The NavigationTransitionStyle value that tells the current transition when a page is popped from the navigation stack.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationPage.SetNavigationTransitionPopStyle(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle)">
            <param name="element">The platform specific element on which to perform the operation.</param><param name="value">The new transition style.</param><summary>Sets the transition style which is used, when popping from the navigation stack.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationPage.GetNavigationTransitionPopStyle(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.macOS,Microsoft.Maui.Controls.NavigationPage})">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><summary>Returns the NavigationTransitionStyle value that tells what transition is used when a page is popped from the navigation stack.</summary><returns>The NavigationTransitionStyle value that tells the current transition when a page is popped from the navigation stack.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationPage.SetNavigationTransitionStyle(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle,Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle)">
            <param name="element">The platform specific element on which to perform the operation.</param><param name="pushStyle">The new transition style when a page is pushed on the navigation stack.</param><param name="popStyle">The new transition style when a page is popped from the navigation stack.</param><summary>Sets the transition style which is used, when popping and pushing pages on the navigation stack.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationPage.SetNavigationTransitionStyle(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.macOS,Microsoft.Maui.Controls.NavigationPage},Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle,Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle)">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><param name="pushStyle">The new transition style when a page is pushed on the navigation stack.</param><param name="popStyle">The new transition style when a page is popped from the navigation stack.</param><summary>Sets the transition style which is used, when popping and pushing pages on the navigation stack.</summary><returns>The updated configuration object on which developers can make successive method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle">
            <summary>Enumerates navigation transition styles.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle.None">
            <summary>Indicates no transition.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle.Crossfade">
            <summary>Indicates a crossfade transition.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle.SlideUp">
            <summary>Indicates a slide up transition.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle.SlideDown">
            <summary>Indicates a slide down transition.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle.SlideLeft">
            <summary>Indicates a slide left transition.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle.SlideRight">
            <summary>Indicates a slide right transition.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle.SlideForward">
            <summary>Indicates a slide forward transition.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle.SlideBackward">
            <summary>Indicates a slide backward transition.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.Page">
            <summary>The page instance that Microsoft.Maui.Controls created on the macOS platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.Page.TabOrderProperty">
            <summary>Backing store for the attached property that holds the tab order of the visual elements.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.Page.GetTabOrder(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The platform specific element on which to perform the operation.</param><summary>Returns the tab order of the visual elements on a page as array.</summary><returns>An array of VisualElement.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.Page.SetTabOrder(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.VisualElement[])">
            <param name="element">The platform specific element on which to perform the operation.</param><param name="value">An array of VisualElement.</param><summary>Sets the tab order of visual elements on a page. Users can cycle through these elements with the tab key.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.Page.GetTabOrder(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.macOS,Microsoft.Maui.Controls.Page})">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><summary>Returns the tab order of the visual elements on a page as array.</summary><returns>An array of VisualElement.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.Page.SetTabOrder(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.macOS,Microsoft.Maui.Controls.Page},Microsoft.Maui.Controls.VisualElement[])">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><param name="value">An array of VisualElement.</param><summary>Sets the tab order of visual elements on a page. Users can cycle through these elements with the tab key.</summary><returns>The platform specific configuration that contains the element on which to perform the operation.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.TabbedPage">
            <summary>The tabbed page instance that Microsoft.Maui.Controls created on the macOS platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.TabbedPage.TabsStyleProperty">
            <summary>Backing store for the attached property that controls how tabs are displayed.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.TabbedPage.GetTabsStyle(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The platform specific element on which to perform the operation.</param><summary>Returns a value that describes the way that tabs are displayed.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.TabbedPage.SetTabsStyle(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.TabsStyle)">
            <param name="element">The platform specific element on which to perform the operation.</param><param name="value">The new property value to assign.</param><summary>Sets a value that controls the way that tabs are displayed.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.TabbedPage.GetTabsStyle(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.macOS,Microsoft.Maui.Controls.TabbedPage})">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><summary>Returns a value that describes the way that tabs are displayed.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.TabbedPage.SetShowTabs(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.macOS,Microsoft.Maui.Controls.TabbedPage},Microsoft.Maui.Controls.TabsStyle)">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><param name="value">The new property value to assign.</param><summary>Sets a value that controls the way that tabs are displayed.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.TabbedPage.ShowTabsOnNavigation(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.macOS,Microsoft.Maui.Controls.TabbedPage})">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><summary>Sets tab display to the respond to user swipes.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.TabbedPage.ShowTabs(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.macOS,Microsoft.Maui.Controls.TabbedPage})">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><summary>Sets tab display to the default style.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.TabbedPage.HideTabs(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.macOS,Microsoft.Maui.Controls.TabbedPage})">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><summary>Hides the tabs on the tabbed page.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Application">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Application.UseBezelInteractionProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Application.GetUseBezelInteraction(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Application.SetUseBezelInteraction(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Application.GetUseBezelInteraction(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.Application})">
            <param name="config">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Application.SetUseBezelInteraction(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.Application},System.Boolean)">
            <param name="config">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Application.OverlayContentProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Application.GetOverlayContent(Microsoft.Maui.Controls.BindableObject)">
            <param name="application">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Application.SetOverlayContent(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.View)">
            <param name="application">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Application.GetOverlayContent(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.Application})">
            <param name="config">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Application.SetOverlayContent(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.Application},Microsoft.Maui.Controls.View)">
            <param name="config">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Application.ActiveBezelInteractionElementPropertyKey">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Application.GetActiveBezelInteractionElement(Microsoft.Maui.Controls.BindableObject)">
            <param name="application">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Application.SetActiveBezelInteractionElement(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.Element)">
            <param name="application">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Application.GetActiveBezelInteractionElement(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.Application})">
            <param name="config">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Application.SetActiveBezelInteractionElement(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.Application},Microsoft.Maui.Controls.Element)">
            <param name="config">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Entry">
            <summary>Provides access to the font weight for entry controls on the Tizen platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Entry.FontWeightProperty">
            <summary>Backing store for the attached property that controls the font weight.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Entry.GetFontWeight(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The entry element on the Tizen platform whose font weight icon to get.</param><summary>Returns the font weight for the entry text.</summary><returns>The font weight for the entry text.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Entry.SetFontWeight(Microsoft.Maui.Controls.BindableObject,System.String)">
            <param name="element">The entry element on the Tizen platform whose font weight icon to set.</param><param name="weight">The new font weight value.</param><summary>Sets the font weight on the entry text.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Entry.GetFontWeight(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.Entry})">
            <param name="config">The platform configuration for the entry element on the Tizen platform whose font weight icon to get.</param><summary>Returns a string representation of the font weight for the entry text.</summary><returns>A string representation of the font weight for the entry text.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Entry.SetFontWeight(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.Entry},System.String)">
            <param name="config">The platform configuration for the entry element on the Tizen platform whose font weight icon to set.</param><param name="weight">The new font weight value.</param><summary>Sets the font weight on the entry text.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FocusDirection">
            <summary>Contains constants for describing focus directions.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FocusDirection.None">
            <summary>The constant for specifying no focus direction.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FocusDirection.Back">
            <summary>The constant for specifying the back focus direction.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FocusDirection.Forward">
            <summary>The constant for specifying the forward focus direction.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FocusDirection.Up">
            <summary>The constant for specifying the up focus direction.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FocusDirection.Down">
            <summary>The constant for specifying the down focus direction.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FocusDirection.Right">
            <summary>The constant for specifying the right focus direction.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FocusDirection.Left">
            <summary>The constant for specifying the left focus direction.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FontWeight">
            <summary>Contains constants for font weights.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FontWeight.None">
            <summary>The constant for specifying no font weight.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FontWeight.Normal">
            <summary>The constant for specifying the normal, or default, font weight.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FontWeight.Thin">
            <summary>The constant for specifying the thin font weight.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FontWeight.UltraLight">
            <summary>The constant for specifying the ultralight font weight.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FontWeight.Light">
            <summary>The constant for specifying the light font weight.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FontWeight.Book">
            <summary>The constant for specifying the book font weight.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FontWeight.Medium">
            <summary>The constant for specifying the medium font weight.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FontWeight.SemiBold">
            <summary>The constant for specifying the semibold font weight.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FontWeight.Bold">
            <summary>The constant for specifying the bold font weight.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FontWeight.UltraBold">
            <summary>The constant for specifying the ultrabold font weight.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FontWeight.Black">
            <summary>The constant for specifying the black font weight.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FontWeight.ExtraBlack">
            <summary>The constant for specifying the extra black font weight.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Image">
            <summary>Provides access to the blend color for images on the Tizen platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Image.BlendColorProperty">
            <summary>Backing store for the attached property that controls the blend color.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Image.FileProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Image.GetBlendColor(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The image on the Tizen platform whose back button icon to get.</param><summary>Returns the blend color for the image.</summary><returns>The blend color for the image.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Image.SetBlendColor(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Graphics.Color)">
            <param name="element">To be added.</param><param name="color">The new blend color value.</param><summary>Sets the blend color.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Image.GetBlendColor(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.Image})">
            <param name="config">The platform configuration for the image on the Tizen platform whose blend color to get.</param><summary>Returns the blend color for the image.</summary><returns>The blend color for the image.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Image.SetBlendColor(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.Image},Microsoft.Maui.Graphics.Color)">
            <param name="config">The platform configuration for the image on the Tizen platform whose blend color to set.</param><param name="color">The new blend color value.</param><summary>Sets the blend color.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Image.GetFile(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Image.SetFile(Microsoft.Maui.Controls.BindableObject,System.String)">
            <param name="element">To be added.</param><param name="file">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Image.GetFile(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.Image})">
            <param name="config">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Image.SetFile(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.Image},System.String)">
            <param name="config">To be added.</param><param name="file">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Label">
            <summary>Provides access to the font weight for labels on the Tizen platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Label.FontWeightProperty">
            <summary>Backing store for the attached property that controls the font weight.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Label.GetFontWeight(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The label element on the Tizen platform whose font weight icon to get.</param><summary>Returns the font weight for the label text.</summary><returns>The font weight for the label text.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Label.SetFontWeight(Microsoft.Maui.Controls.BindableObject,System.String)">
            <param name="element">The label element on the Tizen platform whose font weight icon to set.</param><param name="weight">The new font weight value.</param><summary>Sets the font weight on the label text.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Label.GetFontWeight(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.Label})">
            <param name="config">The platform configuration for the label element on the Tizen platform whose font weight icon to get.</param><summary>Returns a string representation of the font weight for the label text.</summary><returns>A string representation of the font weight for the label text.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Label.SetFontWeight(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.Label},System.String)">
            <param name="config">The platform configuration for the label element on the Tizen platform whose font weight icon to set.</param><param name="weight">The new font weight value.</param><summary>Sets the font weight on the label text.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.NavigationPage">
            <summary>Provides access to the bread crumb bar for navigation pages on the Tizen platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.NavigationPage.HasBreadCrumbsBarProperty">
            <summary>Backing store for the attached property that represents whether the navigation page has a bread crumb bar.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.NavigationPage.GetHasBreadCrumbsBar(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The navigation page on the Tizen platform whose font weight icon to get.</param><summary>Returns a Boolean value that tells whether the navigation page has a bread crumb bar.</summary><returns>
          <see langword="true" /> if the navigation page has a bread crumb bar. Otherwise, <see langword="false" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.NavigationPage.SetHasBreadCrumbsBar(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">The navigation page on the Tizen platform whose font weight icon to set.</param><param name="value">The new bread crumb bar presence value.</param><summary>Sets a Boolean value that tells whether the navigation page has a bread crumb bar.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.NavigationPage.HasBreadCrumbsBar(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.NavigationPage})">
            <param name="config">The platform configuration for the navigation page on the Tizen platform whose font weight icon to get.</param><summary>Returns a Boolean value that tells whether the navigation page has a bread crumb bar.</summary><returns>
          <see langword="true" /> if the navigation page has a bread crumb bar. Otherwise, <see langword="false" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.NavigationPage.SetHasBreadCrumbsBar(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.NavigationPage},System.Boolean)">
            <param name="config">The platform configuration for the navigation page on the Tizen platform whose font weight icon to set.</param><param name="value">The new bread crumb bar presence value.</param><summary>Sets a Boolean value that tells whether the navigation page has a bread crumb bar.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Page">
            <summary>Provides access to the bread crumb bar for pages on the Tizen platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Page.BreadCrumbProperty">
            <summary>Backing store for the attached property that represents bread crumb bar value.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Page.GetBreadCrumb(Microsoft.Maui.Controls.BindableObject)">
            <param name="page">The page whose bread crumb representation to get.</param><summary>Returns the breadcrumb representation for a page.</summary><returns>The breadcrumb representation for the page.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Page.SetBreadCrumb(Microsoft.Maui.Controls.BindableObject,System.String)">
            <param name="page">The page whose bread crumb value to set.</param><param name="value">The new bread crumb value.</param><summary>Sets the bread crumb value for the page.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Page.GetBreadCrumb(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.Page})">
            <param name="config">The platform configuration for the page whose bread crumb representation to get.</param><summary>Returns the breadcrumb representation for a page.</summary><returns>The breadcrumb representation for the page.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Page.SetBreadCrumb(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.Page},System.String)">
            <param name="config">The paltform configuration for the page whose bread crumb value to set.</param><param name="value">The new bread crumb value.</param><summary>Sets the bread crumb value for the page.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ProgressBar">
            <summary>Provides access to the pulsing status for progress bars.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ProgressBar.ProgressBarPulsingStatusProperty">
            <summary>Backing store for the attached property that controls the pulsing status of the progress bar.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ProgressBar.GetPulsingStatus(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The element whose pulse status to get.</param><summary>Returns <see langword="true" /> if the progress bar is pulsing. Otherwise, returns <see langword="false" />.</summary><returns>
          <see langword="true" /> if the progress bar is pulsing. Otherwise, <see langword="false" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ProgressBar.SetPulsingStatus(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">To be added.</param><param name="isPulsing">
          <see langword="true" /> to cause the progress bar is pulsing. Otherwise, <see langword="false" />.</param><summary>Turns pulsing on or off.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ProgressBar.GetPulsingStatus(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.ProgressBar})">
            <param name="config">The platform configuration for the element whose pulse status to get.</param><summary>Returns <see langword="true" /> if the progress bar is pulsing. Otherwise, returns <see langword="false" />.</summary><returns>
          <see langword="true" /> if the progress bar is pulsing. Otherwise, <see langword="false" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ProgressBar.SetPulsingStatus(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.ProgressBar},System.Boolean)">
            <param name="config">The platform configuration for the element whose pulse status to set.</param><param name="isPulsing">
          <see langword="true" /> to cause the progress bar is pulsing. Otherwise, <see langword="false" />.</param><summary>Turns pulsing on or off.</summary><returns>A fluent object on which the developer can make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ButtonStyle">
            <summary>Enumerates button styles</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ButtonStyle.Default">
            <summary>Indicates the default button style.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ButtonStyle.Circle">
            <summary>Indicates the circle button style.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ButtonStyle.Bottom">
            <summary>Indicates the bottom button style.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ButtonStyle.Text">
            <summary>Indicates a text button.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ButtonStyle.SelectMode">
            <summary>Indicates a selection button.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.SwitchStyle">
            <summary>Enumerates visual styles for switches.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.SwitchStyle.CheckBox">
            <summary>Indicates a checkbox UI.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.SwitchStyle.Toggle">
            <summary>Indicates a toggle UI.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.SwitchStyle.Favorite">
            <summary>Indicates a favorite, or star, UI.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.SwitchStyle.OnOff">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.SwitchStyle.Small">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ProgressBarStyle">
            <summary>Enumerates visual styles for progress bars.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ProgressBarStyle.Default">
            <summary>Indicates the default progress bar style.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ProgressBarStyle.Pending">
            <summary>Indicates the pending style, to communicate that a progress estimate has not yet been made.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.TabbedPageStyle">
            <summary>Enumerates tab bar styles for a tabbed page.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.TabbedPageStyle.Default">
            <summary>Indicates the default tab bar style.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.TabbedPageStyle.Tabbar">
            <summary>Indicates a tab bar with no title.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.TabbedPageStyle.TabbarWithTitle">
            <summary>Indicates a tab bar with a title.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Switch">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Switch.ColorProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Switch.GetColor(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Switch.SetColor(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Graphics.Color)">
            <param name="element">To be added.</param><param name="color">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Switch.GetColor(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.Switch})">
            <param name="config">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Switch.SetColor(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.Switch},Microsoft.Maui.Graphics.Color)">
            <param name="config">To be added.</param><param name="color">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement">
            <summary>Provides access to focus order, styles, and tooltips for visual elements on the Tizen platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.StyleProperty">
            <summary>Backing store for the attached property that contains the style of the visual element.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.IsFocusAllowedProperty">
            <summary>Backing store for the attached property that determines whether a visual element can receive the focus.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.NextFocusDirectionProperty">
            <summary>Backing store for the attached property that holds the focus direction.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.NextFocusUpViewProperty">
            <summary>Backing store for the attached property that holds the next element in the up focus direction.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.NextFocusDownViewProperty">
            <summary>Backing store for the attached property that holds the next element in the down focus direction.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.NextFocusLeftViewProperty">
            <summary>Backing store for the attached property that holds the next element in the left focus direction.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.NextFocusRightViewProperty">
            <summary>Backing store for the attached property that holds the next element in the right focus direction.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.NextFocusBackViewProperty">
            <summary>Backing store for the attached property that holds the next element in the back focus direction.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.NextFocusForwardViewProperty">
            <summary>Backing store for the attached property that holds the next element in the forward focus direction.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.ToolTipProperty">
            <summary>Backing store for the attached property that contains the tooltip for the visual element.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.GetStyle(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The visual element whose style to get.</param><summary>Returns the style for the element.</summary><returns>The style for the element.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetStyle(Microsoft.Maui.Controls.BindableObject,System.String)">
            <param name="element">The visual element whose style to set.</param><param name="value">The new style value.</param><summary>Sets the style on a visual element.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.GetStyle(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.VisualElement})">
            <param name="config">The platform configuration for the visual element whose style to get.</param><summary>Returns the style for the element.</summary><returns>The style for the element.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetStyle(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.VisualElement},System.String)">
            <param name="config">The platform configuration for the visual element whose style to set.</param><param name="value">The new style value.</param><summary>Sets the style on a visual element.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.IsFocusAllowed(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The visual element whose focusability to check.</param><summary>Returns <see langword="true" /> if the element may be focused. Otherwise, returns <see langword="false" />.</summary><returns>
          <see langword="true" /> if the element may be focused. Otherwise, <see langword="false" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetFocusAllowed(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">The element whose focus participation value to set.</param><param name="value">The new focus participation value.</param><summary>Sets the focus participation value for a visual element.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.IsFocusAllowed(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.VisualElement})">
            <param name="config">The platform configuration for the visual element whose focusability to check.</param><summary>Returns <see langword="true" /> if the element may be focused. Otherwise, returns <see langword="false" />.</summary><returns>
          <see langword="true" /> if the element may be focused. Otherwise, <see langword="false" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetFocusAllowed(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.VisualElement},System.Boolean)">
            <param name="config">The platform configuration for the element whose focus participation value to set.</param><param name="value">The new focus participation value.</param><summary>Sets the focus participation value for a visual element.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.GetNextFocusDirection(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The visual element whose next focus direction to get.</param><summary>Returns the next focus direction.</summary><returns>The next focus direction.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetNextFocusDirection(Microsoft.Maui.Controls.BindableObject,System.String)">
            <param name="element">The visual element whose next focus direction to set.</param><param name="value">The new focus direction.</param><summary>Sets the direction of the next focus on a visual element</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.GetNextFocusDirection(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.VisualElement})">
            <param name="config">The platform configuration for the visual element whose next focus direction to get.</param><summary>Returns the next focus direction.</summary><returns>The next focus direction.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetNextFocusDirection(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.VisualElement},System.String)">
            <param name="config">The platform configuration for the visual element whose next focus direction to set.</param><param name="value">The new focus direction.</param><summary>Sets the direction of the next focus on a visual element</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.MoveFocusUp(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.VisualElement})">
            <param name="config">The platform configuration for the visual element whose focus direction to set.</param><summary>Changes the focus direction to up.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.MoveFocusDown(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.VisualElement})">
            <param name="config">The platform configuration for the visual element whose focus direction to set.</param><summary>Changes the focus direction to down.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.MoveFocusLeft(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.VisualElement})">
            <param name="config">The platform configuration for the visual element whose focus direction to set.</param><summary>Changes the focus direction to left.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.MoveFocusRight(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.VisualElement})">
            <param name="config">The platform configuration for the visual element whose focus direction to set.</param><summary>Changes the focus direction to right.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.MoveFocusBack(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.VisualElement})">
            <param name="config">The platform configuration for the visual element whose focus direction to set.</param><summary>Changes the focus direction to back.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.MoveFocusForward(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.VisualElement})">
            <param name="config">The platform configuration for the visual element whose focus direction to set.</param><summary>Changes the focus direction to forward.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.GetNextFocusUpView(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The visual element whose next focus to get.</param><summary>Returns the view that gets the focus when moving up.</summary><returns>The view that gets the focus when moving up.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetNextFocusUpView(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.View)">
            <param name="element">The element whose up focus view to set.</param><param name="value">The new up focus view.</param><summary>Sets the up focus view for a visual element.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.GetNextFocusUpView(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.VisualElement})">
            <param name="config">The platform configuration for the visual element whose next focus to get.</param><summary>Returns the view that gets the focus when moving up.</summary><returns>The view that gets the focus when moving up.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetNextFocusUpView(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.VisualElement},Microsoft.Maui.Controls.View)">
            <param name="config">The platform configuration for the element whose up focus view to set.</param><param name="value">The new up focus view.</param><summary>Sets the up focus view for a visual element.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.GetNextFocusDownView(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The visual element whose next focus to get.</param><summary>Returns the view that gets the focus when moving down.</summary><returns>The view that gets the focus when moving down.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetNextFocusDownView(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.View)">
            <param name="element">The element whose down focus view to set.</param><param name="value">The new down focus view.</param><summary>Sets the down focus view for a visual element.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.GetNextFocusDownView(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.VisualElement})">
            <param name="config">The platform configuration for the visual element whose next focus to get.</param><summary>Returns the view that gets the focus when moving down.</summary><returns>The view that gets the focus when moving down.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetNextFocusDownView(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.VisualElement},Microsoft.Maui.Controls.View)">
            <param name="config">The platform configuration for the element whose down focus view to set.</param><param name="value">The new down focus view.</param><summary>Sets the down focus view for a visual element.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.GetNextFocusLeftView(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The visual element whose next focus to get.</param><summary>Returns the view that gets the focus when moving left.</summary><returns>The view that gets the focus when moving left.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetNextFocusLeftView(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.View)">
            <param name="element">The element whose left focus view to set.</param><param name="value">The new left focus view.</param><summary>Sets the left focus view for a visual element.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.GetNextFocusLeftView(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.VisualElement})">
            <param name="config">The platform configuration for the visual element whose next focus to get.</param><summary>Returns the view that gets the focus when moving left.</summary><returns>The view that gets the focus when moving left.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetNextFocusLeftView(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.VisualElement},Microsoft.Maui.Controls.View)">
            <param name="config">The platform configuration for the element whose left focus view to set.</param><param name="value">The new left focus view.</param><summary>Sets the left focus view for a visual element.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.GetNextFocusRightView(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The visual element whose next focus to get.</param><summary>Returns the view that gets the focus when moving right.</summary><returns>The view that gets the focus when moving right.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetNextFocusRightView(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.View)">
            <param name="element">The element whose right focus view to set.</param><param name="value">The new right focus view.</param><summary>Sets the right focus view for a visual element.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.GetNextFocusRightView(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.VisualElement})">
            <param name="config">The platform configuration for the visual element whose next focus to get.</param><summary>Returns the view that gets the focus when moving right.</summary><returns>The view that gets the focus when moving right.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetNextFocusRightView(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.VisualElement},Microsoft.Maui.Controls.View)">
            <param name="config">The platform configuration for the element whose right focus view to set.</param><param name="value">The new right focus view.</param><summary>Sets the right focus view for a visual element.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.GetNextFocusBackView(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The visual element whose next focus to get.</param><summary>Returns the view that gets the focus when moving back.</summary><returns>The view that gets the focus when moving back.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetNextFocusBackView(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.View)">
            <param name="element">The element whose back focus view to set.</param><param name="value">The new back focus view.</param><summary>Sets the back focus view for a visual element.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.GetNextFocusBackView(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.VisualElement})">
            <param name="config">The platform configuration for the visual element whose next focus to get.</param><summary>Returns the view that gets the focus when moving back.</summary><returns>The view that gets the focus when moving back.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetNextFocusBackView(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.VisualElement},Microsoft.Maui.Controls.View)">
            <param name="config">The platform configuration for the element whose back focus view to set.</param><param name="value">The new back focus view.</param><summary>Sets the back focus view for a visual element.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.GetNextFocusForwardView(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The visual element whose next focus to get.</param><summary>Returns the view that gets the focus when moving forward.</summary><returns>The view that gets the focus when moving forward.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetNextFocusForwardView(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.View)">
            <param name="element">The element whose forward focus view to set.</param><param name="value">The new forward focus view.</param><summary>Sets the forward focus view for a visual element.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.GetNextFocusForwardView(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.VisualElement})">
            <param name="config">The platform configuration for the visual element whose next focus to get.</param><summary>Returns the view that gets the focus when moving forward.</summary><returns>The view that gets the focus when moving forward.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetNextFocusForwardView(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.VisualElement},Microsoft.Maui.Controls.View)">
            <param name="config">The platform configuration for the element whose forward focus view to set.</param><param name="value">The new forward focus view.</param><summary>Sets the forward focus view for a visual element.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.GetToolTip(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The visual element whose tooltip to get.</param><summary>Returns the tooltip for the element.</summary><returns>The tooltip for the element.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetToolTip(Microsoft.Maui.Controls.BindableObject,System.String)">
            <param name="element">The visual element whose tooltip to set.</param><param name="value">The new tooltip value.</param><summary>Sets the tooltip on a visual element.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.GetToolTip(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.VisualElement})">
            <param name="config">The platform configuration for the visual element whose tooltip to get.</param><summary>Returns the tooltip for the element.</summary><returns>The tooltip for the element.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetToolTip(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Tizen,Microsoft.Maui.Controls.VisualElement},System.String)">
            <param name="config">The platform configuration for the visual element whose tooltip to set.</param><param name="value">The new tooltip value.</param><summary>Sets the tooltip on a visual element.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Application">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Application.ImageDirectoryProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Application.SetImageDirectory(Microsoft.Maui.Controls.BindableObject,System.String)">
            <param name="element">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Application.GetImageDirectory(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.Application})">
            <param name="config">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Application.GetImageDirectory(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Application.SetImageDirectory(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.Application},System.String)">
            <param name="config">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.CollapseStyle">
            <summary>Enumerates collapse styles for master-detail pages.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.CollapseStyle.Full">
            <summary>Indicates that panes should fully collapse.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.CollapseStyle.Partial">
            <summary>Indicates that panes should partially collapse.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.FlyoutPage">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.FlyoutPage.CollapseStyleProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.FlyoutPage.GetCollapseStyle(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.FlyoutPage.SetCollapseStyle(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.CollapseStyle)">
            <param name="element">To be added.</param><param name="collapseStyle">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.FlyoutPage.GetCollapseStyle(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.FlyoutPage})">
            <param name="config">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.FlyoutPage.SetCollapseStyle(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.FlyoutPage},Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.CollapseStyle)">
            <param name="config">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.FlyoutPage.UsePartialCollapse(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.FlyoutPage})">
            <param name="config">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.FlyoutPage.CollapsedPaneWidthProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.FlyoutPage.GetCollapsedPaneWidth(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.FlyoutPage.SetCollapsedPaneWidth(Microsoft.Maui.Controls.BindableObject,System.Double)">
            <param name="element">To be added.</param><param name="collapsedPaneWidth">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.FlyoutPage.CollapsedPaneWidth(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.FlyoutPage})">
            <param name="config">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.FlyoutPage.CollapsedPaneWidth(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.FlyoutPage},System.Double)">
            <param name="config">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.InputView">
            <summary>Provides access to reading order detection on the Windows platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.InputView.DetectReadingOrderFromContentProperty">
            <summary>Backing store for the attached property that controls whether the reading order is detected from the input view's content.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.InputView.SetDetectReadingOrderFromContent(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">The input view element whose reading order detection behavior to set.</param><param name="value">
          <see langword="true" /> to detect the reading order from the content. Otherwise, <see langword="false" />.</param><summary>Sets a Boolean value that controls whether the reading order is detected from the input view's content.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.InputView.GetDetectReadingOrderFromContent(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.InputView})">
            <param name="config">The platform configuration for the input view element whose reading order detection behavior to get.</param><summary>Returns a Boolean value that tells whether the reading order is detected from the input view's content.</summary><returns>A Boolean value that tells whether the reading order is detected from the input view's content.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.InputView.GetDetectReadingOrderFromContent(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The input view element whose reading order detection behavior to get.</param><summary>Returns a Boolean value that tells whether the reading order is detected from the input view's content.</summary><returns>A Boolean value that tells whether the reading order is detected from the input view's content.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.InputView.SetDetectReadingOrderFromContent(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.InputView},System.Boolean)">
            <param name="config">The input view element whose reading order detection behavior to set.</param><param name="value">
          <see langword="true" /> to detect the reading order from the content. Otherwise, <see langword="false" />.</param><summary>Sets a Boolean value that controls whether the reading order is detected from the input view's content.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Label">
            <summary>Provides access to reading order detection on the Windows platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Label.DetectReadingOrderFromContentProperty">
            <summary>Backing store for the attached property that controls whether the reading order is detected from the label's content.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Label.SetDetectReadingOrderFromContent(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">The label element whose reading order detection behavior to set.</param><param name="value">
          <see langword="true" /> to detect the reading order from the content. Otherwise, <see langword="false" />.</param><summary>Sets a Boolean value that controls whether the reading order is detected from the label's content.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Label.GetDetectReadingOrderFromContent(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.Label})">
            <param name="config">The platform configuration for the label element whose reading order detection behavior to get.</param><summary>Returns a Boolean value that tells whether the reading order is detected from the label's content.</summary><returns>A Boolean value that tells whether the reading order is detected from the label's content.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Label.GetDetectReadingOrderFromContent(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The label element whose reading order detection behavior to get.</param><summary>Returns a Boolean value that tells whether the reading order is detected from the label's content.</summary><returns>A Boolean value that tells whether the reading order is detected from the label's content.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Label.SetDetectReadingOrderFromContent(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.Label},System.Boolean)">
            <param name="config">The label element whose reading order detection behavior to set.</param><param name="value">
          <see langword="true" /> to detect the reading order from the content. Otherwise, <see langword="false" />.</param><summary>Sets a Boolean value that controls whether the reading order is detected from the label's content.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ListView">
            <summary>Platform-specific properties for list view controls on UWP.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ListView.SelectionModeProperty">
            <summary>Backing store for the selection mode attached property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ListView.GetSelectionMode(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The element whose selection mode to get.</param><summary>Returns the selection mode for the element.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ListView.SetSelectionMode(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ListViewSelectionMode)">
            <param name="element">The element whose selectio mode to set.</param><param name="value">The new selection mode value.</param><summary>Sets the selection mode for the element.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ListView.GetSelectionMode(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.ListView})">
            <param name="config">The element whose selection mode to get.</param><summary>Returns the selection mode for the element.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ListView.SetSelectionMode(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.ListView},Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ListViewSelectionMode)">
            <param name="config">The element whose selectio mode to set.</param><param name="value">The new selection mode value.</param><summary>Sets the selection mode for the element.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ListViewSelectionMode">
            <summary>Selection modes for list view controls on UWP.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ListViewSelectionMode.Inaccessible">
            <summary>
            Allows ListItems to have TapGestures. The Enter key and Narrator will not fire the ItemTapped event.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ListViewSelectionMode.Accessible">
            <summary>
            Allows the Enter key and Narrator to fire the ItemTapped event. ListItems cannot have TapGestures.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Page">
            <summary>The page instance that Microsoft.Maui.Controls created on the Windows platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Page.ToolbarPlacementProperty">
            <summary>Backing store for the attached property that controls the placement of the toolbar.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Page.GetToolbarPlacement(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The platform specific element on which to perform the operation.</param><summary>Returns a value that controls the placement of the toolbar.</summary><returns>A value that controls the placement of the toolbar.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Page.SetToolbarPlacement(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ToolbarPlacement)">
            <param name="element">The platform specific element on which to perform the operation.</param><param name="toolbarPlacement">The new toolbar placement.</param><summary>Sets a value that controls the placement of the toolbar.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Page.GetToolbarPlacement(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.Page})">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><summary>Returns a value that controls the placement of the toolbar.</summary><returns>A value that controls the placement of the toolbar.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Page.SetToolbarPlacement(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.Page},Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ToolbarPlacement)">
            <param name="config">The platform specific configuration that contains the element on which to perform the operation.</param><param name="value">The new property value to assign.</param><summary>Sets a value that controls the placement of the toolbar.</summary><returns>The updated configuration object on which developers can make successive method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Page.ToolbarDynamicOverflowEnabledProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Page.GetToolbarDynamicOverflowEnabled(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Page.SetToolbarDynamicOverflowEnabled(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Page.GetToolbarDynamicOverflowEnabled(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.Page})">
            <param name="config">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Page.SetToolbarDynamicOverflowEnabled(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.Page},System.Boolean)">
            <param name="config">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.RefreshView">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.RefreshView.RefreshPullDirectionProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.RefreshView.SetRefreshPullDirection(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.RefreshView.RefreshPullDirection)">
            <param name="element">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.RefreshView.GetRefreshPullDirection(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.RefreshView})">
            <param name="config">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.RefreshView.GetRefreshPullDirection(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.RefreshView.SetRefreshPullDirection(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.RefreshView},Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.RefreshView.RefreshPullDirection)">
            <param name="config">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.SearchBar">
            <summary>Provides control over the spellchecker on search bars.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.SearchBar.IsSpellCheckEnabledProperty">
            <summary>Backing store for the attached property that turns the spellchecker on and off.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.SearchBar.SetIsSpellCheckEnabled(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">The search bar element.</param><param name="value">
          <see langword="true" /> to turn the spellchecker on. <see langword="false" /> to turn it off.</param><summary>Turns the spellchecker on and off.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.SearchBar.GetIsSpellCheckEnabled(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The search bar element.</param><summary>Returns a Boolean value that tells whether the spellchecker is enabled.</summary><returns>
          <see langword="true" /> if the spellchecker is enabled. Otherwise, <see langword="false" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.SearchBar.GetIsSpellCheckEnabled(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.SearchBar})">
            <param name="config">The platform configuration for the search bar element.</param><summary>Returns a Boolean value that tells whether the spellchecker is enabled.</summary><returns>
          <see langword="true" /> if the spellchecker is enabled. Otherwise, <see langword="false" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.SearchBar.SetIsSpellCheckEnabled(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.SearchBar},System.Boolean)">
            <param name="config">The platform configuration for the search bar element.</param><param name="value">
          <see langword="true" /> to turn the spellchecker on. <see langword="false" /> to turn it off.</param><summary>Turns the spellchecker on and off.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.SearchBar.IsSpellCheckEnabled(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.SearchBar})">
            <param name="config">The platform configuration for the search bar element.</param><summary>Returns a Boolean value that tells whether the spellchecker is enabled.</summary><returns>
          <see langword="true" /> if the spellchecker is enabled. Otherwise, <see langword="false" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.SearchBar.EnableSpellCheck(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.SearchBar})">
            <param name="config">The platform configuration for the search bar element.</param><summary>Enables the spellchecker.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.SearchBar.DisableSpellCheck(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.SearchBar})">
            <param name="config">The platform configuration for the search bar element.</param><summary>Disables the spellchecker.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.TabbedPage">
            <summary>Provides control over header icons on the Windows platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.TabbedPage.HeaderIconsEnabledProperty">
            <summary>Backing store for the attached property that enables and disables header icons.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.TabbedPage.HeaderIconsSizeProperty">
            <summary>Backing store for the attached property that controls the size of header icons.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.TabbedPage.SetHeaderIconsEnabled(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">The element on which to perform the operation.</param><param name="value">
          <see langword="true" /> to enable header icons. <see langword="false" /> to disable them.</param><summary>Turns header icons on and off.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.TabbedPage.GetHeaderIconsEnabled(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The element on which to perform the operation.</param><summary>Returns a Boolean value that tells whether header icons are enabled.</summary><returns>
          <see langword="true" /> if header icons are enabled. Otherwise, <see langword="false" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.TabbedPage.GetHeaderIconsEnabled(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.TabbedPage})">
            <param name="config">The platform configuration for the element on which to perform the operation.</param><summary>Returns a Boolean value that tells whether header icons are enabled.</summary><returns>
          <see langword="true" /> if header icons are enabled. Otherwise, <see langword="false" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.TabbedPage.SetHeaderIconsEnabled(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.TabbedPage},System.Boolean)">
            <param name="config">The platform configuration for the element on which to perform the operation.</param><param name="value">
          <see langword="true" /> to enable header icons. <see langword="false" /> to disable them.</param><summary>Turns header icons on and off.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.TabbedPage.IsHeaderIconsEnabled(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.TabbedPage})">
            <param name="config">The platform configuration for the element on which to perform the operation.</param><summary>Returns a Boolean value that tells whether header icons are enabled.</summary><returns>
          <see langword="true" /> if header icons are enabled. Otherwise, <see langword="false" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.TabbedPage.EnableHeaderIcons(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.TabbedPage})">
            <param name="config">The platform configuration for the element on which to perform the operation.</param><summary>Enables header icons.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.TabbedPage.DisableHeaderIcons(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.TabbedPage})">
            <param name="config">The platform configuration for the element on which to perform the operation.</param><summary>Disables header icons.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.TabbedPage.SetHeaderIconsSize(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Graphics.Size)">
            <param name="element">The element on which to perform the operation.</param><param name="value">The new header icon size.</param><summary>Specifies the size of header icons.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.TabbedPage.GetHeaderIconsSize(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The element on which to perform the operation.</param><summary>Returns the size of header icons.</summary><returns>The size of header icons.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.TabbedPage.GetHeaderIconsSize(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.TabbedPage})">
            <param name="config">The platform configuration for the element on which to perform the operation.</param><summary>Returns the size of header icons.</summary><returns>The size of header icons.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.TabbedPage.SetHeaderIconsSize(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.TabbedPage},Microsoft.Maui.Graphics.Size)">
            <param name="config">The platform configuration for the element on which to perform the operation.</param><param name="value">The new header icon size.</param><summary>Specifies the size of header icons.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ToolbarPlacement">
            <summary>Enumerates toolbar positions for pages on the Windows platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ToolbarPlacement.Default">
            <summary>
            Default will place the Toolbar at the bottom of the screen on phones and
            at the top of the screen on larger devices
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ToolbarPlacement.Top">
            <summary>
            Always place the Toolbar at the top of the screen
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ToolbarPlacement.Bottom">
            <summary>
            Always place the Toolbar at the bottom of the screen
            </summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement">
            <summary>Provides access to platform-specific features of visual elements on the Windows platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.AccessKeyProperty">
            <summary>Backing store for the attached property that gets and sets the access key.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.AccessKeyPlacementProperty">
            <summary>Backing store for the attached property that gets and sets the nominal position to use for displaying the access key tip.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.AccessKeyHorizontalOffsetProperty">
            <summary>Backing store for the attached property that gets and sets the horizontal offset from the nominal position to use for displaying the access key tip.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.AccessKeyVerticalOffsetProperty">
            <summary>Backing store for the attached property that gets and sets the vertical offset from the nominal position to use for displaying the access key tip.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.GetAccessKey(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The element for which to get the access key.</param><summary>Returns the access key value.</summary><returns>The access key value.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.SetAccessKey(Microsoft.Maui.Controls.BindableObject,System.String)">
            <param name="element">The element for which to set the access key string.</param><param name="value">The new access key value.</param><summary>Sets the value that the access key displays.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.GetAccessKey(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.VisualElement})">
            <param name="config">The platform configuration for the element for which to get the access key.</param><summary>Returns the access key value.</summary><returns>The access key value.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.SetAccessKey(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.VisualElement},System.String)">
            <param name="config">The platform configuration for the element for which to set the access key string.</param><param name="value">The new access key value.</param><summary>Sets the value that the access key displays.</summary><returns>A fluent object on which the developer may make furter method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.GetAccessKeyPlacement(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The element for which to get the access key placement.</param><summary>Gets the nominal position to use for displaying the access key tip.</summary><returns>The nominal position to use for displaying the access key tip.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.SetAccessKeyPlacement(Microsoft.Maui.Controls.BindableObject,Microsoft.Maui.Controls.AccessKeyPlacement)">
            <param name="element">The element for which to set the horizontal access key placement.</param><param name="value">The new placement value.</param><summary>Sets nominal position to use for displaying the access key.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.GetAccessKeyPlacement(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.VisualElement})">
            <param name="config">The platform configuration for the element for which to get the access key placement.</param><summary>Gets the nominal position to use for displaying the access key tip.</summary><returns>The nominal position to use for displaying the access key tip.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.SetAccessKeyPlacement(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.VisualElement},Microsoft.Maui.Controls.AccessKeyPlacement)">
            <param name="config">The platform configuration for the element for which to set the new placement.</param><param name="value">The new placement value.</param><summary>Sets nominal position to use for displaying the access key.</summary><returns>A fluent object on which the developer may make furter method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.GetAccessKeyHorizontalOffset(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The element for which to get the horizontal offset.</param><summary>Gets the horizontal offset from the nominal position to use for displaying the access key tip.</summary><returns>The horizontal offset from the nominal position to use for displaying the access key tip.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.SetAccessKeyHorizontalOffset(Microsoft.Maui.Controls.BindableObject,System.Double)">
            <param name="element">The element for which to set the horizontal access key offset.</param><param name="value">The new offset value.</param><summary>Sets the horizontal offset from the nominal position to use for displaying the access key.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.GetAccessKeyHorizontalOffset(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.VisualElement})">
            <param name="config">The platform configuration for the element for which to get the horizontal offset.</param><summary>Gets the horizontal offset from the nominal position to use for displaying the access key tip.</summary><returns>The horizontal offset from the nominal position to use for displaying the access key tip.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.SetAccessKeyHorizontalOffset(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.VisualElement},System.Double)">
            <param name="config">The platform configuration for the element for which to set the horizontal access key offset.</param><param name="value">The new offset value.</param><summary>Sets the horizontal offset from the nominal position to use for displaying the access key.</summary><returns>A fluent object on which the developer may make furter method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.GetAccessKeyVerticalOffset(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The element for which to get the vertical offset.</param><summary>Gets the vertical offset from the nominal position to use for displaying the access key tip.</summary><returns>The vertical offset from the nominal position to use for displaying the access key tip.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.SetAccessKeyVerticalOffset(Microsoft.Maui.Controls.BindableObject,System.Double)">
            <param name="element">The element for which to set the vertical access key offset.</param><param name="value">The new offset value.</param><summary>Sets the vertical offset from the nominal position to use for displaying the access key.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.GetAccessKeyVerticalOffset(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.VisualElement})">
            <param name="config">The platform configuration for the element for which to get the vertical offset.</param><summary>Gets the vertical offset from the nominal position to use for displaying the access key tip.</summary><returns>The vertical offset from the nominal position to use for displaying the access key tip.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.SetAccessKeyVerticalOffset(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.VisualElement},System.Double)">
            <param name="config">The platform configuration for the element for which to set the vertical access key offset.</param><param name="value">The new offset value.</param><summary>Sets the vertical offset from the nominal position to use for displaying the access key.</summary><returns>A fluent object on which the developer may make furter method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.IsLegacyColorModeEnabledProperty">
            <summary>Backing store for the attached property that controls the legacy color mode.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.GetIsLegacyColorModeEnabled(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The visual element whose legacy color mode to return.</param><summary>Returns a Boolean value that controls whether legacy color mode is enabled.</summary><returns>
          <see langword="true" /> if legacy color mode is enabled. Otherwise, <see langword="false" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.SetIsLegacyColorModeEnabled(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">The visual element whose legacy color mode to return.</param><param name="value">
          <see langword="true" /> to enable legacy color mode. Otherwise, <see langword="false" />.</param><summary>Turns the legacy color mode on and off.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.GetIsLegacyColorModeEnabled(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.VisualElement})">
            <param name="config">The platform configuration for the visual element whose legacy color mode to return.</param><summary>Returns a Boolean value that controls whether legacy color mode is enabled.</summary><returns>
          <see langword="true" /> if legacy color mode is enabled. Otherwise, <see langword="false" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.SetIsLegacyColorModeEnabled(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.VisualElement},System.Boolean)">
            <param name="config">The platform configuration for the visual element whose legacy color mode to return.</param><param name="value">
          <see langword="true" /> to enable legacy color mode. Otherwise, <see langword="false" />.</param><summary>Turns the legacy color mode on and off.</summary><returns>A fluent object on which the developer may make further method calls.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.WebView">
            <summary>Controls whether JavaScript alerts are enabled for a web view.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.WebView.IsJavaScriptAlertEnabledProperty">
            <summary>Backing store for the attached property that controls whether the web view allows JavaScript alerts.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.WebView.GetIsJavaScriptAlertEnabled(Microsoft.Maui.Controls.BindableObject)">
            <param name="element">The web view element whose JavaScript alert permissions to return.</param><summary>Returns a Boolean value that tells whether the web view allows JavaScript alerts.</summary><returns>A Boolean value that tells whether the web view allows JavaScript alerts.</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.WebView.SetIsJavaScriptAlertEnabled(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="element">The web view element whose JavaScript alert permissions to set.</param><param name="value">
          True to allow JavaScript alerts. Otherwise, false.</param><summary>Sets a Boolean value that tells whether the web view allows JavaScript alerts.</summary>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.WebView.IsJavaScriptAlertEnabled(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.WebView})">
            <param name="config">The platform configuration for the web view element whose JavaScript alert permissions to return.</param><summary>Returns a Boolean value that tells whether the web view allows JavaScript alerts.</summary><returns>A Boolean value that tells whether the web view allows JavaScript alerts.</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.WebView.SetIsJavaScriptAlertEnabled(Microsoft.Maui.Controls.IPlatformElementConfiguration{Microsoft.Maui.Controls.PlatformConfiguration.Windows,Microsoft.Maui.Controls.WebView},System.Boolean)">
            <param name="config">The platform configuration for the web view element whose JavaScript alert permissions to set.</param><param name="value">
          True to allow JavaScript alerts. Otherwise, false.</param><summary>Sets a Boolean value that tells whether the web view allows JavaScript alerts.</summary><returns>A fluent object on which the developer may make further method calls.</returns>
        </member>
        <member name="T:Microsoft.Maui.Controls.TabsStyle">
            <summary>Enumerates tab styles for tabbed pages.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.TabsStyle.Default">
            <summary>Tabs are placed and displayed according to system defaults.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.TabsStyle.Hidden">
            <summary>Tabs are hidden.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.TabsStyle.Icons">
            <summary>Tabs are shown as icons.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.TabsStyle.OnNavigation">
            <summary>Tabs are displayed when the user swipes from a screen edge.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.TabsStyle.OnBottom">
            <summary>Tabs are displayed at the bottom of the page.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.AccessKeyPlacement">
            <summary>Enumerates access key placement relative to the control that the access key describes.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.AccessKeyPlacement.Auto">
            <summary>Indicates that the default access key placement will be used.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.AccessKeyPlacement.Top">
            <summary>Indicates that the access key will appear above the top edge of the described element.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.AccessKeyPlacement.Bottom">
            <summary>Indicates that the access key will appear below the lower edge of the described element.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.AccessKeyPlacement.Right">
            <summary>Indicates that the access key will appear to the right of the right edge of the described element.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.AccessKeyPlacement.Left">
            <summary>Indicates that the access key will appear to the left of the left edge of the described element.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.AccessKeyPlacement.Center">
            <summary>Indicates that the access key will be overlaid on top of the center of the described element.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.PlatformConfigurationRegistry`1">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.Controls.PlatformConfigurationRegistry`1.On``1">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Controls.PointerEventArgs">
            <summary>
            Arguments for PointerGestureRecognizer events.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.PointerGestureRecognizer">
            <summary>
            Provides pointer gesture recognition and events.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PointerGestureRecognizer.PointerEnteredCommandProperty">
            <summary>
            The command to invoke when the pointer has entered the view. This is a bindable property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PointerGestureRecognizer.PointerEnteredCommandParameterProperty">
            <summary>
            An object to be passed to PointerEnteredCommand. This is a bindable property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PointerGestureRecognizer.PointerExitedCommandProperty">
            <summary>
            The command to invoke when the pointer has exited the view. This is a bindable property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PointerGestureRecognizer.PointerExitedCommandParameterProperty">
            <summary>
            An object to be passed to PointerExitedCommand. This is a bindable property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PointerGestureRecognizer.PointerMovedCommandProperty">
            <summary>
            The command to invoke when the pointer has moved within the view. This is a bindable property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PointerGestureRecognizer.PointerMovedCommandParameterProperty">
            <summary>
            An object to be passed to the PointerMovedCommand. This is a bindable property.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Controls.PointerGestureRecognizer.#ctor">
            <summary>
            Initializes a new instance of PointerGestureRecognizer.
            </summary>
        </member>
        <member name="E:Microsoft.Maui.Controls.PointerGestureRecognizer.PointerEntered">
            <summary>
            Raised when the pointer enters the view.
            </summary>
        </member>
        <member name="E:Microsoft.Maui.Controls.PointerGestureRecognizer.PointerExited">
            <summary>
            Raised when the pointer exits the view.
            </summary>
        </member>
        <member name="E:Microsoft.Maui.Controls.PointerGestureRecognizer.PointerMoved">
            <summary>
            Raised when the pointer moves within the view.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.PointerGestureRecognizer.PointerEnteredCommand">
            <summary>
            Identifies the PointerEnteredCommand bindable property.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.PointerGestureRecognizer.PointerEnteredCommandParameter">
            <summary>
            Identifies the PointerEnteredCommandParameter bindable property.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.PointerGestureRecognizer.PointerExitedCommand">
            <summary>
            Identifies the PointerExitedCommand bindable property.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.PointerGestureRecognizer.PointerExitedCommandParameter">
            <summary>
            Identifies the PointerExitedCommandParameter bindable property.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.PointerGestureRecognizer.PointerMovedCommand">
            <summary>
            Identifies the PointerMovedCommand bindable property.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.PointerGestureRecognizer.PointerMovedCommandParameter">
            <summary>
            Identifies the PointerMovedCommandParameter bindable property.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Controls.PointerGestureRecognizer.SendPointerEntered(Microsoft.Maui.Controls.View,System.Func{Microsoft.Maui.IElement,System.Nullable{Microsoft.Maui.Graphics.Point}})">
            <summary>
            For internal use by the .NET MAUI platform.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Controls.PointerGestureRecognizer.SendPointerExited(Microsoft.Maui.Controls.View,System.Func{Microsoft.Maui.IElement,System.Nullable{Microsoft.Maui.Graphics.Point}})">
            <summary>
            For internal use by the .NET MAUI platform.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Controls.PointerGestureRecognizer.SendPointerMoved(Microsoft.Maui.Controls.View,System.Func{Microsoft.Maui.IElement,System.Nullable{Microsoft.Maui.Graphics.Point}})">
            <summary>
            For internal use by the .NET MAUI platform.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.PoppedToRootEventArgs">
            <summary>EventArgs for the NavigationPage's PoppedToRoot navigation event.</summary><remarks>
        The <see cref="E:Microsoft.Maui.Controls.NavigationPage.PoppedToRoot" /> passes <see cref="T:Microsoft.Maui.Controls.NavigationEventArgs" /> as the
        event argument. This class can be cast to <see cref="T:Microsoft.Maui.Controls.PoppedToRootEventArgs" /> to allow for access to the
        PoppedPages collection that exposes the pages that was popped.
    </remarks><altmember cref="E:Microsoft.Maui.Controls.NavigationPage.PoppedToRoot" />
        </member>
        <member name="M:Microsoft.Maui.Controls.PoppedToRootEventArgs.#ctor(Microsoft.Maui.Controls.Page,System.Collections.Generic.IEnumerable{Microsoft.Maui.Controls.Page})">
            <param name="page">For internal use by the Microsoft.Maui.Controls platform.</param><param name="poppedPages">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by platform renderers.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.PoppedToRootEventArgs.PoppedPages">
            <summary>Gets a collection of pages that was removed from the navigation stack.</summary><value>
        </value><remarks>
          <para>For <see cref="E:Microsoft.Maui.Controls.NavigationPage.PoppedToRoot" /> this represents the pages
          that were popped. The order of the pages represents the order of the stack that was popped. The first page in the
          collection is the page that was closest to the root page.
          </para>
        </remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PropertyChangingEventArgs">
            <summary>Event arguments for the <see cref="T:Microsoft.Maui.Controls.PropertyChangingEventHandler" /> delegate.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.PropertyChangingEventArgs.#ctor(System.String)">
            <param name="propertyName">To be added.</param><summary>Creates a new <see cref="T:Microsoft.Maui.Controls.PropertyChangingEventArgs" /> object that indicates that <paramref name="propertyName" /> is changing.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.PropertyChangingEventArgs.PropertyName">
            <summary>Gets the name of the property that is changing.</summary><value>The name of the property that is changing.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.RadialGradientBrush">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.RadialGradientBrush.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.RadialGradientBrush.#ctor(Microsoft.Maui.Controls.GradientStopCollection)">
            <param name="gradientStops">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.RadialGradientBrush.#ctor(Microsoft.Maui.Controls.GradientStopCollection,System.Double)">
            <param name="gradientStops">To be added.</param><param name="radius">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.RadialGradientBrush.#ctor(Microsoft.Maui.Controls.GradientStopCollection,Microsoft.Maui.Graphics.Point,System.Double)">
            <param name="gradientStops">To be added.</param><param name="center">To be added.</param><param name="radius">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.RadialGradientBrush.IsEmpty">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.RadialGradientBrush.CenterProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.RadialGradientBrush.Center">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.RadialGradientBrush.RadiusProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.RadialGradientBrush.Radius">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.RadioButtonGroup">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.RadioButtonGroup.GroupNameProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.RadioButtonGroup.GetGroupName(Microsoft.Maui.Controls.BindableObject)">
            <param name="b">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.RadioButtonGroup.SelectedValueProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.RadioButtonGroup.GetSelectedValue(Microsoft.Maui.Controls.BindableObject)">
            <param name="bindableObject">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ReferenceTypeConverter">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Region">
            <summary>Represents a visual region in a Microsoft.Maui.Controls UI.</summary><remarks>
      <para>Currently, regions represent rectangles, or collections of rectangles, only.</para>
    </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Region.FromLines(System.Double[],System.Double,System.Double,System.Double,System.Double)">
            <param name="lineHeights">The list of line heights to use.</param><param name="maxWidth">The width of a line that spans the rectangle that encloses the region.</param><param name="startX">The starting X value on the first line, equivalent to an indent.</param><param name="endX">The width of the last line.</param><param name="startY">The top of the region.</param><summary>Creates and returns a region that detects points inside a collection of rectangles created from the lines that are specified by the provided data.</summary><returns>A region that detects points inside a collection of rectangles created from the lines that are specified by the provided data.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Region.Contains(Microsoft.Maui.Graphics.Point)">
            <param name="pt">The point to check.</param><summary>Returns <see langword="true" /> if the specified point is inside the region. Otherwise, returns <see langword="false" />.</summary><returns>
          <see langword="true" /> if the specified point is inside the region. Otherwise, <see langword="false" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Region.Contains(System.Double,System.Double)">
            <param name="x">The X-coordinate to check.</param><param name="y">The Y-coordinate to check.</param><summary>Returns <see langword="true" /> if the point that is represented by the specified coordinates is inside the region. Otherwise, returns <see langword="false" />.</summary><returns>
          <see langword="true" /> if the specified point that is represented by the specified coordinates is inside the region. Otherwise, <see langword="false" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Region.Deflate">
            <summary>Returns a region shrunk by the values in the most recent inflation, or does nothing if there has not been a previous inflation.</summary><returns>A region shrunk by the values in the most recent inflation, or does nothing if there has not been a previous inflation.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Region.Inflate(System.Double)">
            <param name="size">The amount by which to move each side of the region or its subregions.</param><summary>Returns a region that is expanded by or has all of its subregions expanded by the specified <paramref name="size" />.</summary><returns>A  region that is expanded by or has all of its subregions expanded by the specified <paramref name="size" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Region.Inflate(System.Double,System.Double,System.Double,System.Double)">
            <param name="left">The amount to move the left side to the left.</param><param name="top">The amount to move the top upward.</param><param name="right">The amount to move the right side to the right.</param><param name="bottom">The amount to move the bottom down.</param><summary>Returns a region that is expanded by or has all of its subregions expanded by the specified values.</summary><returns>A  region that is expanded by or has all of its subregions expanded by the specified values.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.InitializationFlags">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.InitializationFlags.DisableCss">
            <summary>To be added.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.RelativeBindingSource">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.RelativeBindingSource.#ctor(Microsoft.Maui.Controls.RelativeBindingSourceMode,System.Type,System.Int32)">
            <param name="mode">To be added.</param><param name="ancestorType">To be added.</param><param name="ancestorLevel">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.RelativeBindingSource.Mode">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.RelativeBindingSource.AncestorType">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.RelativeBindingSource.AncestorLevel">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.RelativeBindingSource.Self">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.RelativeBindingSource.TemplatedParent">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.RelativeBindingSourceMode">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.RelativeBindingSourceMode.TemplatedParent">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.RelativeBindingSourceMode.Self">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.RelativeBindingSourceMode.FindAncestor">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.RelativeBindingSourceMode.FindAncestorBindingContext">
            <summary>To be added.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.RenderWithAttribute">
            <summary>Associate view with renderer.</summary><remarks>Lazily assoicate a view with it's renderer.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.RenderWithAttribute.#ctor(System.Type)">
            <param name="type">The view to render.</param><summary>The view to render.</summary><remarks>The view to render.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.RenderWithAttribute.#ctor(System.Type,System.Type[])">
            <param name="type">To be added.</param><param name="supportedVisuals">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.RenderWithAttribute.SupportedVisuals">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.RenderWithAttribute.Type">
            <summary>The renderer for this view.</summary><value>The renderer for this view.</value><remarks>The renderer for this view.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ResolutionGroupNameAttribute">
            <summary>Attribute that identifies a group name, typically a company name or reversed company URL, that provides a scope for effect names.</summary><remarks>
      <para>Developers must supply a name to <see cref="T:Microsoft.Maui.Controls.ExportEffectAttribute" /> that is unique over the scope of the name that they supply to <see cref="T:Microsoft.Maui.Controls.ResolutionGroupNameAttribute" />. The <see cref="M:Microsoft.Maui.Controls.Effect.Resolve(System.String)" /> method takes a string that is the concatenation of the name (the resolution group name), <c>'.'</c>, and the unique name that was supplied to <see cref="T:Microsoft.Maui.Controls.ExportEffectAttribute" />, and returns the specified effect.</para>
      <example>
        <para>For example, with the declarations:</para>
        <code lang="c#"><![CDATA[
        [assembly: ResolutionGroupName ("com.YourCompany")]
        [assembly: ExportEffect (typeof (ShadowEffect), "ShadowEffect")]]]></code>
        <para>Then the code below will add the effect to a button:</para>
        <code lang="c#"><![CDATA[
        [var button = new Button { Text = "I have a shadow" };
button.Effects.Add (Effect.Resolve ("com.YourCompany.ShadowEffect"));]]></code>
      </example>
    </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ResolutionGroupNameAttribute.#ctor(System.String)">
            <param name="name">A name, such as a company name or reversed company URL, that helps to uniquely identify effects.</param><summary>Creates a new resolution group name attribute.</summary><remarks>
          <para>Developers must supply a name to <see cref="T:Microsoft.Maui.Controls.ExportEffectAttribute" /> that is unique over the scope of  the <paramref name="name" /> that they supply to <see cref="T:Microsoft.Maui.Controls.ResolutionGroupNameAttribute" />. The <see cref="M:Microsoft.Maui.Controls.Effect.Resolve(System.String)" /> method takes a string that is the concatenation of <paramref name="name" /> (the resolution group name), <c>'.'</c>, and the unique name that was supplied to <see cref="T:Microsoft.Maui.Controls.ExportEffectAttribute" />, and returns the specified effect.</para>
          <example>
            <para>For example, with the declarations:</para>
            <code lang="c#"><![CDATA[
            [assembly: ResolutionGroupName ("com.YourCompany")]
            [assembly: ExportEffect (typeof (ShadowEffect), "ShadowEffect")]]]></code>
            <para>Then the code below will add the effect to a button:</para>
            <code lang="c#"><![CDATA[
            [var button = new Button { Text = "I have a shadow" };
    button.Effects.Add (Effect.Resolve ("com.YourCompany.ShadowEffect"));]]></code>
          </example>
        </remarks><altmember cref="T:Microsoft.Maui.Controls.ExportEffectAttribute" />
        </member>
        <member name="T:Microsoft.Maui.Controls.ResourceDictionary">
            <summary>An IDictionary that maps identifier strings to arbitrary resource objects.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ResourceDictionary.Source">
            <summary>Gets or sets the URI of the merged resource dictionary.</summary><value>The URI of the merged resource dictionary.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ResourceDictionary.SetAndLoadSource(System.Uri,System.String,System.Reflection.Assembly,System.Xml.IXmlLineInfo)">
            <param name="value">To be added.</param><param name="resourcePath">To be added.</param><param name="assembly">To be added.</param><param name="lineInfo">To be added.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ResourceDictionary.MergedDictionaries">
            <summary>Gets the collection of dictionaries that were merged into this dictionary.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ResourceDictionary.Clear">
            <summary>Empties the <see cref="T:Microsoft.Maui.Controls.ResourceDictionary" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ResourceDictionary.Count">
            <summary>The number of entries in the <see cref="T:Microsoft.Maui.Controls.ResourceDictionary" />.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ResourceDictionary.Add(System.String,System.Object)">
            <param name="key">The identifier to be used to retrieve the <paramref name="value" />.</param><param name="value">The <see cref="T:System.Object" /> associated with the <paramref name="key" />.</param><summary>Adds <paramref name="key" /> and <paramref name="value" /> to the <see cref="T:Microsoft.Maui.Controls.ResourceDictionary" /> as a key-value pair.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ResourceDictionary.ContainsKey(System.String)">
            <param name="key">The identifier being searched for.</param><summary>Whether the <see cref="T:Microsoft.Maui.Controls.ResourceDictionary" /> contains a key-value pair identified by <paramref name="key" />.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ResourceDictionary.Keys">
            <summary>The collection of identifier <see langword="string" />s that are keys in the <see cref="T:Microsoft.Maui.Controls.ResourceDictionary" />.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ResourceDictionary.Remove(System.String)">
            <param name="key">The identifier of the key-value pair to be removed.</param><summary>Removes the key and value identified by <paramref name="key" /> from the <see cref="T:Microsoft.Maui.Controls.ResourceDictionary" />.</summary><returns>
          <see langword="true" /> if the key existed and the removal was successful.</returns><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ResourceDictionary.Values">
            <summary>Retrieves the values of the <see cref="T:Microsoft.Maui.Controls.ResourceDictionary" />.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ResourceDictionary.GetEnumerator">
            <summary>Returns a <see cref="T:System.Collections.Generic.IEnumerator`1" /> of the <see cref="T:Microsoft.Maui.Controls.ResourceDictionary" />'s <see cref="T:System.Collections.Generic.KeyValuePair`2" />s.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ResourceDictionary.TryGetValue(System.String,System.Object@)">
            <param name="key">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ResourceDictionary.Add(Microsoft.Maui.Controls.Style)">
            <param name="style">The implicit style to add.</param><summary>Adds an implicit Style to the ResourceDictionary.</summary><remarks>
          <para>Implicit Styles are applied to all VisualElements matching TargetType in the descendants of this ResourceDictionary owner, unless a Style is explicitely applied to the Element.</para>
          <para>Implicit Styles are added to a ResourceDictionary in XAML by not specifying an x:Key for the Element.</para>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ResourceDictionary.Add(Microsoft.Maui.Controls.ResourceDictionary)">
            <param name="mergedResourceDictionary">The resource dictionary to add.</param><summary>Add <paramref name="mergedResourceDictionary" /> to the merged dictionaries in <see langword="this" /> resource dictionary.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ResourceDictionary.Add(Microsoft.Maui.Controls.StyleSheets.StyleSheet)">
            <param name="styleSheet">The style sheet to add</param><summary>Adds <paramref name="styleSheet" /> tho <see langword="this" /> resource dictionary's list of style sheets.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.RouteFactory">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.RouteFactory.GetOrCreate">
            <summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Routing">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Routing.RouteProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Routing.GetOrCreateContent(System.String,System.IServiceProvider)">
            <param name="route">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Routing.GetRoute(Microsoft.Maui.Controls.BindableObject)">
            <param name="obj">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Routing.FormatRoute(System.Collections.Generic.List{System.String})">
            <param name="segments">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Routing.FormatRoute(System.String)">
            <param name="route">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Routing.RegisterRoute(System.String,Microsoft.Maui.Controls.RouteFactory)">
            <param name="route">To be added.</param><param name="factory">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Routing.UnRegisterRoute(System.String)">
            <param name="route">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Routing.RegisterRoute(System.String,System.Type)">
            <param name="route">To be added.</param><param name="type">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Routing.SetRoute(Microsoft.Maui.Controls.Element,System.String)">
            <param name="obj">To be added.</param><param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.RoutingEffect">
            <summary>Platform-independent effect that wraps an inner effect, which is usually platform-specific.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.RowDefinition">
            <summary>An <see cref="T:Microsoft.Maui.Controls.IDefinition" /> that defines properties for a row in a <see cref="T:Microsoft.Maui.Controls.Grid" />.</summary><remarks>
      <example>
        <para>App developers can specify <see cref="T:Microsoft.Maui.GridUnitType" /> values for the <see cref="P:Microsoft.Maui.Controls.RowDefinition.Height" /> property in XAML. This is typically done inside tags for the <see cref="P:Microsoft.Maui.Controls.Grid.RowDefinitions" /> collection property. The following example demonstrates setting three row heights to each of the three valid <see cref="T:Microsoft.Maui.GridUnitType" /> values:</para>
        <code lang="XAML"><![CDATA[
<Grid.RowDefinitions>
    <RowDefinition Height="Auto" />
    <RowDefinition Height="*" />
    <RowDefinition Height="100" />
</Grid.RowDefinitions>
]]></code>
      </example>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.RowDefinition.HeightProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.RowDefinition.Height" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.RowDefinition.#ctor">
            <summary>Creates a new <see cref="T:Microsoft.Maui.Controls.RowDefinition" /> object with default values.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.RowDefinition.Height">
            <summary>Gets or sets the height of the row.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.RowDefinitionCollection">
            <summary>A <see cref="T:Microsoft.Maui.Controls.DefinitionCollection`1" /> for <see cref="T:Microsoft.Maui.Controls.RowDefinition" />s.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.RowDefinitionCollectionTypeConverter">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ScrolledEventArgs">
            <summary>Arguments for the event that is raised when a window is scrolled.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ScrolledEventArgs.#ctor(System.Double,System.Double)">
            <param name="x">The X position of the finished scroll.</param><param name="y">The Y position of the finished scroll.</param><summary>Constructs a new <see cref="T:Microsoft.Maui.Controls.ScrolledEventArgs" /> object for a scroll to <paramref name="x" /> and <paramref name="y" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ScrolledEventArgs.ScrollX">
            <summary>The X position of the finished scroll.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ScrolledEventArgs.ScrollY">
            <summary>The Y position of the finished scroll.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ScrollMode">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ScrollMode.Disabled">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.ScrollMode.Enabled">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.ScrollMode.Auto">
            <summary>To be added.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.ScrollToMode">
            <summary>Enumerates values that describe how a scroll request is made.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ScrollToMode.Element">
            <summary>Scroll positions are specified by element.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.ScrollToMode.Position">
            <summary>Scroll positions are specified by a float.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.ScrollToPosition">
            <summary>Enumerates values that describe a scroll request.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ScrollToPosition.MakeVisible">
            <summary>Scroll to make a specified list item visible.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.ScrollToPosition.Start">
            <summary>Scroll to the start of a list.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.ScrollToPosition.Center">
            <summary>Scroll to the center of a list.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.ScrollToPosition.End">
            <summary>Scroll to the end of a list.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.ScrollToRequestedEventArgs">
            <summary>Arguments for the event that is raised when a scroll is requested.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ScrollToRequestedEventArgs.Element">
            <summary>An element to scroll to.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ScrollToRequestedEventArgs.Mode">
            <summary>Whether to scroll by element or by position.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ScrollToRequestedEventArgs.Position">
            <summary>An enumeration value that describes which part of an element to scroll to.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ScrollToRequestedEventArgs.ScrollX">
            <summary>The X position to scroll to.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ScrollToRequestedEventArgs.ScrollY">
            <summary>The Y position to scroll to.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ScrollToRequestedEventArgs.ShouldAnimate">
            <summary>Gets a value that tells whether the scroll operation should be animated.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.SearchBoxVisibility">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchBoxVisibility.Hidden">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchBoxVisibility.Collapsible">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchBoxVisibility.Expanded">
            <summary>To be added.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.SelectedItemChangedEventArgs">
            <summary>Event arguments for the <see cref="E:Microsoft.Maui.Controls.ListView.ItemSelected" /> event.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SelectedItemChangedEventArgs.#ctor(System.Object,System.Int32)">
            <param name="selectedItem">To be added.</param><param name="selectedItemIndex">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SelectedItemChangedEventArgs.SelectedItem">
            <summary>Gets the new selected item.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SelectedItemChangedEventArgs.SelectedItemIndex">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.SelectedPositionChangedEventArgs">
            <summary>Event arguments for positional scrolling events.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SelectedPositionChangedEventArgs.#ctor(System.Int32)">
            <param name="selectedPosition">The newly selected position.</param><summary>Creates a new <see cref="T:Microsoft.Maui.Controls.SelectedPositionChangedEventArgs" /> with the specified new <paramref name="selectedPosition" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SelectedPositionChangedEventArgs.SelectedPosition">
            <summary>Gets the newly selected position.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.SeparatorVisibility">
            <summary>Enumerates values that control the visibility of list item separators.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SeparatorVisibility.Default">
            <summary>Use the default visibility for the platform.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.SeparatorVisibility.None">
            <summary>Do not display separators.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.Setter">
            <summary>Represents an assignment of a property to a value, typically in a style or in response to a trigger.</summary><remarks>
      <para>Setters are used with triggers and styles.</para>
    </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Setter.TargetName">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Setter.Property">
            <summary>The property on which to apply the assignment.</summary><value>To be added.</value><remarks>
          <para>Only bindable properties can be set with a <see cref="T:Microsoft.Maui.Controls.Setter" />.</para>.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Setter.Value">
            <summary>The value to assign to the property.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.SettersExtensions">
            <summary>Defines extensions methods for IList&lt;Setter&gt;</summary><remarks>
      <para />
    </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SettersExtensions.Add(System.Collections.Generic.IList{Microsoft.Maui.Controls.Setter},Microsoft.Maui.Controls.BindableProperty,System.Object)">
            <param name="setters">The list of setters to which to add a setter that sets <paramref name="property" /> to <paramref name="value" />.</param><param name="property">The property to set.</param><param name="value">The value to which to set the property set.</param><summary>Add a Setter with a value to the IList&lt;Setter&gt;</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SettersExtensions.AddBinding(System.Collections.Generic.IList{Microsoft.Maui.Controls.Setter},Microsoft.Maui.Controls.BindableProperty,Microsoft.Maui.Controls.Binding)">
            <param name="setters">The list of setters to which to add a setter that binds <paramref name="property" /> using <paramref name="binding" />.</param><param name="property">The property to set.</param><param name="binding">The binding to add.</param><summary>Add a Setter with a Binding to the IList&lt;Setter&gt;</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SettersExtensions.AddDynamicResource(System.Collections.Generic.IList{Microsoft.Maui.Controls.Setter},Microsoft.Maui.Controls.BindableProperty,System.String)">
            <param name="setters">The list of setters to which to add the keyed property.</param><param name="property">The resource to add.</param><param name="key">The resource key.</param><summary>Add a Setter with a DynamicResource to the IList&lt;Setter&gt;</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.BackButtonBehavior">
            <summary>A <see cref="T:Microsoft.Maui.Controls.BindableObject" /> specifying the behavior associated with the back button in a Shell application.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.BackButtonBehavior.CommandParameterProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.BackButtonBehavior.CommandParameter" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.BackButtonBehavior.CommandProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.BackButtonBehavior.Command" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.BackButtonBehavior.IconOverrideProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.BackButtonBehavior.IconOverride" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.BackButtonBehavior.IsEnabledProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.BackButtonBehavior.IsEnabled" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.BackButtonBehavior.TextOverrideProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.BackButtonBehavior.TextOverride" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.BackButtonBehavior.Command">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.BackButtonBehavior.CommandParameter">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.BackButtonBehavior.IconOverride">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.BackButtonBehavior.IsEnabled">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.BackButtonBehavior.TextOverride">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.BaseShellItem">
            <summary>A <see cref="T:Microsoft.Maui.Controls.NavigableElement" /> that is the base class for <see cref="T:Microsoft.Maui.Controls.ShellGroupItem" /> and <see cref="T:Microsoft.Maui.Controls.ShellContent" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.BaseShellItem.FlyoutIconProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.BaseShellItem.FlyoutIcon" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.BaseShellItem.IconProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.BaseShellItem.Icon" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.BaseShellItem.IsCheckedProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.BaseShellItem.IsChecked" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.BaseShellItem.IsEnabledProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.BaseShellItem.IsEnabled" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.BaseShellItem.TitleProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.BaseShellItem.Title" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.BaseShellItem.IsVisibleProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.BaseShellItem.FlyoutIcon">
            <summary>The icon to use for the item. If this property is unset, it will fallback to using the <see cref="P:Microsoft.Maui.Controls.BaseShellItem.Icon" /> property value.</summary><value>A <see cref="T:Microsoft.Maui.Controls.ImageSource" /> that represents an icon.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.BaseShellItem.Icon">
            <summary>Defines the icon to display in parts of the chrome that are not the flyout.</summary><value>A <see cref="T:Microsoft.Maui.Controls.ImageSource" /> that represents an icon.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.BaseShellItem.IsChecked">
            <summary>Defines if the item is currently highlighted in the flyout.</summary><value>
          <see langword="true" /> if the item is currently highlighted.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.BaseShellItem.IsEnabled">
            <summary>Defines if the item is selectable in the chrome.</summary><value>
          <see langword="true" /> if the item is selectable in the chrome.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.BaseShellItem.Route">
            <summary>The string used to address the item.</summary><value>A unique string that identifies the item.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.BaseShellItem.Title">
            <summary>Title to display in the UI.</summary><value>Title to display in the UI.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.BaseShellItem.IsVisible">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.FlyoutDisplayOptions">
            <summary>Enumerates display modes for the flyout in a Shell appication.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.FlyoutDisplayOptions.AsSingleItem">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.FlyoutDisplayOptions.AsMultipleItems">
            <summary>To be added.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.MenuItemCollection">
            <summary>A group of related <see cref="T:Microsoft.Maui.Controls.MenuItem" /> objects.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.MenuItemCollection.Count">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.MenuItemCollection.IsReadOnly">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.MenuItemCollection.Add(Microsoft.Maui.Controls.MenuItem)">
            <param name="item">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.MenuItemCollection.Clear">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.MenuItemCollection.Contains(Microsoft.Maui.Controls.MenuItem)">
            <param name="item">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.MenuItemCollection.CopyTo(Microsoft.Maui.Controls.MenuItem[],System.Int32)">
            <param name="array">To be added.</param><param name="arrayIndex">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.MenuItemCollection.GetEnumerator">
            <summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.MenuItemCollection.IndexOf(Microsoft.Maui.Controls.MenuItem)">
            <param name="item">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.MenuItemCollection.Insert(System.Int32,Microsoft.Maui.Controls.MenuItem)">
            <param name="index">To be added.</param><param name="item">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.MenuItemCollection.Remove(Microsoft.Maui.Controls.MenuItem)">
            <param name="item">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.MenuItemCollection.RemoveAt(System.Int32)">
            <param name="index">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.NavigableElement">
            <summary>A <see cref="T:Microsoft.Maui.Controls.Element" /> that supports navigation.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.NavigableElement.NavigationProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.NavigableElement.Navigation" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.NavigableElement.StyleProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.NavigableElement.Style" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.NavigableElement.Navigation">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.NavigableElement.Style">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.NavigableElement.StyleClass">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.NavigableElement.class">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.NavigableElement.NavigationProxy">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.PresentationMode">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.PresentationMode.NotAnimated">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PresentationMode.Animated">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PresentationMode.Modal">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PresentationMode.ModalAnimated">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.PresentationMode.ModalNotAnimated">
            <summary>To be added.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.QueryPropertyAttribute">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.QueryPropertyAttribute.Name">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.QueryPropertyAttribute.QueryId">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.QueryPropertyAttribute.#ctor(System.String,System.String)">
            <param name="name">To be added.</param><param name="queryId">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.RouteRequestBuilder">
            <summary>
            This attempts to locate the intended route trying to be navigated to
            </summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.SearchHandler">
            <summary>Default implementation of <see cref="T:Microsoft.Maui.Controls.ISearchHandlerController" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.IsFocusedPropertyKey">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.IsFocusedProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchHandler.IsFocused">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SearchHandler.SetIsFocused(System.Boolean)">
            <param name="value">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SearchHandler.Focus">
            <summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SearchHandler.Unfocus">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.KeyboardProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchHandler.Keyboard">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.HorizontalTextAlignmentProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.VerticalTextAlignmentProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchHandler.HorizontalTextAlignment">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchHandler.VerticalTextAlignment">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.TextColorProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.CharacterSpacingProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchHandler.TextColor">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.CancelButtonColorProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.FontFamilyProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.FontSizeProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.FontAttributesProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.PlaceholderProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.SearchHandler.Placeholder" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.PlaceholderColorProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.TextTransformProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchHandler.TextTransform">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SearchHandler.UpdateFormsText(System.String,Microsoft.Maui.TextTransform)">
            <param name="source">To be added.</param><param name="textTransform">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchHandler.CancelButtonColor">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchHandler.FontAttributes">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchHandler.FontFamily">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchHandler.CharacterSpacing">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchHandler.FontSize">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchHandler.PlaceholderColor">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchHandler.Placeholder">
            <summary>The text to display when the search box is empty.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.BackgroundColorProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchHandler.BackgroundColor">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.ClearIconHelpTextProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.SearchHandler.ClearIconHelpText" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.ClearIconNameProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.SearchHandler.ClearIconName" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.ClearIconProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.SearchHandler.ClearIcon" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderCommandParameterProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderCommandParameter" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderCommandProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderCommand" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderEnabledProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderEnabled" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderHelpTextProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderHelpText" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderIconProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderIcon" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderNameProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderName" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.CommandParameterProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.SearchHandler.CommandParameter" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.CommandProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.SearchHandler.Command" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.DisplayMemberNameProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.SearchHandler.DisplayMemberName" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.IsSearchEnabledProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.SearchHandler.IsSearchEnabled" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.ItemsSourceProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.SearchHandler.ItemsSource" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.ItemTemplateProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.SearchHandler.ItemTemplate" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.QueryIconHelpTextProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.SearchHandler.QueryIconHelpText" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.QueryIconNameProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.SearchHandler.QueryIconName" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.QueryIconProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.SearchHandler.QueryIcon" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.QueryProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.SearchHandler.Query" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.SearchBoxVisibilityProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.SearchHandler.SearchBoxVisibility" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.SelectedItemProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.SearchHandler.SelectedItem" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SearchHandler.ShowsResultsProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.SearchHandler.ShowsResults" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchHandler.ClearIcon">
            <summary>The icon displayed to clear the contents of the search box.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchHandler.ClearIconHelpText">
            <summary>The accessible help text for the clear icon.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchHandler.ClearIconName">
            <summary>The name of the clear icon for use with screen readers.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderCommand">
            <summary>ICommand executed when the <see cref="P:Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderIcon" /> is tapped.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderCommandParameter">
            <summary>The parameter passed to the <see cref="P:Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderCommand" />.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderEnabled">
            <summary>Whether the <see cref="P:Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderCommand" /> can be executed.</summary><value>The default value is `true`.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderHelpText">
            <summary>The accessible help text for the <see cref="P:Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderIcon" />.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderIcon">
            <summary>The clear placeholder icon displayed when the search box is empty.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderName">
            <summary>The name of the clear placeholder icon for use with screen readers.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchHandler.Command">
            <summary>Gets or sets the ICommand executed when the search query is confirmed.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchHandler.CommandParameter">
            <summary>Gets or sets the parameter of the <see cref="P:Microsoft.Maui.Controls.SearchHandler.Command" />, which is executed when the search query is confirmed.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchHandler.DisplayMemberName">
            <summary>The name or path of the property that is displayed for each item of data in the <see cref="P:Microsoft.Maui.Controls.SearchHandler.ItemsSource" /> collection.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchHandler.IsSearchEnabled">
            <summary>Gets or sets whether the search box is enabled.</summary><value>The default value is `true`.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchHandler.ItemsSource">
            <summary>The collection of items to be displayed in the suggestion area. Default is <see langword="null" />.</summary><value>The default value is `null`.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchHandler.ItemTemplate">
            <summary>The <see cref="T:Microsoft.Maui.Controls.DataTemplate" /> to apply to each item in <see cref="P:Microsoft.Maui.Controls.SearchHandler.ItemsSource" />.</summary><value>To be added.</value><remarks>
          <para>For example, to create the style shown here: <img src="~/xml/Microsoft.Maui.Controls/_images/search-results-template.png" />, developers could use either the following XAML or C#:</para>
          <example>
            <code lang="XAML"><![CDATA[<ContentPage ...
             xmlns:controls="clr-namespace:Xaminals.Controls">    
    <Shell.SearchHandler>
        <controls:MonkeySearchHandler Placeholder="Enter search term"
                                      ShowsResults="true">
            <controls:MonkeySearchHandler.ItemTemplate>
                <DataTemplate>
                    <Grid Padding="10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.15*" />
                            <ColumnDefinition Width="0.85*" />
                        </Grid.ColumnDefinitions>
                        <Image Source="{Binding ImageUrl}"
                               Aspect="AspectFill"
                               HeightRequest="40"
                               WidthRequest="40" />
                        <Label Grid.Column="1"
                               Text="{Binding Name}"
                               FontAttributes="Bold" />
                    </Grid>
                </DataTemplate>
            </controls:MonkeySearchHandler.ItemTemplate>
       </controls:MonkeySearchHandler>
    </Shell.SearchHandler>
    ...
</ContentPage>]]></code>
          </example>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[Shell.SetSearchHandler(this, new MonkeySearchHandler
{
    Placeholder = "Enter search term",
    ShowsResults = true,
    DisplayMemberName = "Name",
    ItemTemplate = new DataTemplate(() =>
    {
        Grid grid = new Grid { Padding = 10 };
        grid.ColumnDefinitions.Add(new ColumnDefinition { Width = new GridLength(0.15, GridUnitType.Star) });
        grid.ColumnDefinitions.Add(new ColumnDefinition { Width = new GridLength(0.85, GridUnitType.Star) });
        
        Image image = new Image { Aspect = Aspect.AspectFill, HeightRequest = 40, WidthRequest = 40 };
        image.SetBinding(Image.SourceProperty, "ImageUrl");
        Label nameLabel = new Label { FontAttributes = FontAttributes.Bold };
        nameLabel.SetBinding(Label.TextProperty, "Name");
        
        grid.Children.Add(image);
        grid.Children.Add(nameLabel, 1, 0);
        return grid;
    })
});]]></code>
          </example>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchHandler.Query">
            <summary>Gets or sets the text of the search box.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchHandler.QueryIcon">
            <summary>The icon used to indicate that search is available.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchHandler.QueryIconHelpText">
            <summary>The accessible help text for the <see cref="P:Microsoft.Maui.Controls.SearchHandler.QueryIcon" />.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchHandler.QueryIconName">
            <summary>The name of the <see cref="P:Microsoft.Maui.Controls.SearchHandler.QueryIcon" /> for use with screen readers.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchHandler.SearchBoxVisibility">
            <summary>Gets or sets whether the search box is visible.</summary><value>The default is <see cref="F:Microsoft.Maui.Controls.SearchBoxVisibility.Expanded" /> (visible and expanded).</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchHandler.SelectedItem">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SearchHandler.ShowsResults">
            <summary>Gets or sets whether search results should be expected in the suggestion area on text entry.</summary><value>The default value is `false`.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ShellAppearance">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ShellAppearance.BackgroundColor">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ShellAppearance.DisabledColor">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ShellAppearance.ForegroundColor">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ShellAppearance.TabBarBackgroundColor">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ShellAppearance.TabBarDisabledColor">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ShellAppearance.TabBarForegroundColor">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ShellAppearance.TabBarTitleColor">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ShellAppearance.TabBarUnselectedColor">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ShellAppearance.TitleColor">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ShellAppearance.UnselectedColor">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ShellAppearance.FlyoutBackdrop">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ShellAppearance.Equals(System.Object)">
            <param name="obj">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ShellAppearance.GetHashCode">
            <summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ShellAppearance.Ingest(Microsoft.Maui.Controls.Element)">
            <param name="pivot">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ShellAppearance.MakeComplete">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ShellContent">
            <summary>Corresponds to a <see cref="T:Microsoft.Maui.Controls.ContentPage" /> contained in a <see cref="T:Microsoft.Maui.Controls.ShellSection" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ShellContent.MenuItemsProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.ShellContent.MenuItems" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ShellContent.ContentProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.ShellContent.Content" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ShellContent.ContentTemplateProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.ShellContent.ContentTemplate" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ShellContent.MenuItems">
            <summary>Add <see cref="T:Microsoft.Maui.Controls.MenuItem" /> instances to flyout.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ShellContent.Content">
            <summary>Gets or sets the <see cref="T:Microsoft.Maui.Controls.Page" />.</summary><value>To be added.</value><remarks>Using this property will cause performance issues. Please use <see cref="P:Microsoft.Maui.Controls.ShellContent.ContentTemplate" /> instead.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ShellContent.ContentTemplate">
            <summary>Gets or sets a data template to create when ShellContent becomes active.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ShellContent.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ShellGroupItem">
            <summary>A <see cref="T:Microsoft.Maui.Controls.BaseShellItem" /> that has <see cref="T:Microsoft.Maui.Controls.FlyoutDisplayOptions" />. Base class for <see cref="T:Microsoft.Maui.Controls.ShellItem" /> and <see cref="T:Microsoft.Maui.Controls.ShellSection" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ShellGroupItem.FlyoutDisplayOptionsProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.ShellGroupItem.FlyoutDisplayOptions" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ShellGroupItem.FlyoutDisplayOptions">
            <summary>AsSingleItem (default) will only display the title of this item in the flyout. AsMultipleItems will create a separate flyout option for each child and <see cref="T:Microsoft.Maui.Controls.MenuItem" />.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.FlyoutItem">
            <summary>A <see cref="T:Microsoft.Maui.Controls.ShellItem" /> that has a collection of <see cref="T:Microsoft.Maui.Controls.Tab" /> objects.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.FlyoutItem.LabelStyle">
            <summary>StyleClass set on the Label of each Flyout Item. This const is set to "FlyoutItemLabelStyle".</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.FlyoutItem.ImageStyle">
            <summary>StyleClass set on the Image of each Flyout Item. This const is set to "FlyoutItemImageStyle".</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.FlyoutItem.LayoutStyle">
            <summary>StyleClass set on the Label of every Flyout Item. This const is set to "FlyoutItemLayoutStyle".</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.FlyoutItem.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.FlyoutItem.IsVisibleProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.FlyoutItem.GetIsVisible(Microsoft.Maui.Controls.BindableObject)">
            <param name="obj">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.FlyoutItem.SetIsVisible(Microsoft.Maui.Controls.BindableObject,System.Boolean)">
            <param name="obj">To be added.</param><param name="isVisible">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.TabBar">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.TabBar.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ShellItem">
            <summary>One or more items in the flyout. Contained within a <see cref="T:Microsoft.Maui.Controls.Shell" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ShellItem.CurrentItemProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.ShellItem.CurrentItem" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ShellItem.ItemsProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.ShellItem.Items" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ShellItem.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ShellItem.CurrentItem">
            <summary>The currently selected <see cref="T:Microsoft.Maui.Controls.Tab" /> or <see cref="T:Microsoft.Maui.Controls.ShellSection" />.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ShellItem.Items">
            <summary>The collection of <see cref="T:Microsoft.Maui.Controls.ShellSection" /> objects managed by <c>this</c><see cref="T:Microsoft.Maui.Controls.ShellItem" />.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ShellItem.On``1">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Controls.ShellNavigatedEventArgs">
            <summary>Arguments for the <see cref="M:Microsoft.Maui.Controls.Shell.OnNavigated(Microsoft.Maui.Controls.ShellNavigatedEventArgs)" /> event.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ShellNavigatedEventArgs.#ctor(Microsoft.Maui.Controls.ShellNavigationState,Microsoft.Maui.Controls.ShellNavigationState,Microsoft.Maui.Controls.ShellNavigationSource)">
            <param name="previous">To be added.</param><param name="current">To be added.</param><param name="source">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ShellNavigatedEventArgs.Current">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ShellNavigatedEventArgs.Previous">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ShellNavigatedEventArgs.Source">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ShellNavigatingDeferral">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ShellNavigatingDeferral.Complete">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ShellNavigatingEventArgs">
            <summary>Arguments for the <see cref="M:Microsoft.Maui.Controls.Shell.OnNavigating(Microsoft.Maui.Controls.ShellNavigatingEventArgs)" /> event.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ShellNavigatingEventArgs.#ctor(Microsoft.Maui.Controls.ShellNavigationState,Microsoft.Maui.Controls.ShellNavigationState,Microsoft.Maui.Controls.ShellNavigationSource,System.Boolean)">
            <param name="current">To be added.</param><param name="target">To be added.</param><param name="source">To be added.</param><param name="canCancel">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ShellNavigatingEventArgs.Current">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ShellNavigatingEventArgs.Target">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ShellNavigatingEventArgs.Source">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ShellNavigatingEventArgs.CanCancel">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ShellNavigatingEventArgs.Cancel">
            <summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ShellNavigatingEventArgs.Cancelled">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ShellNavigatingEventArgs.GetDeferral">
            <summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ShellNavigationSource">
            <summary>Enumerates reasons for a navigation event in Shell applications.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ShellNavigationSource.Unknown">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.ShellNavigationSource.Push">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.ShellNavigationSource.Pop">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.ShellNavigationSource.PopToRoot">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.ShellNavigationSource.Insert">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.ShellNavigationSource.Remove">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.ShellNavigationSource.ShellItemChanged">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.ShellNavigationSource.ShellSectionChanged">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.ShellNavigationSource.ShellContentChanged">
            <summary>To be added.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.ShellNavigationState">
            <summary>A URI representing either the current page or a destination for navigation in a Shell application.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ShellNavigationState.Location">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ShellNavigationState.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ShellNavigationState.#ctor(System.String)">
            <param name="location">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ShellNavigationState.#ctor(System.Uri)">
            <param name="location">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Tab">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.SolidColorBrush">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SolidColorBrush.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SolidColorBrush.#ctor(Microsoft.Maui.Graphics.Color)">
            <param name="color">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SolidColorBrush.IsEmpty">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SolidColorBrush.ColorProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SolidColorBrush.Color">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SolidColorBrush.Equals(System.Object)">
            <param name="obj">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SolidColorBrush.GetHashCode">
            <summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Span">
            <summary>Represents a section of a <see cref="T:Microsoft.Maui.Controls.FormattedString" />.</summary><remarks>
      <para>Bindings to Span properties are OneTime by default.</para>
    </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Span.#ctor">
            <summary>Initialize a new instance of the Span class.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Span.StyleProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.Span.Style" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Span.TextDecorationsProperty">
            <summary>The <see cref="T:Microsoft.Maui.Controls.BindableProperty" /> associated with the <see cref="P:Microsoft.Maui.Controls.Span.TextDecorations" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Span.TextTransformProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Span.Style">
            <summary>Gets or sets the Style to apply to the span.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Span.BackgroundColorProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.Span.BackgroundColor" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Span.BackgroundColor">
            <summary>Gets or sets the Color of the span background.</summary><value>To be added.</value><remarks>Not supported on WindowsPhone.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Span.TextColorProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.Span.TextColor" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Span.TextColor">
            <summary>Gets or sets the text color.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Span.CharacterSpacingProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Span.CharacterSpacing">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Span.TextTransform">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Span.UpdateFormsText(System.String,Microsoft.Maui.TextTransform)">
            <param name="source">To be added.</param><param name="textTransform">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Span.TextProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.Span.Text" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Span.Text">
            <summary>Gets or sets the text of the span.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Span.FontFamilyProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.Span.FontFamily" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Span.FontSizeProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.Span.FontSize" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Span.FontAttributesProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.Span.FontAttributes" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Span.LineHeightProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.Span.LineHeight" /> bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Span.FontAttributes">
            <summary>Gets a value that indicates whether the font for the span is bold, italic, or neither.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Span.FontFamily">
            <summary>Gets the font family to which the font for the text in the span belongs.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Span.FontSize">
            <summary>Gets the size of the font for the text in the span.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Span.TextDecorations">
            <summary>Gets or sets the <see cref="T:Microsoft.Maui.TextDecorations" /> applied to this span.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Span.LineHeight">
            <summary>Gets or sets the multiplier to apply to the default line height when displaying text.</summary><value>The multiplier to apply to the default line height when displaying text.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.StackOrientation">
            <summary>The orientations the a StackLayout can have.</summary><remarks>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.StackOrientation.Vertical">
            <summary>StackLayout should be vertically oriented.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.StackOrientation.Horizontal">
            <summary>StackLayout should be horizontally oriented.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.StateTrigger">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.StateTrigger.IsActive">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.StateTrigger.IsActiveProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.StateTriggerBase">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.StateTriggerBase.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.StateTriggerBase.IsActive">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.StateTriggerBase.IsAttached">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.Stretch">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.Stretch.None">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Stretch.Fill">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Stretch.Uniform">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.Stretch.UniformToFill">
            <summary>To be added.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.Style">
            <summary>Class that contains triggers, setters, and behaviors that completely or partially define the appearance and behavior of a class of visual elements.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.Style.#ctor(System.Type)">
            <param name="targetType">The type of view to which the style will be applied.</param><summary>Intitializes a new <see cref="T:Microsoft.Maui.Controls.Style" /> instance.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Style.ApplyToDerivedTypes">
            <summary>Gets or sets a Boolean value that controls whether the style should be applied to controls that are derived from the base type.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Style.BasedOn">
            <summary>The <see cref="T:Microsoft.Maui.Controls.Style" /> on which this <see cref="T:Microsoft.Maui.Controls.Style" /> is based.</summary><value>To be added.</value><remarks>The <see cref="T:Microsoft.Maui.Controls.Style" /> supports a mechanism in XAML that is similar to inheritance in C#.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Style.BaseResourceKey">
            <summary>Gets or sets the key that identifies the <see cref="T:Microsoft.Maui.Controls.Style" /> on which this <see cref="T:Microsoft.Maui.Controls.Style" /> is based.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Style.Behaviors">
            <summary>Gets the list of <see cref="T:Microsoft.Maui.Controls.Behavior" /> objects that belong to this <see cref="T:Microsoft.Maui.Controls.Style" />.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Style.CanCascade">
            <summary>Gets or sets a Boolean value that controls whether, when applying an explicit style to a control, an implicit style that targets the same control should also be applied.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Style.Class">
            <summary>Gets or sets the class for the style.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Style.Setters">
            <summary>Gets the list of <see cref="T:Microsoft.Maui.Controls.Setter" /> objects that belong to this <see cref="T:Microsoft.Maui.Controls.Style" />.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Style.Triggers">
            <summary>Gets the list of <see cref="T:Microsoft.Maui.Controls.Trigger" /> objects that belong to this <see cref="T:Microsoft.Maui.Controls.Style" />.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.Style.TargetType">
            <summary>Gets the type of object that this style can describe. See Remarks.</summary><value>To be added.</value><remarks>
          <p>Developers should be aware that implicit styles are only applied to the specific type that is described by <see cref="P:Microsoft.Maui.Controls.Style.TargetType" />, and not to types that inherit from it.</p>
        </remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.StyleSheets.StyleSheet">
            <summary>Class for loading style sheets from strings, assembly resources, and text readers.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.StyleSheets.StyleSheet.FromResource(System.String,System.Reflection.Assembly,System.Xml.IXmlLineInfo)">
            <param name="resourcePath">For internal use by the Microsoft.Maui.Controls platform.</param><param name="assembly">For internal use by the Microsoft.Maui.Controls platform.</param><param name="lineInfo">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><returns>For internal use by the Microsoft.Maui.Controls platform.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.StyleSheets.StyleSheet.FromString(System.String)">
            <param name="stylesheet">The style sheet, as a string.</param><summary>Creates and returns a style sheet from a string that contains a text representation of a style sheet.</summary><returns>The style sheet for the data.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.StyleSheets.StyleSheet.FromReader(System.IO.TextReader)">
            <param name="reader">The text reader from which to read the style sheet data.</param><summary>Returns a style sheet by reading style data from the <paramref name="reader" />.</summary><returns>A style sheet created from the data in the reader.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.SweepDirection">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SweepDirection.CounterClockwise">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.SweepDirection.Clockwise">
            <summary>To be added.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.SwipedEventArgs">
            <summary>Arguments for swipe events.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SwipedEventArgs.#ctor(System.Object,Microsoft.Maui.SwipeDirection)">
            <param name="parameter">The parameter to pass to the command for the swipe.</param><param name="direction">The swipe direction.</param><summary>Creates a new swipe event argument object with the specified values.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SwipedEventArgs.Parameter">
            <summary>Ges the command parameter.</summary><value>The command parameter.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SwipedEventArgs.Direction">
            <summary>Gets the direction of the swipe.</summary><value>The direction of the swipe.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.BaseSwipeEventArgs">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.BaseSwipeEventArgs.SwipeDirection">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.SwipeStartedEventArgs">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SwipeStartedEventArgs.#ctor(Microsoft.Maui.SwipeDirection)">
            <param name="swipeDirection">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.SwipeChangingEventArgs">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SwipeChangingEventArgs.#ctor(Microsoft.Maui.SwipeDirection,System.Double)">
            <param name="swipeDirection">To be added.</param><param name="offset">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SwipeChangingEventArgs.Offset">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.SwipeEndedEventArgs">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SwipeEndedEventArgs.#ctor(Microsoft.Maui.SwipeDirection,System.Boolean)">
            <param name="swipeDirection">To be added.</param><param name="isOpen">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SwipeEndedEventArgs.IsOpen">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.SwipeGestureRecognizer">
            <summary>Recognizer for swipe gestures.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SwipeGestureRecognizer.CommandProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.SwipeGestureRecognizer.Command" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SwipeGestureRecognizer.CommandParameterProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.SwipeGestureRecognizer.CommandParameter" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SwipeGestureRecognizer.DirectionProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.SwipeGestureRecognizer.Direction" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SwipeGestureRecognizer.ThresholdProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.SwipeGestureRecognizer.Threshold" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SwipeGestureRecognizer.Command">
            <summary>Gets or sets the command to run when a swipe gesture is recognized.</summary><value>The command to run when a swipe gesture is recognized.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SwipeGestureRecognizer.CommandParameter">
            <summary>Gets or sets the parameter to pass to commands that take one.</summary><value>The parameter to pass to commands that take one.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SwipeGestureRecognizer.Direction">
            <summary>Gets or sets the direction of swipes to recognize.</summary><value>The direction of swipes to recognize.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SwipeGestureRecognizer.Threshold">
            <summary>Gets or sets the minimum swipe distance that will cause the gesture to be recognized.</summary><value>The minimum swipe distance that will cause the gesture to be recognized.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SwipeGestureRecognizer.SendSwiped(Microsoft.Maui.Controls.View,Microsoft.Maui.SwipeDirection)">
            <param name="sender">The view that was swiped.</param><param name="direction">The swipe direction.</param><summary>Method that is called by the platform renderer when a swipe occurs.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.SwipeItems">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SwipeItems.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Maui.Controls.ISwipeItem})">
            <summary>To be added.</summary><remarks>To be added.</remarks><param name="swipeItems">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SwipeItems.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SwipeItems.ModeProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.SwipeItems.SwipeBehaviorOnInvokedProperty">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SwipeItems.Mode">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SwipeItems.SwipeBehaviorOnInvoked">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SwipeItems.Count">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.SwipeItems.IsReadOnly">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SwipeItems.Add(Microsoft.Maui.Controls.ISwipeItem)">
            <param name="item">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SwipeItems.Clear">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SwipeItems.Contains(Microsoft.Maui.Controls.ISwipeItem)">
            <param name="item">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SwipeItems.CopyTo(Microsoft.Maui.Controls.ISwipeItem[],System.Int32)">
            <param name="array">To be added.</param><param name="arrayIndex">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SwipeItems.GetEnumerator">
            <summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SwipeItems.IndexOf(Microsoft.Maui.Controls.ISwipeItem)">
            <param name="item">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SwipeItems.Insert(System.Int32,Microsoft.Maui.Controls.ISwipeItem)">
            <param name="index">To be added.</param><param name="item">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SwipeItems.Remove(Microsoft.Maui.Controls.ISwipeItem)">
            <param name="item">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.SwipeItems.RemoveAt(System.Int32)">
            <param name="index">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.TableIntent">
            <summary>TableIntent provides hints to the renderer about how a table will be used.</summary><remarks>Using table intents will not effect the behavior of a table, and will only modify their visual appearance on screen, depending on the platform. Not all intents are unique on all platforms, however it is advisable to pick the intent which most closely represents your use case.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.TableIntent.Menu">
            <summary>A table intended to be used as a menu for selections.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.TableIntent.Settings">
            <summary>A table containing a set of switches, toggles, or other modifiable configuration settings.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.TableIntent.Form">
            <summary>A table which is used to contain information that would normally be contained in a form.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.TableIntent.Data">
            <summary>A table intended to contain an arbitrary number of similar data entries.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.TableRoot">
            <summary>A <see cref="T:Microsoft.Maui.Controls.TableSection" /> that contains either a table section or the entire table.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.TableRoot.#ctor">
            <summary>Constructs and initializes a new instance of the <see cref="T:Microsoft.Maui.Controls.TableRoot" /> class.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.TableRoot.#ctor(System.String)">
            <param name="title">The title of the table.</param><summary>Constructs and initializes a new instance of the <see cref="T:Microsoft.Maui.Controls.TableRoot" /> class with a title.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.TableSectionBase`1">
            <summary>Abstract base class defining a table section.</summary><remarks>
      <para>To be added.</para>
    </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.TableSectionBase`1.#ctor">
            <summary>
                Constructs a Section without an empty header.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Controls.TableSectionBase`1.#ctor(System.String)">
            <summary>
                Constructs a Section with the specified header.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.TableSection">
            <summary>A logical and visible section of a <see cref="T:Microsoft.Maui.Controls.TableView" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.TableSection.#ctor">
            <summary>Creates a new <see cref="T:Microsoft.Maui.Controls.TableSection" /> with default values.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.TableSection.#ctor(System.String)">
            <param name="title">The title of the table section.</param><summary>Creates a new <see cref="T:Microsoft.Maui.Controls.TableSection" /> with the title <paramref name="title" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.TableSectionBase">
            <summary>Abstract base class defining a table section.</summary><remarks>
      <para>To be added.</para>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.TableSectionBase.TitleProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.TableSectionBase.Title" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.TableSectionBase.TextColorProperty">
            <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.TableSectionBase.TextColor" /> field.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.TableSectionBase.#ctor">
            <summary>
                Constructs a Section without an empty header.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Controls.TableSectionBase.#ctor(System.String)">
            <summary>
                Constructs a Section with the specified header.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Controls.TableSectionBase.Title">
            <summary>Gets or sets the title.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TableSectionBase.TextColor">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.TableView">
            <summary>A <see cref="T:Microsoft.Maui.Controls.View" /> that holds rows of <see cref="T:Microsoft.Maui.Controls.Cell" /> elements.</summary><remarks>
      <para>A <see cref="T:Microsoft.Maui.Controls.TableView" /> has a <see cref="T:Microsoft.Maui.Controls.TableRoot" /> as its <see cref="P:Microsoft.Maui.Controls.TableView.Root" /> property. The <see cref="T:Microsoft.Maui.Controls.TableRoot" /> is a type of <see cref="T:Microsoft.Maui.Controls.TableSection" />. </para>
      <para>The following example shows a basic table with two sections.</para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[
public class App : Application
{
    public App()
    {
        MainPage = new ContentPage {
            Content = new TableView {
                Intent = TableIntent.Form,
                Root = new TableRoot ("Table Title") {
                    new TableSection ("Section 1 Title") {
                        new TextCell {
                            Text = "TextCell Text",
                            Detail = "TextCell Detail"
                        },
                        new EntryCell {
                            Label = "EntryCell:",
                            Placeholder = "default keyboard",
                            Keyboard = Keyboard.Default
                        }
                    },
                    new TableSection ("Section 2 Title") {
                        new EntryCell {
                            Label = "Another EntryCell:",
                            Placeholder = "phone keyboard",
                            Keyboard = Keyboard.Telephone
                        },
                        new SwitchCell {
                            Text = "SwitchCell:"
                        }
                    }
                }
            }
        }; 
    }
    // OnStart, OnSleep, OnResume overrides omitted...
}          
          ]]></code>
      </example>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/TableView.TripleScreenShot.png" />
      </para>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.TableView.RowHeightProperty">
            <summary>Backing store for the row height property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.TableView.HasUnevenRowsProperty">
            <summary>Backing store for the HasUnevenRows property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.TableView.#ctor">
            <summary>Initializes a new <see cref="T:Microsoft.Maui.Controls.TableView" /> instance.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.TableView.#ctor(Microsoft.Maui.Controls.TableRoot)">
            <param name="root">The root of the table view.</param><summary>Initializes a new <see cref="T:Microsoft.Maui.Controls.TableView" /> instance.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TableView.HasUnevenRows">
            <summary>Gets or sets a value that indicates whether the rows that are contained in this <see cref="T:Microsoft.Maui.Controls.TableView" /> can have uneven rows.</summary><value>To be added.</value><remarks>
          <para>When the <see cref="P:Microsoft.Maui.Controls.TableView.HasUnevenRows" /> property is <see langword="true" />, application developers can set the <see cref="P:Microsoft.Maui.Controls.Cell.Height" /> properties to control the height of <see cref="T:Microsoft.Maui.Controls.Cell" /> items in the table. When the <see cref="P:Microsoft.Maui.Controls.TableView.HasUnevenRows" /> property is <see langword="true" />, the <see cref="P:Microsoft.Maui.Controls.TableView.RowHeight" /> property is ignored. When the <see cref="P:Microsoft.Maui.Controls.TableView.HasUnevenRows" /> property is <see langword="false" />, app developers can set the <see cref="P:Microsoft.Maui.Controls.TableView.RowHeight" /> property to set the height of all Cells, and their individual <see cref="P:Microsoft.Maui.Controls.Cell.Height" /> properties are ignored.</para>
          <para>Note: developers must specify row heights on the iOS platform, even when <see cref="P:Microsoft.Maui.Controls.TableView.HasUnevenRows" /> is <see langword="true" />.</para>
        </remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TableView.Intent">
            <summary>Gets or sets the intent of the table.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TableView.Root">
            <summary>Gets or sets the root of the table.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TableView.RowHeight">
            <summary>An integer that describes the height of the items in the list. This is ignored if HasUnevenRows is true.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TableView.Model">
            <summary>For internal use by the Microsoft.Maui.Controls platform.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.TableView.On``1">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Controls.TapGestureRecognizer">
            <summary>Provides tap gesture recognition and events.</summary><remarks>Can be used to recognize single and multiple tap gestures.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.TapGestureRecognizer.CommandProperty">
            <summary>Identifies the Command bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.TapGestureRecognizer.CommandParameterProperty">
            <summary>Identifies the CommandParameter bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.TapGestureRecognizer.NumberOfTapsRequiredProperty">
            <summary>Identifies the NumberOfTapsRequired bindable property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.TapGestureRecognizer.#ctor">
            <summary>Initializes a new instance of a TapGestureRecognizer object.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TapGestureRecognizer.Command">
            <summary>The Command to invoke when the gesture has been triggered by the user. This is a bindable property.</summary><value>To be added.</value><remarks>The object passed to the Command will be the contents of <see cref="P:Microsoft.Maui.Controls.TapGestureRecognizer.CommandParameter" /></remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TapGestureRecognizer.CommandParameter">
            <summary>An object to be passed to the TappedCallback. This is a bindable property.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TapGestureRecognizer.NumberOfTapsRequired">
            <summary>The number of taps required to trigger the callback. This is a bindable property.</summary><value>The number of taps to recognize. The default value is 1.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.TappedEventArgs">
            <summary>Arguments for the <see cref="T:Microsoft.Maui.Controls.ListView.ItemTapped" /> event.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.TappedEventArgs.#ctor(System.Object)">
            <param name="parameter">A parameter object for the tapped event.</param><summary>Creates a new <see cref="T:Microsoft.Maui.Controls.TappedEventArgs" /> object with the supplied parameter.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TappedEventArgs.Parameter">
            <summary>Gets the parameter object for this <see cref="T:Microsoft.Maui.Controls.TappedEventArgs" /> object.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.TargetIdiom">
            <summary>Indicates the type of device Microsoft.Maui.Controls is working on.</summary><remarks>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.TargetIdiom.Unsupported">
            <summary>(Unused) Indicates that Microsoft.Maui.Controls is running on an unsupported device.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.TargetIdiom.Phone">
            <summary>Indicates that the width of the iPhone, iPod Touch, Windows Phone, or Android device on which Microsoft.Maui.Controls is running is narrower than 600 dips.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.TargetIdiom.Tablet">
            <summary>Indicates that the width of the iPad, Windows 8.1, or Android device on which Microsoft.Maui.Controls is running is wider than 600 dips.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.TargetIdiom.Desktop">
            <summary>Indicates that Microsoft.Maui.Controls is running on a desktop.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.TargetIdiom.TV">
            <summary>Indicates that Microsoft.Maui.Controls is running on a Tizen app on Tizen TV.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.TargetIdiom.Watch">
            <summary>Indicates that Microsoft.Maui.Controls is running on a Tizen watch.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.TemplateBinding">
            <summary>Binds a template property to the parent of the view that owns a <see cref="T:Microsoft.Maui.Controls.ControlTemplate" />.</summary><remarks>
      <para>Control templates provide reusable styling and functionality for common UI elements in an application. They do this by providing a common set of properties that bind to the parents of the View that owns the View to which the control template is bound.</para>
      <example>
        <para>Application developers can assign these properties through XAML, as in the following example: </para>
        <code lang="XAML"><![CDATA[
<ControlTemplate x:Key="LoginTemplate">
  <StackLayout VerticalOptions="CenterAndExpand" Spacing="20" Padding="20">
    <Entry Text="{TemplateBinding Username}" Placeholder="Username" />
    <Entry Text="{TemplateBinding Password}" Placeholder="Password" />
    <Button Command="{TemplateBinding Command}" Text="Click Here To Log In" />
  </StackLayout>
</ControlTemplate>]]></code>
        <para>Additionally, application developers can use the <see cref="M:Microsoft.Maui.Controls.TemplateExtensions.SetBinding(Microsoft.Maui.Controls.DataTemplate,Microsoft.Maui.Controls.BindableProperty,System.String)" /> static method to set template bindings in code.</para>
      </example>
    </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.TemplateBinding.#ctor">
            <summary>Creates an empty template binding.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.TemplateBinding.#ctor(System.String,Microsoft.Maui.Controls.BindingMode,Microsoft.Maui.Controls.IValueConverter,System.Object,System.String)">
            <summary>Creates an empty template binding.</summary><remarks>To be added.</remarks><param name="path">A string that identifies the property to which to bind.</param><param name="mode">The binding mode.</param><param name="converter">A type converter to use to convert strings into instances of the bound property type.</param><param name="converterParameter">A parameter to pass to the converter.</param><param name="stringFormat">A format string to use for displaying property values.</param><summary>Creates a new TemplateBinding with the specified values. Must be non-empty and non-null.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TemplateBinding.Converter">
            <summary>Gets or sets the type converter to use to convert strings into instances of the bound property type.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TemplateBinding.ConverterParameter">
            <summary>Gets or sets a format string to use for displaying property values.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TemplateBinding.Path">
            <summary>Gets or sets a string that identifies the property to which to bind.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.TemplatedPage">
            <summary>A page that displays full-screen content with a control template, and the base class for <see cref="T:Microsoft.Maui.Controls.ContentPage" /> .</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.TemplatedPage.ControlTemplateProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.TemplatedPage.ControlTemplate" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TemplatedPage.ControlTemplate">
            <summary>Gets or sets the control template that is used to display content.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.TemplateExtensions">
            <summary>Extension class for DataTemplate, providing a string-based shortcut method for defining a Binding.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.TemplateExtensions.SetBinding(Microsoft.Maui.Controls.DataTemplate,Microsoft.Maui.Controls.BindableProperty,System.String)">
            <param name="self">The template on which this method operates.</param><param name="targetProperty">The target property of the binding.</param><param name="path">The path to the binding.</param><summary>Binds the <paramref name="self" /> object's <paramref name="targetProperty" /> to a new <see cref="T:Microsoft.Maui.Controls.Binding" /> instance that was created with <paramref name="path" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.TextChangedEventArgs">
            <summary>Event arguments for <c>TextChanged</c> events. Provides old and new text values.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.TextChangedEventArgs.#ctor(System.String,System.String)">
            <param name="oldTextValue">The old text value.</param><param name="newTextValue">The new text value.</param><summary>Creates a new <see cref="T:Microsoft.Maui.Controls.TextChangedEventArgs" /> with <paramref name="oldTextValue" /> and <paramref name="newTextValue" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TextChangedEventArgs.NewTextValue">
            <summary>Gets the new text value.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.TextChangedEventArgs.OldTextValue">
            <summary>Gets the old text value.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.TextElement.TextColorProperty">
            <summary>
            The backing store for the <see cref="P:Microsoft.Maui.Controls.ITextElement.TextColor" /> bindable property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.TextElement.CharacterSpacingProperty">
            <summary>
            The backing store for the <see cref="P:Microsoft.Maui.Controls.ITextElement.CharacterSpacing" /> bindable property.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.TextElement.TextTransformProperty">
            <summary>
            The backing store for the <see cref="P:Microsoft.Maui.Controls.ITextElement.TextTransform" /> bindable property.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.ToggledEventArgs">
            <summary>Event arguments for <see cref="E:Microsoft.Maui.Controls.Switch.Toggled" /> and <see cref="E:Microsoft.Maui.Controls.SwitchCell.OnChanged" /> events.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ToggledEventArgs.#ctor(System.Boolean)">
            <param name="value">Whether the toggle is in the On position.</param><summary>Creates a new <see cref="T:Microsoft.Maui.Controls.ToggledEventArgs" /> that indicates that the toggle control was toggled to <paramref name="value" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ToggledEventArgs.Value">
            <summary>Gets the Boolean value to which the toggle control was toggled.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ToolbarItem">
            <summary>An item in a toolbar or displayed on a <see cref="T:Microsoft.Maui.Controls.Page" />.</summary><remarks>
      <para>Any changes made to the properties of the toolbar item after it has been added will be ignored.</para>
    </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ToolbarItem.#ctor">
            <summary>Constructs and initializes a new instance of the <see cref="T:Microsoft.Maui.Controls.ToolbarItem" /> class.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ToolbarItem.#ctor(System.String,System.String,System.Action,Microsoft.Maui.Controls.ToolbarItemOrder,System.Int32)">
            <summary>Constructs and initializes a new instance of the <see cref="T:Microsoft.Maui.Controls.ToolbarItem" /> class.</summary><remarks>To be added.</remarks><param name="name">To be added.</param><param name="icon">The icon for the toolbar item.</param><param name="activated">The action to perform when the toolbar item is activated.</param><param name="order">The order for the toolbar item.</param><param name="priority">The toolbar item priority.</param><summary>Constructs and initializes a new instance of the <see cref="T:Microsoft.Maui.Controls.ToolbarItem" /> class.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ToolbarItem.Order">
            <summary>Gets or sets a value that indicates on which of the primary, secondary, or default toolbar surfaces to display this <see cref="T:Microsoft.Maui.Controls.ToolbarItem" /> element.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ToolbarItem.Priority">
            <summary>Gets or sets the priority of this <see cref="T:Microsoft.Maui.Controls.ToolbarItem" /> element.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ToolbarItemOrder">
            <summary>Enumeration specifying whether the <see cref="T:Microsoft.Maui.Controls.ToolbarItem" /> appears on the primary toolbar surface or secondary.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ToolbarItemOrder.Default">
            <summary>Use the default choice for the toolbar item.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.ToolbarItemOrder.Primary">
            <summary>Place the toolbar item on the primary toolbar surface.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.ToolbarItemOrder.Secondary">
            <summary>Place the toolbar item on the secondary toolbar surface.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.TypeTypeConverter">
            <summary>Class that takes a string representation of a <see cref="T:System.Type" /> and returns a corresponding <see cref="T:System.Type" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.UnsolvableConstraintsException">
            <summary>Exception indicating that the <see cref="T:Microsoft.Maui.Controls.Compatibility.Constraint" />s specified cannot be simultaneously satisfied.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.UnsolvableConstraintsException.#ctor">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.UnsolvableConstraintsException.#ctor(System.String)">
            <param name="message">A description for this exception.</param><summary>Creates a new <see cref="T:Microsoft.Maui.Controls.UnsolvableConstraintsException" /> object with the <paramref name="message" /> explanatory message.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.UnsolvableConstraintsException.#ctor(System.String,System.Exception)">
            <param name="message">To be added.</param><param name="innerException">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.UriTypeConverter">
            <summary>A <see cref="T:System.ComponentModel.TypeConverter" /> that converts from a string or <see cref="T:System.Uri" /> to a <see cref="T:System.Uri" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.UrlWebViewSource">
            <summary>A WebViewSource bound to a URL.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.UrlWebViewSource.UrlProperty">
            <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.UrlWebViewSource.Url" /> property.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.UrlWebViewSource.Url">
            <summary>Gets or sets the URL for this <see cref="T:Microsoft.Maui.Controls.UrlWebViewSource" /> object.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.UrlWebViewSource.Load(Microsoft.Maui.IWebViewDelegate)">
            <param name="renderer">To be added.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ValueChangedEventArgs">
            <summary>Event arguments for <c>ValueChanged</c> events. Provides both old and new values.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.ValueChangedEventArgs.#ctor(System.Double,System.Double)">
            <param name="oldValue">The old value.</param><param name="newValue">The new value.</param><summary>Creates a new <see cref="T:Microsoft.Maui.Controls.ValueChangedEventArgs" /> event with <paramref name="oldValue" /> and <paramref name="newValue" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ValueChangedEventArgs.NewValue">
            <summary>Gets the new value.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.ValueChangedEventArgs.OldValue">
            <summary>Gets the old value.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.ViewExtensions">
            <summary>
            Extension methods for <see cref="T:Microsoft.Maui.Controls.VisualElement" />s, providing animatable scaling, rotation, and layout functions.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Controls.ViewExtensions.CancelAnimations(Microsoft.Maui.Controls.VisualElement)">
            <summary>
            Aborts all animations (e.g. <c>LayoutTo</c>, <c>TranslateTo</c>, <c>ScaleTo</c>, etc.) on the <paramref name= "view" /> element.
            </summary>
            <param name="view">The view on which this method operates.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="view"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Microsoft.Maui.Controls.ViewExtensions.FadeTo(Microsoft.Maui.Controls.VisualElement,System.Double,System.UInt32,Microsoft.Maui.Easing)">
            <summary>
            Returns a task that performs the fade that is described by the <paramref name="opacity" />, <paramref name = "length" />, and <paramref name="easing" /> parameters.
            </summary>
            <param name="view">The view on which this method operates.</param>
            <param name="opacity">The opacity to fade to.</param>
            <param name="length">The time, in milliseconds, over which to animate the transition. The default is 250.</param>
            <param name="easing">The easing function to use for the animation.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="view"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Microsoft.Maui.Controls.ViewExtensions.LayoutTo(Microsoft.Maui.Controls.VisualElement,Microsoft.Maui.Graphics.Rect,System.UInt32,Microsoft.Maui.Easing)">
            <summary>
            <summary>Returns a task that eases the bounds of the <see cref="T:Microsoft.Maui.Controls.VisualElement" /> that is specified by the <paramref name="view" />
            to the rectangle that is specified by the <paramref name="bounds" /> parameter.</summary>
            </summary>
            <param name="view">The view on which this method operates.</param>
            <param name="bounds">The layout bounds.</param>
            <param name="length">The time, in milliseconds, over which to animate the transition. The default is 250.</param>
            <param name="easing">The easing function to use for the animation.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="view"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Microsoft.Maui.Controls.ViewExtensions.RelRotateTo(Microsoft.Maui.Controls.VisualElement,System.Double,System.UInt32,Microsoft.Maui.Easing)">
            <summary>
            Rotates the <see cref="T:Microsoft.Maui.Controls.VisualElement" /> that is specified by <paramref name="view" /> from its current rotation by <paramref name="drotation" />.
            </summary>
            <param name="view">The view on which this method operates.</param>
            <param name="drotation">The relative rotation.</param>
            <param name="length">The time, in milliseconds, over which to animate the transition. The default is 250.</param>
            <param name="easing">The easing function to use for the animation.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="view"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Microsoft.Maui.Controls.ViewExtensions.RelScaleTo(Microsoft.Maui.Controls.VisualElement,System.Double,System.UInt32,Microsoft.Maui.Easing)">
            <summary>
            Returns a task that scales the <see cref="T:Microsoft.Maui.Controls.VisualElement" /> that is specified by <paramref name="view" />
            from its current scale to <paramref name="dscale" />.
            </summary>
            <param name="view">The view on which this method operates.</param>
            <param name="dscale">The relative scale.</param>
            <param name="length">The time, in milliseconds, over which to animate the transition. The default is 250.</param>
            <param name="easing">The easing function to use for the animation.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="view"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Microsoft.Maui.Controls.ViewExtensions.RotateTo(Microsoft.Maui.Controls.VisualElement,System.Double,System.UInt32,Microsoft.Maui.Easing)">
            <summary>
            Returns a task that rotates the <see cref="T:Microsoft.Maui.Controls.VisualElement" /> that is specified by <paramref name="view" />
            that is described by the <paramref name="rotation" />, <paramref name="length" />, and <paramref name="easing" /> parameters.
            </summary>
            <param name="view">The view on which this method operates.</param>
            <param name="rotation">The final rotation value.</param>
            <param name="length">The time, in milliseconds, over which to animate the transition. The default is 250.</param>
            <param name="easing">The easing function to use for the animation.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="view"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Microsoft.Maui.Controls.ViewExtensions.RotateXTo(Microsoft.Maui.Controls.VisualElement,System.Double,System.UInt32,Microsoft.Maui.Easing)">
            <summary>
            Returns a task that skews the X axis of the the <see cref="T:Microsoft.Maui.Controls.VisualElement" /> that is specified by <paramref name="view" />
            by <paramref name="rotation" />, taking time <paramref name="length" /> and using <paramref name="easing" />.
            </summary>
            <param name="view">The view on which this method operates.</param>
            <param name="rotation">The final rotation value.</param>
            <param name="length">The time, in milliseconds, over which to animate the transition. The default is 250.</param>
            <param name="easing">The easing function to use for the animation.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="view"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Microsoft.Maui.Controls.ViewExtensions.RotateYTo(Microsoft.Maui.Controls.VisualElement,System.Double,System.UInt32,Microsoft.Maui.Easing)">
            <summary>
            Returns a task that skews the Y axis of the the <see cref="T:Microsoft.Maui.Controls.VisualElement" /> that is specified by <paramref name="view" />
            by <paramref name="rotation" />, taking time <paramref name="length" /> and using <paramref name="easing" />.
            </summary>
            <param name="view">The view on which this method operates.</param>
            <param name="rotation">The final rotation value.</param>
            <param name="length">The time, in milliseconds, over which to animate the transition. The default is 250.</param>
            <param name="easing">The easing function to use for the animation.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="view"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Microsoft.Maui.Controls.ViewExtensions.ScaleTo(Microsoft.Maui.Controls.VisualElement,System.Double,System.UInt32,Microsoft.Maui.Easing)">
            <summary>
            Returns a task that scales the <see cref="T:Microsoft.Maui.Controls.VisualElement" /> that is specified by <paramref name="view" /> to the absolute scale factor <paramref name="scale" />.
            </summary>
            <param name="view">The view on which this method operates.</param>
            <param name="scale">The final absolute scale.</param>
            <param name="length">The time, in milliseconds, over which to animate the transition. The default is 250.</param>
            <param name="easing">The easing function to use for the animation.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="view"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Microsoft.Maui.Controls.ViewExtensions.ScaleXTo(Microsoft.Maui.Controls.VisualElement,System.Double,System.UInt32,Microsoft.Maui.Easing)">
            <summary>
            Returns a task that scales the X axis of the the <see cref="T:Microsoft.Maui.Controls.VisualElement" /> that is specified by <paramref name="view" />
            to the absolute scale factor <paramref name="scale" />.
            </summary>
            <param name="view">The view on which this method operates.</param>
            <param name="scale">The final absolute scale.</param>
            <param name="length">The time, in milliseconds, over which to animate the transition. The default is 250.</param>
            <param name="easing">The easing function to use for the animation.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="view"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Microsoft.Maui.Controls.ViewExtensions.ScaleYTo(Microsoft.Maui.Controls.VisualElement,System.Double,System.UInt32,Microsoft.Maui.Easing)">
            <summary>
            Returns a task that scales the Y axis of the the <see cref="T:Microsoft.Maui.Controls.VisualElement" /> that is specified by <paramref name="view" />
            to the absolute scale factor <paramref name="scale" />.
            </summary>
            <param name="view">The view on which this method operates.</param>
            <param name="scale">The final absolute scale.</param>
            <param name="length">The time, in milliseconds, over which to animate the transition. The default is 250.</param>
            <param name="easing">The easing function to use for the animation.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="view"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Microsoft.Maui.Controls.ViewExtensions.TranslateTo(Microsoft.Maui.Controls.VisualElement,System.Double,System.Double,System.UInt32,Microsoft.Maui.Easing)">
            <summary>
            Animates an elements <see cref="P:Microsoft.Maui.Controls.VisualElement.TranslationX"/> and <see cref="P:Microsoft.Maui.Controls.VisualElement.TranslationY"/> properties
            from their current values to the new values. This ensures that the input layout is in the same position as the visual layout.
            </summary>
            <param name="view">The view on which this method operates.</param>
            <param name="x">The x component of the final translation vector.</param>
            <param name="y">The y component of the final translation vector.</param>
            <param name="length">The time, in milliseconds, over which to animate the transition. The default is 250.</param>
            <param name="easing">The easing function to use for the animation.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="view"/> is <see langword="null"/>.</exception>
        </member>
        <member name="T:Microsoft.Maui.Controls.ViewState">
            <summary>Deprecated. Do not use.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.ViewState.Default">
            <summary>Deprecated. Do not use.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.ViewState.Prelight">
            <summary>Deprecated. Do not use.</summary>
        </member>
        <member name="F:Microsoft.Maui.Controls.ViewState.Pressed">
            <summary>Deprecated. Do not use.</summary>
        </member>
        <member name="T:Microsoft.Maui.Controls.VisualAttribute">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.VisualAttribute.#ctor(System.String,System.Type)">
            <param name="key">To be added.</param><param name="visual">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.VisualMarker">
            <summary>Contains the <see cref="T:Microsoft.Maui.Controls.IVisual" /> types implemented by the Xamarin Forms team and the default <see cref="T:Microsoft.Maui.Controls.IVisual" /> types used by the Visual system.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualMarker.MatchParent">
            <summary>Indicates for a <see cref="T:Microsoft.Maui.Controls.View" /> to use the same <see cref="T:Microsoft.Maui.Controls.IVisual" /> as its direct parent.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualMarker.Default">
            <summary>Indicates for a <see cref="T:Microsoft.Maui.Controls.View" /> render using the default renderer.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.VisualTypeConverter">
            <summary>A <see cref="T:System.ComponentModel.TypeConverter" /> that can convert a string into a <see cref="T:Microsoft.Maui.Controls.IVisual" /> object.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.VisualStateManager">
            <summary>Manages visual state groups and transitions controls between states.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Controls.VisualStateManager.VisualStateGroupsProperty">
            <summary>Backing store for the attached property that contains the visual state groups in the manager.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.VisualStateManager.GetVisualStateGroups(Microsoft.Maui.Controls.VisualElement)">
            <param name="visualElement">The visual element whose visual state groups to get.</param><summary>Returns the visual state groups that can be applied to the specified visual element.</summary><returns>The visual state groups that can be applied to the specified visual element.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.VisualStateManager.SetVisualStateGroups(Microsoft.Maui.Controls.VisualElement,Microsoft.Maui.Controls.VisualStateGroupList)">
            <param name="visualElement">To be added.</param><param name="value">The list of visual state groups to associate with <paramref name="visualElement" />.</param><summary>Associates a list of visual state groups with a visual element.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.VisualStateManager.GoToState(Microsoft.Maui.Controls.VisualElement,System.String)">
            <param name="visualElement">To be added.</param><param name="name">To be added.</param><summary>Transitions the specified <paramref name="visualElement" /> to the state with the specified <paramref name="name" />.</summary><returns>
          <see langword="true" /> if the transition was successful. Otherwise, <see langword="false" /></returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.VisualStateManager.HasVisualStateGroups(Microsoft.Maui.Controls.VisualElement)">
            <param name="element">The element to check.</param><summary>Returns <see langword="true" /> if <paramref name="element" /> has one or more visual state groups associated with it. Otherwise, returns <see langword="false" />.</summary><returns>
          <see langword="true" /> if <paramref name="element" /> has one or more visual state groups associated with it. Otherwise, <see langword="false" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.VisualStateGroupList">
            <summary>Contains a list of visual state groups for an application.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.VisualStateGroupList.#ctor">
            <summary>Creates a new <see cref="T:Microsoft.Maui.Controls.VisualStateGroupList" /> object with default values.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.VisualStateGroupList.#ctor(System.Boolean)">
            <param name="isDefault">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.VisualStateGroupList.GetEnumerator">
            <summary>Returns an enumerator for iterating over the groups in the list.</summary><returns>An enumerator for iterating over the groups in the list.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.VisualStateGroupList.Add(Microsoft.Maui.Controls.VisualStateGroup)">
            <param name="item">The visual state group to add to the list.</param><summary>Adds the specified visual state group to the list.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.VisualStateGroupList.Clear">
            <summary>Removes all visual state groups from the list.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.VisualStateGroupList.Contains(Microsoft.Maui.Controls.VisualStateGroup)">
            <param name="item">The visual state group whose membership to check.</param><summary>Checks whether <paramref name="item" /> is in the list of visual state groups.</summary><returns>
          <see langword="true" /> if <paramref name="item" /> is in the list of groups. Otherwise, <see langword="false" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.VisualStateGroupList.CopyTo(Microsoft.Maui.Controls.VisualStateGroup[],System.Int32)">
            <param name="array">To be added.</param><param name="arrayIndex">To be added.</param><summary>Copies the list group to the specified <paramref name="array" />, starting at <paramref name="arrayIndex" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.VisualStateGroupList.Remove(Microsoft.Maui.Controls.VisualStateGroup)">
            <param name="item">The item to remove.</param><summary>Removes the group from the list of groups.</summary><returns>The removed group.</returns><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualStateGroupList.Count">
            <summary>Gets the number of visual state groups in the list.</summary><value>The number of visual state groups in the list.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualStateGroupList.IsReadOnly">
            <summary>Gets a Boolean value that tells whether this list is read-only.</summary><value>
          <see langword="true" /> if the list is read-only. Otherwise, <see langword="false" />.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.VisualStateGroupList.IndexOf(Microsoft.Maui.Controls.VisualStateGroup)">
            <param name="item">The group whose index to get.</param><summary>Returns the index of <paramref name="item" /> if found. Otherwise, returns <c>-1</c>.</summary><returns>The index of <paramref name="item" /> if found. Otherwise, <c>-1</c>.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.VisualStateGroupList.Insert(System.Int32,Microsoft.Maui.Controls.VisualStateGroup)">
            <param name="index">The index at which to insert <paramref name="item" />.</param><param name="item">The group to insert.</param><summary>Inserts <paramref name="item" /> at <paramref name="index" /> in the list of groups.</summary><remarks>
          <para>
            <paramref name="index" /> must be less than the number of items in the list.</para>
        </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.VisualStateGroupList.RemoveAt(System.Int32)">
            <param name="index">The index of the item to remove.</param><summary>Removes the item at the specified <paramref name="index" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.VisualStateGroup">
            <summary>Contains a list of related visual states that can be applied to a visual element.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.VisualStateGroup.#ctor">
            <summary>Creates a new <see cref="T:Microsoft.Maui.Controls.VisualStateGroup" /> object with default values.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualStateGroup.TargetType">
            <summary>Gets or sets the type of element that <see langword="this" /> visual state group can target.</summary><value>The type of element that <see langword="this" /> visual state group can target.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualStateGroup.Name">
            <summary>Gets or sets the name of the visual state.</summary><value>The name of the visual state.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualStateGroup.States">
            <summary>Gets the list of states that comprise the group.</summary><value>The list of states that comprise the group.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualStateGroup.CurrentState">
            <summary>Gets the current visual state.</summary><value>The current visual state.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.VisualState">
            <summary>Contains a named visual state that applies a list of setters to an element in order to correlate a state with an appearance.</summary><remarks>
      <para>With visual state objects, developers can associate novel visual state names with a list of property setters that cause the control to represent that state. This frees the developer from relying on the set of provided states for a control, enabling finer control over the appearance of the application as the user's workflow progresses.</para>
    </remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.VisualState.#ctor">
            <summary>Creates a new <see cref="T:Microsoft.Maui.Controls.VisualState" /> object with default values.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualState.Name">
            <summary>Gets or sets the developer-specified name of this visual state.</summary><value>The developer-specified name of this visual state.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualState.Setters">
            <summary>Gets the list of property setters that establish the visual representation of the element when it is in the state that is named by <see langword="this" /> visual state object.</summary><value>The list of property setters that establish the visual representation of the element when it is in the state that is named by <see langword="this" /> visual state object.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualState.StateTriggers">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.VisualState.TargetType">
            <summary>Gets or sets the type of element that <see langword="this" /> visual state object can target.</summary><value>The type of element that <see langword="this" /> visual state object can target.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.WebNavigatedEventArgs">
            <summary>Class that contains arguments for the event that is raised after web navigation completes.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.WebNavigatedEventArgs.#ctor(Microsoft.Maui.WebNavigationEvent,Microsoft.Maui.Controls.WebViewSource,System.String,Microsoft.Maui.WebNavigationResult)">
            <param name="navigationEvent">The navigation event that was raised.</param><param name="source">The web view source that originated the event.</param><param name="url">The URL of the navigation event.</param><param name="result">The result of the navigation that originated the event.</param><summary>Initializes a new <see cref="T:Microsoft.Maui.Controls.WebNavigatedEventArgs" /> instance.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.WebNavigatedEventArgs.Result">
            <summary>Gets a value that describes the result of the navigation.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.WebNavigatingEventArgs">
            <summary>Class that contains arguments for the event that is raised after web navigation begins.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.WebNavigatingEventArgs.#ctor(Microsoft.Maui.WebNavigationEvent,Microsoft.Maui.Controls.WebViewSource,System.String)">
            <param name="navigationEvent">The navigation event that was raised.</param><param name="source">The web view source that originated the event.</param><param name="url">The URL of the navigation event.</param><summary>Initializes a new <see cref="T:Microsoft.Maui.Controls.WebNavigatingEventArgs" /> instance.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.WebNavigatingEventArgs.Cancel">
            <summary>Gets or sets a value that indicates whether or not to cancel the navigation.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.WebNavigationEventArgs">
            <summary>TClass that contains arguments for the event that is when web navigation begins.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.WebNavigationEventArgs.NavigationEvent">
            <summary>Gets the navigation event that was raised.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.WebNavigationEventArgs.Source">
            <summary>Gets the element that performed the navigation.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.WebNavigationEventArgs.Url">
            <summary>The destination of the navigation.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.WebViewSource">
            <summary>Abstract class whose subclasses provide the data for a <see cref="T:Microsoft.Maui.Controls.WebView" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.WebViewSource.Load(Microsoft.Maui.IWebViewDelegate)">
            <param name="renderer">For internal use by the Microsoft.Maui.Controls platform.</param><summary>For internal use by the Microsoft.Maui.Controls platform.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.WebViewSourceTypeConverter">
            <summary>A <see cref="T:System.ComponentModel.TypeConverter" /> that converts a string to a <see cref="T:Microsoft.Maui.Controls.UrlWebViewSource" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.XmlnsDefinitionAttribute">
            <summary>Attribute specifying the mapping between an XML namespace and a CLR namespace.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.XmlnsDefinitionAttribute.XmlNamespace">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.XmlnsDefinitionAttribute.ClrNamespace">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.XmlnsDefinitionAttribute.AssemblyName">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.XmlnsDefinitionAttribute.#ctor(System.String,System.String)">
            <param name="xmlNamespace">To be added.</param><param name="clrNamespace">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Controls.XmlnsPrefixAttribute">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Controls.XmlnsPrefixAttribute.#ctor(System.String,System.String)">
            <param name="xmlNamespace">To be added.</param><param name="prefix">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.XmlnsPrefixAttribute.XmlNamespace">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Controls.XmlnsPrefixAttribute.Prefix">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Cadenza.Collections.OrderedDictionary`2.Comparer">
            <summary>
                Gets the equality comparer being used for <typeparamref name="TKey"/>.
            </summary>
        </member>
        <member name="P:Cadenza.Collections.OrderedDictionary`2.Item(System.Int32)">
            <summary>
                Gets the value at the specified index.
            </summary>
            <param name="index">The index to get the value at.</param>
            <returns>The value at the specified index.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
                <paramref name="index" /> is less than 0 or greater than
                <see cref="P:Cadenza.Collections.OrderedDictionary`2.Count" />.
            </exception>
        </member>
        <member name="M:Cadenza.Collections.OrderedDictionary`2.Clear">
            <summary>
                Clears the dictionary.
            </summary>
        </member>
        <member name="P:Cadenza.Collections.OrderedDictionary`2.Count">
            <summary>
                Gets the number of items in the dictionary.
            </summary>
        </member>
        <member name="M:Cadenza.Collections.OrderedDictionary`2.Add(`0,`1)">
            <summary>
                Adds the <paramref name="key" /> and <paramref name="value" /> to the dictionary.
            </summary>
            <param name="key">The key to associate with the <paramref name="value" />.</param>
            <param name="value">The value to add.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key" /> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="key" /> already exists in the dictionary.</exception>
        </member>
        <member name="M:Cadenza.Collections.OrderedDictionary`2.ContainsKey(`0)">
            <summary>
                Gets whether or not <paramref name="key" /> is in the dictionary.
            </summary>
            <param name="key">The key to look for.</param>
            <returns><c>true</c> if the key was found, <c>false</c> if not.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="key" /> is <c>null</c>.</exception>
        </member>
        <member name="P:Cadenza.Collections.OrderedDictionary`2.Item(`0)">
            <summary>
                Gets or sets the value associated with <paramref name="key" />.
            </summary>
            <param name="key">The key to get or set the value for.</param>
            <returns>The value associated with the key.</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"><paramref name="key" /> was not found attempting to get.</exception>
        </member>
        <member name="P:Cadenza.Collections.OrderedDictionary`2.Keys">
            <summary>
                Gets a read only collection of keys in the dictionary.
            </summary>
        </member>
        <member name="M:Cadenza.Collections.OrderedDictionary`2.Remove(`0)">
            <summary>
                Removes the key and associated value from the dictionary if found.
            </summary>
            <param name="key">The key to remove.</param>
            <returns><c>true</c> if the key was found, <c>false</c> if not.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Cadenza.Collections.OrderedDictionary`2.TryGetValue(`0,`1@)">
            <summary>
                Attempts to get the <paramref name="value" /> for the <paramref name="key" />.
            </summary>
            <param name="key">The key to search for.</param>
            <param name="value">The value, if found.</param>
            <returns><c>true</c> if the key was found, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="key" /> is <c>null</c>.</exception>
        </member>
        <member name="P:Cadenza.Collections.OrderedDictionary`2.Values">
            <summary>
                Gets a read only collection of values in the dictionary.
            </summary>
        </member>
        <member name="M:Cadenza.Collections.OrderedDictionary`2.RemoveAt(System.Int32)">
            <summary>
                Removes they key and associated value from the dictionary located at <paramref name="index" />.
            </summary>
            <param name="index">The index at which to remove an item.</param>
        </member>
        <member name="M:Cadenza.Collections.OrderedDictionary`2.ContainsValue(`1)">
            <summary>
                Gets whether or not <paramref name="value" /> is in the dictionary.
            </summary>
            <param name="value">The value to look for.</param>
            <returns><c>true</c> if the value was found, <c>false</c> if not.</returns>
        </member>
        <member name="M:Cadenza.Collections.OrderedDictionary`2.IndexOf(`0)">
            <summary>
                Gets the index of <paramref name="key" />.
            </summary>
            <param name="key">The key to find the index of.</param>
            <returns>-1 if the key was not found, the index otherwise.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Cadenza.Collections.OrderedDictionary`2.IndexOf(`0,System.Int32)">
            <summary>
                Gets the index of <paramref name="key" /> starting with <paramref name="startIndex" />.
            </summary>
            <param name="key">The key to find the index of.</param>
            <param name="startIndex">The index to start the search at.</param>
            <returns>-1 if the key was not found, the index otherwise.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key" /> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" /> is not within the valid range of indexes.</exception>
        </member>
        <member name="M:Cadenza.Collections.OrderedDictionary`2.IndexOf(`0,System.Int32,System.Int32)">
            <summary>
                Gets the index of <paramref name="key" /> between the range given by <paramref name="startIndex" /> and
                <paramref name="count" />.
            </summary>
            <param name="key">The key to find the index of.</param>
            <param name="startIndex">The index to start the search at.</param>
            <param name="count">How many items to search, including the <paramref name="startIndex" />.</param>
            <returns>-1 if the key was not found, the index otherwise.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key" /> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" /> is not within the valid range of indexes.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="startIndex" /> and <paramref name="count" /> are not a
                valid range.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="count" /> is less than 0.</exception>
        </member>
        <member name="M:Cadenza.Collections.OrderedDictionary`2.Insert(System.Int32,`0,`1)">
            <summary>
                Inserts the <paramref name="key" /> and <paramref name="value" /> at the specified index.
            </summary>
            <param name="index">The index to insert the key and value at.</param>
            <param name="key">The key to assicate with the <paramref name="value" />.</param>
            <param name="value">The value to insert.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key" /> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="index" /> is less than 0 or greater than
                <see cref="P:Cadenza.Collections.OrderedDictionary`2.Count" />
            </exception>
        </member>
    </members>
</doc>
